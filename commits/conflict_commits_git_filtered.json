[
  {
    "commit_hash": "bb6ac5ea13250b295b4620face2ea5c0c9809b0b",
    "commit_message": "Merge branch 'jc/apply-ws-prefix' into maint\n\n* jc/apply-ws-prefix:\n  apply: omit ws check for excluded paths\n  apply: hoist use_patch() helper for path exclusion up\n  apply: use the right attribute for paths in non-Git patches\n\nConflicts:\n\tbuiltin/apply.c\n"
  },
  {
    "commit_hash": "04cd47f553796263451c946061e175d847f388c3",
    "commit_message": "Merge branch 'jk/command-line-config-empty-string' into maint\n\n* jk/command-line-config-empty-string:\n  config: teach \"git -c\" to recognize an empty string\n\nConflicts:\n\tconfig.c\n"
  },
  {
    "commit_hash": "3097b687bea8817b4b0afd84db8c4b1079cea92f",
    "commit_message": "Merge branch 'jk/mv-submodules-fix' into maint\n\n* jk/mv-submodules-fix:\n  mv: prevent mismatched data when ignoring errors.\n  builtin/mv: fix out of bounds write\n\nConflicts:\n\tt/t7001-mv.sh\n"
  },
  {
    "commit_hash": "f8a3fd28fd9e61852f5944335e7338c52c8c5abd",
    "commit_message": "Merge branch 'es/rebase-i-no-abbrev' into maint\n\n* es/rebase-i-no-abbrev:\n  rebase -i: fix short SHA-1 collision\n  t3404: rebase -i: demonstrate short SHA-1 collision\n  t3404: make tests more self-contained\n\nConflicts:\n\tt/t3404-rebase-interactive.sh\n"
  },
  {
    "commit_hash": "250ee16c14c8b37b437fbfc7345313d7db32b95d",
    "commit_message": "Merge branch 'rs/empty-archive' into maint\n\n* rs/empty-archive:\n  t5004: resurrect original empty tar archive test\n  t5004: avoid using tar for checking emptiness of archive\n\nConflicts:\n\tt/t5004-archive-corner-cases.sh\n"
  },
  {
    "commit_hash": "81b4f18fb8f9356477157a3b9f0652d371cba835",
    "commit_message": "Merge branch 'js/transport-helper-error-reporting-fix' into fc/makefile\n\n* js/transport-helper-error-reporting-fix:\n  git-remote-testgit: build it to run under $SHELL_PATH\n  git-remote-testgit: further remove some bashisms\n  git-remote-testgit: avoid process substitution\n  t5801: \"VAR=VAL shell_func args\" is forbidden\n  transport-helper: update remote helper namespace\n  transport-helper: trivial code shuffle\n  transport-helper: warn when refspec is not used\n  transport-helper: clarify pushing without refspecs\n  transport-helper: update refspec documentation\n  transport-helper: clarify *:* refspec\n  transport-helper: improve push messages\n  transport-helper: mention helper name when it dies\n  transport-helper: report errors properly\n\nConflicts:\n\tt/t5801-remote-helpers.sh\n"
  },
  {
    "commit_hash": "be9d07f520ef10359202492652ee7a6001f7100b",
    "commit_message": "Merge branch 'jc/detached-head-doc' into maint\n\n* jc/detached-head-doc:\n  glossary: extend \"detached HEAD\" description\n\nConflicts:\n\tDocumentation/glossary-content.txt\n"
  },
  {
    "commit_hash": "a46221e9adcf3deb88c4fc904859205bf87f784c",
    "commit_message": "Merge branch 'rr/test-3200-style' into maint\n\n* rr/test-3200-style:\n  t3200 (branch): modernize style\n\nConflicts:\n\tt/t3200-branch.sh\n"
  },
  {
    "commit_hash": "a39b15b4f6a3f08b67b17d968935d177821e680f",
    "commit_message": "Merge branch 'as/check-ignore'\n\nAdd a new command \"git check-ignore\" for debugging .gitignore\nfiles.\n\nThe variable names may want to get cleaned up but that can be done\nin-tree.\n\n* as/check-ignore:\n  clean.c, ls-files.c: respect encapsulation of exclude_list_groups\n  t0008: avoid brace expansion\n  add git-check-ignore sub-command\n  setup.c: document get_pathspec()\n  add.c: extract new die_if_path_beyond_symlink() for reuse\n  add.c: extract check_path_for_gitlink() from treat_gitlinks() for reuse\n  pathspec.c: rename newly public functions for clarity\n  add.c: move pathspec matchers into new pathspec.c for reuse\n  add.c: remove unused argument from validate_pathspec()\n  dir.c: improve docs for match_pathspec() and match_pathspec_depth()\n  dir.c: provide clear_directory() for reclaiming dir_struct memory\n  dir.c: keep track of where patterns came from\n  dir.c: use a single struct exclude_list per source of excludes\n\nConflicts:\n\tbuiltin/ls-files.c\n\tdir.c\n"
  },
  {
    "commit_hash": "2adf7247ec1f82032f52682918c200716145bffd",
    "commit_message": "Merge branch 'nd/wildmatch'\n\nAllows pathname patterns in .gitignore and .gitattributes files\nwith double-asterisks \"foo/**/bar\" to match any number of directory\nhierarchies.\n\n* nd/wildmatch:\n  wildmatch: replace variable 'special' with better named ones\n  compat/fnmatch: respect NO_FNMATCH* even on glibc\n  wildmatch: fix \"**\" special case\n  t3070: Disable some failing fnmatch tests\n  test-wildmatch: avoid Windows path mangling\n  Support \"**\" wildcard in .gitignore and .gitattributes\n  wildmatch: make /**/ match zero or more directories\n  wildmatch: adjust \"**\" behavior\n  wildmatch: fix case-insensitive matching\n  wildmatch: remove static variable force_lower_case\n  wildmatch: make wildmatch's return value compatible with fnmatch\n  t3070: disable unreliable fnmatch tests\n  Integrate wildmatch to git\n  wildmatch: follow Git's coding convention\n  wildmatch: remove unnecessary functions\n  Import wildmatch from rsync\n  ctype: support iscntrl, ispunct, isxdigit and isprint\n  ctype: make sane_ctype[] const array\n\nConflicts:\n\tMakefile\n"
  },
  {
    "commit_hash": "971e829cd84cf95203cec44d22d0e009f98ddbf5",
    "commit_message": "Merge branch 'jk/pathspec-literal'\n\nAllow scripts to feed literal paths to commands that take\npathspecs, by disabling wildcard globbing.\n\n* jk/pathspec-literal:\n  add global --literal-pathspecs option\n\nConflicts:\n\tdir.c\n"
  },
  {
    "commit_hash": "6b8731258d06001217254ef67a3553d3fe601737",
    "commit_message": "Merge branch 'jc/same-encoding'\n\nVarious codepaths checked if two encoding names are the same using\nad-hoc code and some of them ended up asking iconv() to convert\nbetween \"utf8\" and \"UTF-8\".  The former is not a valid way to spell\nthe encoding name, but often people use it by mistake, and we\nequated them in some but not all codepaths. Introduce a new helper\nfunction to make these codepaths consistent.\n\n* jc/same-encoding:\n  reencode_string(): introduce and use same_encoding()\n\nConflicts:\n\tbuiltin/mailinfo.c\n"
  },
  {
    "commit_hash": "b652ada42a76548569a0dc9c9cf356343f9e1c3a",
    "commit_message": "Merge branch 'maint'\n\n* maint:\n  l10n: zh_CN.po: translate 1 new message\n\nConflicts:\n\tpo/zh_CN.po\n\nSigned-off-by: Jiang Xin <worldhello.net@gmail.com>\n"
  },
  {
    "commit_hash": "8cde60210dd01f23d89d9eb8b6f08fb9ef3a11b8",
    "commit_message": "Merge branch 'jk/http-backend-keep-committer-ident-env' into maint\n\nBy Jeff King\n* jk/http-backend-keep-committer-ident-env:\n  http-backend: respect existing GIT_COMMITTER_* variables\n\nConflicts:\n\tt/t5541-http-push.sh\n"
  },
  {
    "commit_hash": "1a8e08cdf493818bc08cf7716f3135b2530eee57",
    "commit_message": "Merge branch 'maint' into master\n\n* maint: (10 commits)\n  l10n: de.po: translate one new message\n  l10n: de.po: unify translation of \"ahead\" and \"behind\"\n  l10n: de.po: collection of improvements\n  l10n: de.po: translate \"remote\" as \"extern\"\n  l10n: de.po: translate \"track\" as \"beobachten\"\n  ...\n\nConflicts:\n\tpo/de.po\n"
  },
  {
    "commit_hash": "5410ae422b0f3cfe604d393addcd13526e940112",
    "commit_message": "Merge branch 'jk/maint-status-porcelain-z-b' into HEAD\n\n* jk/maint-status-porcelain-z-b:\n  status: respect \"-b\" for porcelain format\n  status: fix null termination with \"-b\"\n  status: refactor null_termination option\n  commit: refactor option parsing\n\nConflicts:\n\twt-status.h\n"
  },
  {
    "commit_hash": "fc1320bfe2419e5eb3f43761e27ffa4f42a81825",
    "commit_message": "Merge branch 'zj/diff-empty-chmod'\n\n\"git diff --stat\" used to fully count a binary file with modified\nexecution bits whose contents is unmodified, which was not right.\n\nBy Zbigniew J\u0119drzejewski-Szmek (4) and Johannes Sixt (1)\n* zj/diff-empty-chmod:\n  t4006: Windows do not have /dev/zero\n  diff --stat: do not run diff on indentical files\n  diff --stat: report mode-only changes for binary files like text files\n  tests: check --[short]stat output after chmod\n  test: modernize style of t4006\n\nConflicts:\n\tdiff.c\n"
  },
  {
    "commit_hash": "cda03b6ad3e685ebf8349597afd71553a3ebb3a4",
    "commit_message": "Merge branch 'it/fetch-pack-many-refs' into maint\n\nWhen \"git fetch\" encounters repositories with too many references, the\ncommand line of \"fetch-pack\" that is run by a helper e.g. remote-curl, may\nfail to hold all of them. Now such an internal invocation can feed the\nreferences through the standard input of \"fetch-pack\".\n\nBy Ivan Todoroski\n* it/fetch-pack-many-refs:\n  remote-curl: main test case for the OS command line overflow\n  fetch-pack: test cases for the new --stdin option\n  remote-curl: send the refs to fetch-pack on stdin\n  fetch-pack: new --stdin option to read refs from stdin\n\nConflicts:\n\tt/t5500-fetch-pack.sh\n"
  },
  {
    "commit_hash": "3f263099fca47c278e696fbc0f0d5525318eae0a",
    "commit_message": "Merge branch 'ms/maint-config-error-at-eol-linecount'\n\nWhen \"git config\" diagnoses an error in a configuration file and\nshows the line number for the offending line, it miscounted if the\nerror was at the end of line.\n\nBy Martin Stenberg\n* ms/maint-config-error-at-eol-linecount:\n  config: report errors at the EOL with correct line number\n\nConflicts:\n\tt/t1300-repo-config.sh\n"
  },
  {
    "commit_hash": "aa145bf6f1cb45ad66250c40da3cd708956cf71e",
    "commit_message": "Merge branch 'jn/maint-do-not-match-with-unsanitized-searchtext'\n\nBy Jakub Narebski\n* jn/maint-do-not-match-with-unsanitized-searchtext:\n  gitweb: Fix fixed string (non-regexp) project search\n\nConflicts:\n\tgitweb/gitweb.perl\n"
  },
  {
    "commit_hash": "57f75f31311d380a3ccfbfe7f483253591cf0c87",
    "commit_message": "Merge branch 'cn/maint-branch-with-bad' into maint\n\n* cn/maint-branch-with-bad:\n  branch: don't assume the merge filter ref exists\n\nConflicts:\n\tt/t3200-branch.sh\n"
  },
  {
    "commit_hash": "a4d7615453eff93838d496db6b533b327c8cadfc",
    "commit_message": "Merge branch 'sp/smart-http-failure-to-push' into maint\n\n* sp/smart-http-failure-to-push:\n  : Mask SIGPIPE on the command channel going to a transport helper\n  disconnect from remote helpers more gently\n\nConflicts:\n\ttransport-helper.c\n"
  },
  {
    "commit_hash": "66b8800e53b20cda13446b462531641884089a77",
    "commit_message": "Merge branch 'rs/no-no-no-parseopt'\n\n* rs/no-no-no-parseopt:\n  parse-options: remove PARSE_OPT_NEGHELP\n  parse-options: allow positivation of options starting, with no-\n  test-parse-options: convert to OPT_BOOL()\n\nConflicts:\n\tbuiltin/grep.c\n"
  },
  {
    "commit_hash": "7d47367a47c8811f62ad8787091cb27e507c165e",
    "commit_message": "Merge branch 'cn/maint-branch-with-bad'\n\n* cn/maint-branch-with-bad:\n  branch: don't assume the merge filter ref exists\n\nConflicts:\n\tt/t3200-branch.sh\n"
  },
  {
    "commit_hash": "524ee675a36961c5b59302e84ffd08808f4f787e",
    "commit_message": "Merge branch 'jb/required-filter'\n\n* jb/required-filter:\n  Add a setting to require a filter to be successful\n\nConflicts:\n\tconvert.c\n"
  },
  {
    "commit_hash": "67f8d5b87d8ec3dcdb311f31b534332b74c93142",
    "commit_message": "Merge branch 'pj/remote-set-branches-usage-fix' into maint\n\n* pj/remote-set-branches-usage-fix:\n  remote: fix set-branches usage and documentation\n\nConflicts:\n\tbuiltin/remote.c\n"
  },
  {
    "commit_hash": "200e96e4af5e604174dff2f1487b26d3c42426f1",
    "commit_message": "Merge branch 'sp/smart-http-failure-to-push'\n\n* sp/smart-http-failure-to-push:\n  : Mask SIGPIPE on the command channel going to a transport helper\n  disconnect from remote helpers more gently\n\nConflicts:\n\ttransport-helper.c\n"
  },
  {
    "commit_hash": "d365a432271d2f6384cda9c37fb2fe463bdc2850",
    "commit_message": "Merge branch 'fc/push-prune'\n\n* fc/push-prune:\n  push: add '--prune' option\n  remote: refactor code into alloc_delete_ref()\n  remote: reorganize check_pattern_match()\n  remote: use a local variable in match_push_refs()\n\nConflicts:\n\tbuiltin/push.c\n"
  },
  {
    "commit_hash": "80809062452a65146d73ae483415acbc737fabf1",
    "commit_message": "Merge branch 'maint'\n\n* maint:\n  Document accumulated fixes since 1.7.9.2\n  Git 1.7.8.5\n  grep -P: Fix matching ^ and $\n  am: don't infloop for an empty input file\n  rebase -m: only call \"notes copy\" when rewritten exists and is non-empty\n  git-p4: remove bash-ism in t9800\n  git-p4: remove bash-ism in t9809\n  git-p4: fix submit regression with clientSpec and subdir clone\n  git-p4: set useClientSpec variable on initial clone\n  Makefile: add thread-utils.h to LIB_H\n\nConflicts:\n\tRelNotes\n\tt/t9809-git-p4-client-view.sh\n"
  },
  {
    "commit_hash": "bba612300149bacd3d0643d13ffa66b49185d151",
    "commit_message": "Merge branch 'pj/remote-set-branches-usage-fix'\n\n* pj/remote-set-branches-usage-fix:\n  remote: fix set-branches usage and documentation\n\nConflicts:\n\tbuiltin/remote.c\n"
  },
  {
    "commit_hash": "4d9e079e826c9b51b610260564111fa8385f7581",
    "commit_message": "Merge branch 'zj/decimal-width'\n\n* zj/decimal-width:\n  make lineno_width() from blame reusable for others\n\nConflicts:\n\tcache.h\n\tpager.c\n"
  },
  {
    "commit_hash": "6c63ab3ca7abc50155acc6c28380435fb79f7fa9",
    "commit_message": "Merge branch 'jc/maint-commit-ignore-i-t-a' into maint\n\n* jc/maint-commit-ignore-i-t-a:\n  commit: ignore intent-to-add entries instead of refusing\n\nConflicts:\n\tcache-tree.c\n"
  },
  {
    "commit_hash": "a95750c4e8f78eb89c277abd41f05be58715314f",
    "commit_message": "Merge branch 'jk/maint-tag-show-fixes' into maint\n\n* jk/maint-tag-show-fixes:\n  tag: do not show non-tag contents with \"-n\"\n  tag: die when listing missing or corrupt objects\n  tag: fix output of \"tag -n\" when errors occur\n\nConflicts:\n\tt/t7004-tag.sh\n"
  },
  {
    "commit_hash": "d1168b903320fc7c2c422ed08f881379e0bd8f35",
    "commit_message": "Merge branch 'jn/gitweb-search-utf-8'\n\n* jn/gitweb-search-utf-8:\n  gitweb: Allow UTF-8 encoded CGI query parameters and path_info\n\nConflicts:\n\tgitweb/gitweb.perl\n"
  },
  {
    "commit_hash": "44a1020d4d41b90be80745c7a16e2a49fa612b56",
    "commit_message": "Merge branch 'jc/maint-commit-ignore-i-t-a'\n\n* jc/maint-commit-ignore-i-t-a:\n  commit: ignore intent-to-add entries instead of refusing\n\nConflicts:\n\tcache-tree.c\n"
  },
  {
    "commit_hash": "1efb73322ad800cc679496124e8a1f498b52e5cb",
    "commit_message": "Merge branch 'jk/maint-tag-show-fixes'\n\n* jk/maint-tag-show-fixes:\n  tag: do not show non-tag contents with \"-n\"\n  tag: die when listing missing or corrupt objects\n  tag: fix output of \"tag -n\" when errors occur\n\nConflicts:\n\tt/t7004-tag.sh\n"
  },
  {
    "commit_hash": "5cdc9fbb0894023da8e4dab552dfdda8b662feab",
    "commit_message": "Merge branch 'jn/merge-no-edit-fix'\n\n* jn/merge-no-edit-fix:\n  merge: do not launch an editor on \"--no-edit $tag\"\n\nConflicts:\n\tbuiltin/merge.c\n"
  },
  {
    "commit_hash": "af6b37fab1a97943c804f4983452c7fde5b0fbbe",
    "commit_message": "Merge branch 'jc/pull-signed-tag'\n\n* jc/pull-signed-tag:\n  merge: use editor by default in interactive sessions\n\nConflicts:\n\tDocumentation/merge-options.txt\n"
  },
  {
    "commit_hash": "7010146f90abf0e4954690f6cd38a8463786fec7",
    "commit_message": "Merge branch 'rr/sequencer'\n\n* rr/sequencer:\n  sequencer: factor code out of revert builtin\n  revert: prepare to move replay_action to header\n\nConflicts:\n\tbuiltin/revert.c\n"
  },
  {
    "commit_hash": "bff64a9cdabee8476ad1d2e45f586a2d6a884363",
    "commit_message": "Merge branch 'tr/maint-mailinfo'\n\n* tr/maint-mailinfo:\n  mailinfo: with -b, keep space after [foo]\n  am: learn passing -b to mailinfo\n\nConflicts:\n\tgit-am.sh\n"
  },
  {
    "commit_hash": "d47553665833935157292a71248278a40e32c320",
    "commit_message": "Merge branch 'svn-fe' of git://repo.or.cz/git/jrn into jn/svn-fe\n\nThis simplifies svn-fe a great deal and fulfills a longstanding wish:\nsupport for dumps with deltas in them, and incremental imports.\n\nThe cost is that commandline usage of the svn-fe tool becomes a little\nmore complicated since it no longer keeps state itself but instead reads\nblobs back from fast-import in order to copy them between revisions and\napply deltas to them.\n\nAlso removes a couple of custom data structures and replaces them with\nstrbufs like other parts of Git.\n\n* 'svn-fe' of git://repo.or.cz/git/jrn: (32 commits)\n  vcs-svn: reset first_commit_done in fast_export_init\n  vcs-svn: do not initialize report_buffer twice\n  vcs-svn: avoid hangs from corrupt deltas\n  vcs-svn: guard against overflow when computing preimage length\n  vcs-svn: cap number of bytes read from sliding view\n  test-svn-fe: split off \"test-svn-fe -d\" into a separate function\n  vcs-svn: implement text-delta handling\n  vcs-svn: let deltas use data from preimage\n  vcs-svn: let deltas use data from postimage\n  vcs-svn: verify that deltas consume all inline data\n  vcs-svn: implement copyfrom_data delta instruction\n  vcs-svn: read instructions from deltas\n  vcs-svn: read inline data from deltas\n  vcs-svn: read the preimage when applying deltas\n  vcs-svn: parse svndiff0 window header\n  vcs-svn: skeleton of an svn delta parser\n  vcs-svn: make buffer_read_binary API more convenient\n  vcs-svn: learn to maintain a sliding view of a file\n  Makefile: list one vcs-svn/xdiff object or header per line\n  vcs-svn: avoid using ls command twice\n  ...\n\nConflicts:\n\tMakefile\n\tcontrib/svn-fe/svn-fe.txt\n"
  },
  {
    "commit_hash": "6e06367ab0586189940a7f08c394d13fce14e87f",
    "commit_message": "Merge branch 'maint'\n\n* maint:\n  Git 1.7.8.4\n  Git 1.7.7.6\n  diff-index: enable recursive pathspec matching in unpack_trees\n\nConflicts:\n\tGIT-VERSION-GEN\n"
  },
  {
    "commit_hash": "d899cf559b6a93006993752e7a89d13606380227",
    "commit_message": "Merge branch 'maint-1.7.7' into maint\n\n* maint-1.7.7:\n  Git 1.7.7.6\n  diff-index: enable recursive pathspec matching in unpack_trees\n\nConflicts:\n\tGIT-VERSION-GEN\n"
  },
  {
    "commit_hash": "5de89d3abfca98b0dfd0280d28576940c913d60d",
    "commit_message": "Merge branch 'jc/show-sig'\n\n* jc/show-sig:\n  log --show-signature: reword the common two-head merge case\n  log-tree: show mergetag in log --show-signature output\n  log-tree.c: small refactor in show_signature()\n  commit --amend -S: strip existing gpgsig headers\n  verify_signed_buffer: fix stale comment\n  gpg-interface: allow use of a custom GPG binary\n  pretty: %G[?GS] placeholders\n  test \"commit -S\" and \"log --show-signature\"\n  log: --show-signature\n  commit: teach --gpg-sign option\n\nConflicts:\n\tbuiltin/commit-tree.c\n\tbuiltin/commit.c\n\tbuiltin/merge.c\n\tnotes-cache.c\n\tpretty.c\n"
  },
  {
    "commit_hash": "b5c12797b442ddf4256332fe4baf709f90bb57a5",
    "commit_message": "Merge branch 'jk/http-push-to-empty' into maint\n\n* jk/http-push-to-empty:\n  remote-curl: don't pass back fake refs\n\nConflicts:\n\tremote-curl.c\n"
  },
  {
    "commit_hash": "1aea303d7eafc5f178b253f4d069eb5f2acfb409",
    "commit_message": "Merge branch 'jk/maint-strbuf-missing-init'\n\n* jk/maint-strbuf-missing-init:\n  commit, merge: initialize static strbuf\n\nConflicts:\n\tbuiltin/merge.c\n"
  },
  {
    "commit_hash": "a4c628d71d43a00acbf42ff5704d9f812babc39d",
    "commit_message": "Merge branch 'jk/doc-fsck'\n\n* jk/doc-fsck:\n  docs: brush up obsolete bits of git-fsck manpage\n\nConflicts:\n\tDocumentation/git-fsck.txt\n"
  },
  {
    "commit_hash": "f35ccd9be2db9a55afd09ed1a9338c758fa63d82",
    "commit_message": "Merge branch 'nd/war-on-nul-in-commit'\n\n* nd/war-on-nul-in-commit:\n  commit_tree(): refuse commit messages that contain NULs\n  Convert commit_tree() to take strbuf as message\n  merge: abort if fails to commit\n\nConflicts:\n\tbuiltin/commit.c\n\tcommit.c\n\tcommit.h\n"
  },
  {
    "commit_hash": "ded408fd20e2fedb76850c9fa9bbaa26b888aa7c",
    "commit_message": "Merge branch 'jk/git-prompt'\n\n* jk/git-prompt:\n  contrib: add credential helper for OS X Keychain\n  Makefile: OS X has /dev/tty\n  Makefile: linux has /dev/tty\n  credential: use git_prompt instead of git_getpass\n  prompt: use git_terminal_prompt\n  add generic terminal prompt function\n  refactor git_getpass into generic prompt function\n  move git_getpass to its own source file\n  imap-send: don't check return value of git_getpass\n  imap-send: avoid buffer overflow\n\nConflicts:\n\tMakefile\n"
  },
  {
    "commit_hash": "200888ef3bbc150cc20b99e0aa039c751c00e07a",
    "commit_message": "Merge branch 'jk/http-push-to-empty'\n\n* jk/http-push-to-empty:\n  remote-curl: don't pass back fake refs\n\nConflicts:\n\tremote-curl.c\n"
  },
  {
    "commit_hash": "8d68493f20db71abeb77adc251b2a116fe45cdaa",
    "commit_message": "Merge branch 'mh/ref-api'\n\n* mh/ref-api:\n  add_ref(): take a (struct ref_entry *) parameter\n  create_ref_entry(): extract function from add_ref()\n  repack_without_ref(): remove temporary\n  resolve_gitlink_ref_recursive(): change to work with struct ref_cache\n  Pass a (ref_cache *) to the resolve_gitlink_*() helper functions\n  resolve_gitlink_ref(): improve docstring\n  get_ref_dir(): change signature\n  refs: change signatures of get_packed_refs() and get_loose_refs()\n  is_dup_ref(): extract function from sort_ref_array()\n  add_ref(): add docstring\n  parse_ref_line(): add docstring\n  is_refname_available(): remove the \"quiet\" argument\n  clear_ref_array(): rename from free_ref_array()\n  refs: rename parameters result -> sha1\n  refs: rename \"refname\" variables\n  struct ref_entry: document name member\n\nConflicts:\n\tcache.h\n\trefs.c\n"
  },
  {
    "commit_hash": "2dccad3c6f9df2b1eea7eb5617e2748a7f2daa40",
    "commit_message": "Merge branch 'ab/enable-i18n'\n\n* ab/enable-i18n:\n  i18n: add infrastructure for translating Git with gettext\n\nConflicts:\n\tMakefile\n"
  },
  {
    "commit_hash": "1d3a035d6d48bfa870b6ebe7c59f12b66e3a1b1c",
    "commit_message": "Merge branch 'jk/maint-push-over-dav'\n\n* jk/maint-push-over-dav:\n  http-push: enable \"proactive auth\"\n  t5540: test DAV push with authentication\n\nConflicts:\n\thttp.c\n"
  },
  {
    "commit_hash": "367d20ec6b9e8e297537f665fb528346bd0aff27",
    "commit_message": "Merge branch 'jk/credentials'\n\n* jk/credentials:\n  t: add test harness for external credential helpers\n  credentials: add \"store\" helper\n  strbuf: add strbuf_add*_urlencode\n  Makefile: unix sockets may not available on some platforms\n  credentials: add \"cache\" helper\n  docs: end-user documentation for the credential subsystem\n  credential: make relevance of http path configurable\n  credential: add credential.*.username\n  credential: apply helper config\n  http: use credential API to get passwords\n  credential: add function for parsing url components\n  introduce credentials API\n  t5550: fix typo\n  test-lib: add test_config_global variant\n\nConflicts:\n\tstrbuf.c\n"
  },
  {
    "commit_hash": "48b303675aa238c209e527feadcbb7ba1c025c97",
    "commit_message": "Merge branch 'jc/stream-to-pack'\n\n* jc/stream-to-pack:\n  bulk-checkin: replace fast-import based implementation\n  csum-file: introduce sha1file_checkpoint\n  finish_tmp_packfile(): a helper function\n  create_tmp_packfile(): a helper function\n  write_pack_header(): a helper function\n\nConflicts:\n\tpack.h\n"
  },
  {
    "commit_hash": "b3f17ac3d6609c1ccede32ef783d4f2e92e7eba6",
    "commit_message": "Merge branch 'ks/tag-cleanup'\n\n* ks/tag-cleanup:\n  git-tag: introduce --cleanup option\n\nConflicts:\n\tbuiltin/tag.c\n"
  },
  {
    "commit_hash": "9e6324c4d784c36d2558ccdea7c8470ac2701437",
    "commit_message": "Merge branch 'maint'\n\n* maint:\n  Update draft release notes for 1.7.8.1\n  Git 1.7.7.5\n  Git 1.7.6.5\n  blame: don't overflow time buffer\n  fetch: create status table using strbuf\n\nConflicts:\n\tRelNotes\n"
  },
  {
    "commit_hash": "2e8722fc9e34a53ae19f2b60b1d3038aa2af0ae6",
    "commit_message": "Merge branch 'jc/maint-pack-object-cycle' into maint\n\n* jc/maint-pack-object-cycle:\n  pack-object: tolerate broken packs that have duplicated objects\n\nConflicts:\n\tbuiltin/pack-objects.c\n"
  },
  {
    "commit_hash": "8311158c66e0d83df950ea837fb1cb332c51f798",
    "commit_message": "Merge branch 'maint-1.7.7' into maint\n\n* maint-1.7.7:\n  Git 1.7.7.5\n  Git 1.7.6.5\n  blame: don't overflow time buffer\n  fetch: create status table using strbuf\n  checkout,merge: loosen overwriting untracked file check based on info/exclude\n  cast variable in call to free() in builtin/diff.c and submodule.c\n  apply: get rid of useless x < 0 comparison on a size_t type\n\nConflicts:\n\tDocumentation/git.txt\n\tGIT-VERSION-GEN\n\tRelNotes\n\tbuiltin/fetch.c\n"
  },
  {
    "commit_hash": "7857e3246fef2fdfa3c0fc645cd3d72ff3e6572b",
    "commit_message": "Merge branch 'maint-1.7.6' into maint-1.7.7\n\n* maint-1.7.6:\n  Git 1.7.6.5\n  blame: don't overflow time buffer\n  fetch: create status table using strbuf\n\nConflicts:\n\tDocumentation/git.txt\n\tGIT-VERSION-GEN\n\tRelNotes\n"
  },
  {
    "commit_hash": "6d1cdadbeeb03f40250526e29b1f1a91582911d8",
    "commit_message": "Merge branch 'ml/mailmap' into maint-1.7.6\n\n* ml/mailmap:\n  mailmap: xcalloc mailmap_info\n\nConflicts:\n\tmailmap.c\n"
  },
  {
    "commit_hash": "d2c78075496d818d04cc04583b35af117c3a95ed",
    "commit_message": "Merge branch 'sg/complete-refs'\n\n* sg/complete-refs:\n  completion: remove broken dead code from __git_heads() and __git_tags()\n  completion: fast initial completion for config 'remote.*.fetch' value\n  completion: improve ls-remote output filtering in __git_refs_remotes()\n  completion: query only refs/heads/ in __git_refs_remotes()\n  completion: support full refs from remote repositories\n  completion: improve ls-remote output filtering in __git_refs()\n  completion: make refs completion consistent for local and remote repos\n  completion: optimize refs completion\n  completion: document __gitcomp()\n\nConflicts:\n\tcontrib/completion/git-completion.bash\n"
  },
  {
    "commit_hash": "b7f7c07977ab6e41899b835b873a1ac499eaa2b3",
    "commit_message": "Merge branch 'nd/resolve-ref'\n\n* nd/resolve-ref:\n  Copy resolve_ref() return value for longer use\n  Convert many resolve_ref() calls to read_ref*() and ref_exists()\n\nConflicts:\n\tbuiltin/fmt-merge-msg.c\n\tbuiltin/merge.c\n\trefs.c\n"
  },
  {
    "commit_hash": "eb8aa3d2c2849cb3a44396b89054339df38e2bfa",
    "commit_message": "Merge branch 'jc/pull-signed-tag'\n\n* jc/pull-signed-tag:\n  commit-tree: teach -m/-F options to read logs from elsewhere\n  commit-tree: update the command line parsing\n  commit: teach --amend to carry forward extra headers\n  merge: force edit and no-ff mode when merging a tag object\n  commit: copy merged signed tags to headers of merge commit\n  merge: record tag objects without peeling in MERGE_HEAD\n  merge: make usage of commit->util more extensible\n  fmt-merge-msg: Add contents of merged tag in the merge message\n  fmt-merge-msg: package options into a structure\n  fmt-merge-msg: avoid early returns\n  refs DWIMmery: use the same rule for both \"git fetch\" and others\n  fetch: allow \"git fetch $there v1.0\" to fetch a tag\n  merge: notice local merging of tags and keep it unwrapped\n  fetch: do not store peeled tag object names in FETCH_HEAD\n  Split GPG interface into its own helper library\n\nConflicts:\n\tbuiltin/fmt-merge-msg.c\n\tbuiltin/merge.c\n"
  },
  {
    "commit_hash": "a4043aeafed7962716a513e38ca1d5e192e7e831",
    "commit_message": "Merge branch 'jc/request-pull-show-head-4'\n\n* jc/request-pull-show-head-4:\n  request-pull: use the annotated tag contents\n  fmt-merge-msg.c: Fix an \"dubious one-bit signed bitfield\" sparse error\n  environment.c: Fix an sparse \"symbol not declared\" warning\n  builtin/log.c: Fix an \"Using plain integer as NULL pointer\" warning\n  fmt-merge-msg: use branch.$name.description\n  request-pull: use the branch description\n  request-pull: state what commit to expect\n  request-pull: modernize style\n  branch: teach --edit-description option\n  format-patch: use branch description in cover letter\n  branch: add read_branch_desc() helper function\n\nConflicts:\n\tbuiltin/branch.c\n"
  },
  {
    "commit_hash": "ef87690b27fd1facdc8cc48f6789a930939303a3",
    "commit_message": "Merge branch 'rs/allocate-cache-entry-individually'\n\n* rs/allocate-cache-entry-individually:\n  cache.h: put single NUL at end of struct cache_entry\n  read-cache.c: allocate index entries individually\n\nConflicts:\n\tread-cache.c\n"
  },
  {
    "commit_hash": "cddec4f8aea4809131dc1b1765d6c8e2a498a58e",
    "commit_message": "Merge branch 'jc/maint-pack-object-cycle'\n\n* jc/maint-pack-object-cycle:\n  pack-object: tolerate broken packs that have duplicated objects\n\nConflicts:\n\tbuiltin/pack-objects.c\n"
  },
  {
    "commit_hash": "3686aa1caf907d22fe318c28efe93f0e7870ba50",
    "commit_message": "Merge branch 'maint' into tj/imap-send-remove-unused\n\n* maint: (18123 commits)\n  documentation fix: git difftool uses diff tools, not merge tools.\n  Git 1.7.7.4\n  Makefile: add missing header file dependencies\n  notes merge: eliminate OUTPUT macro\n  mailmap: xcalloc mailmap_info\n  name-rev --all: do not even attempt to describe non-commit object\n  Git 1.7.7.3\n  docs: Update install-doc-quick\n  docs: don't mention --quiet or --exit-code in git-log(1)\n  Git 1.7.7.2\n  t7511: avoid use of reserved filename on Windows.\n  clone: Quote user supplied path in a single quote pair\n  read-cache.c: fix index memory allocation\n  make the sample pre-commit hook script reject names with newlines, too\n  Reindent closing bracket using tab instead of spaces\n  Git 1.7.7.1\n  RelNotes/1.7.7.1: setgid bit patch is about fixing \"git init\" via Makefile setting\n  gitweb: fix regression when filtering out forks\n  Almost ready for 1.7.7.1\n  pack-objects: don't traverse objects unnecessarily\n  ...\n\nConflicts:\n\timap-send.c\n"
  },
  {
    "commit_hash": "7b51c33b376d22195dba1c4e067180164fd35dbf",
    "commit_message": "Merge branch 'jk/maint-1.6.2-upload-archive' into jk/maint-upload-archive\n\n* jk/maint-1.6.2-upload-archive:\n  archive: don't let remote clients get unreachable commits\n\nConflicts:\n\tarchive.c\n\tarchive.h\n\tbuiltin-archive.c\n\tbuiltin/upload-archive.c\n\tt/t5000-tar-tree.sh\n"
  },
  {
    "commit_hash": "79cfe0c5c4920bf68da548ad0d5bcdb425ce8d5f",
    "commit_message": "Merge branch 'ml/mailmap' into maint\n\n* ml/mailmap:\n  mailmap: xcalloc mailmap_info\n\nConflicts:\n\tmailmap.c\n"
  },
  {
    "commit_hash": "01e0f162a70f61de0b7aa0e9d8c49c03cbafeb64",
    "commit_message": "Merge branch 'jn/maint-notes-avoid-va-args' into maint\n\n* jn/maint-notes-avoid-va-args:\n  notes merge: eliminate OUTPUT macro\n\nConflicts:\n\tnotes-merge.c\n"
  },
  {
    "commit_hash": "916034b93ce45bdedfb1c5cef270e6eba2a26fea",
    "commit_message": "Merge branch 'jc/maint-remove-renamed-ref' into maint\n\n* jc/maint-remove-renamed-ref:\n  branch -m/-M: remove undocumented RENAMED-REF\n\nConflicts:\n\trefs.c\n"
  },
  {
    "commit_hash": "0814d6e554c45636f41856cc2204abe2f661560c",
    "commit_message": "Merge branch 'jk/pull-rebase-with-work-tree' into maint\n\n* jk/pull-rebase-with-work-tree:\n  pull,rebase: handle GIT_WORK_TREE better\n\nConflicts:\n\tgit-pull.sh\n"
  },
  {
    "commit_hash": "a4fdd79f13ec0551be94d7a3ac57e87434239f11",
    "commit_message": "Merge branch 'bc/attr-ignore-case' into maint\n\n* bc/attr-ignore-case:\n  attr.c: respect core.ignorecase when matching attribute patterns\n  attr: read core.attributesfile from git_default_core_config\n  builtin/mv.c: plug miniscule memory leak\n  cleanup: use internal memory allocation wrapper functions everywhere\n  attr.c: avoid inappropriate access to strbuf \"buf\" member\n\nConflicts:\n\tremote.c\n"
  },
  {
    "commit_hash": "b919f8404a9e212b3b9d602d4060e440072a0303",
    "commit_message": "Merge branch 'ss/blame-textconv-fake-working-tree'\n\n* ss/blame-textconv-fake-working-tree:\n  (squash) test for previous\n  blame.c: Properly initialize strbuf after calling, textconv_object()\n\nConflicts:\n\tt/t8006-blame-textconv.sh\n"
  },
  {
    "commit_hash": "9c0c09f791b1bfd2a04aa0e48190d304627293d2",
    "commit_message": "Merge branch 'cn/fetch-prune'\n\n* cn/fetch-prune:\n  fetch: treat --tags like refs/tags/*:refs/tags/* when pruning\n  fetch: honor the user-provided refspecs when pruning refs\n  remote: separate out the remote_find_tracking logic into query_refspecs\n  t5510: add tests for fetch --prune\n  fetch: free all the additional refspecs\n\nConflicts:\n\tremote.c\n"
  },
  {
    "commit_hash": "10b2a48113b8ab6b8f48229eb40fc3637ce025ae",
    "commit_message": "Merge branch 'maint'\n\n* maint:\n  Git 1.7.7.1\n  RelNotes/1.7.7.1: setgid bit patch is about fixing \"git init\" via Makefile setting\n\nConflicts:\n\tGIT-VERSION-GEN\n"
  },
  {
    "commit_hash": "e3353046eeb1df8eafdb76efd62407fec070bce5",
    "commit_message": "Merge branch 'jc/maint-remove-renamed-ref'\n\n* jc/maint-remove-renamed-ref:\n  branch -m/-M: remove undocumented RENAMED-REF\n\nConflicts:\n\trefs.c\n"
  },
  {
    "commit_hash": "e75a59adfcc4fd048690e5b25f9a8c31d8011d53",
    "commit_message": "Merge branch 'jk/daemon-msgs'\n\n* jk/daemon-msgs:\n  daemon: give friendlier error messages to clients\n\nConflicts:\n\tdaemon.c\n"
  },
  {
    "commit_hash": "b76c561a74cd366786b7b762795fba1551b42149",
    "commit_message": "Merge branch 'jc/unseekable-bundle'\n\n* jc/unseekable-bundle:\n  bundle: add parse_bundle_header() helper function\n  bundle: allowing to read from an unseekable fd\n\nConflicts:\n\ttransport.c\n"
  },
  {
    "commit_hash": "d25a265220f7e9a50693d0ec4bb05c7be0539d69",
    "commit_message": "Merge branch 'nd/maint-autofix-tag-in-head' into maint\n\n* nd/maint-autofix-tag-in-head:\n  Accept tags in HEAD or MERGE_HEAD\n  merge: remove global variable head[]\n  merge: use return value of resolve_ref() to determine if HEAD is invalid\n  merge: keep stash[] a local variable\n\nConflicts:\n\tbuiltin/merge.c\n"
  },
  {
    "commit_hash": "3dfbe68fc29248feea3a384e156497ca2463f932",
    "commit_message": "Merge branch 'js/merge-edit-option'\n\n* js/merge-edit-option:\n  Teach merge the '[-e|--edit]' option\n\nConflicts:\n\tbuiltin/merge.c\n"
  },
  {
    "commit_hash": "f2b516352527c6ddf338143e4ade0ef4713f85eb",
    "commit_message": "Merge branch 'jk/pull-rebase-with-work-tree'\n\n* jk/pull-rebase-with-work-tree:\n  pull,rebase: handle GIT_WORK_TREE better\n\nConflicts:\n\tgit-pull.sh\n"
  },
  {
    "commit_hash": "a200dc8e62563165df1105eae0e980a44059c6fb",
    "commit_message": "Merge branch 'bc/attr-ignore-case'\n\n* bc/attr-ignore-case:\n  attr.c: respect core.ignorecase when matching attribute patterns\n  attr: read core.attributesfile from git_default_core_config\n  builtin/mv.c: plug miniscule memory leak\n  cleanup: use internal memory allocation wrapper functions everywhere\n  attr.c: avoid inappropriate access to strbuf \"buf\" member\n\nConflicts:\n\ttransport-helper.c\n"
  },
  {
    "commit_hash": "3f7d11c45421051a010690c3b9cc28bce98b8c3f",
    "commit_message": "Merge branch 'tc/fetch-leak'\n\n* tc/fetch-leak:\n  fetch: plug two leaks on error exit in store_updated_refs\n\nConflicts:\n\tbuiltin/fetch.c\n"
  },
  {
    "commit_hash": "cdc2b2f32cbeab0e2496a59a03a52043f59ebea9",
    "commit_message": "Merge branch 'ph/push-to-delete-nothing'\n\n* ph/push-to-delete-nothing:\n  receive-pack: don't pass non-existent refs to post-{receive,update} hooks\n\nConflicts:\n\tbuiltin/receive-pack.c\n"
  },
  {
    "commit_hash": "7c4f050ae1e140a81f66b5cf92ad2c8673cfda8b",
    "commit_message": "Merge branch 'nm/grep-object-sha1-lock' into maint\n\n* nm/grep-object-sha1-lock:\n  grep: Fix race condition in delta_base_cache\n\nConflicts:\n\tbuiltin/grep.c\n"
  },
  {
    "commit_hash": "9fddaf78964a835160a0b27cdac724c27aab09bf",
    "commit_message": "Merge branch 'jc/maint-grep-untracked-exclude' into jc/grep-untracked-exclude\n\n* jc/maint-grep-untracked-exclude:\n  grep: fix the error message that mentions --exclude\n\nConflicts:\n\tbuiltin/grep.c\n"
  },
  {
    "commit_hash": "0941d6054524bc91f45bf3cbb1c641712b0e0e6d",
    "commit_message": "Merge branch 'rs/pending'\n\n* rs/pending:\n  commit: factor out clear_commit_marks_for_object_array\n  checkout: use leak_pending flag\n  bundle: use leak_pending flag\n  bisect: use leak_pending flag\n  revision: add leak_pending flag\n  checkout: use add_pending_{object,sha1} in orphan check\n  revision: factor out add_pending_sha1\n  checkout: check for \"Previous HEAD\" notice in t2020\n\nConflicts:\n\tbuiltin/checkout.c\n\trevision.c\n"
  },
  {
    "commit_hash": "0fd8cb3fec7abb36505a150fe5cfa9b1d8b85496",
    "commit_message": "Merge branch 'nd/maint-autofix-tag-in-head'\n\n* nd/maint-autofix-tag-in-head:\n  Accept tags in HEAD or MERGE_HEAD\n  merge: remove global variable head[]\n  merge: use return value of resolve_ref() to determine if HEAD is invalid\n  merge: keep stash[] a local variable\n\nConflicts:\n\tbuiltin/merge.c\n"
  },
  {
    "commit_hash": "af543833d4e10163af8045859cc081969fa5fcec",
    "commit_message": "Merge branch 'jc/parse-options-boolean'\n\n* jc/parse-options-boolean:\n  apply: use OPT_NOOP_NOARG\n  revert: use OPT_NOOP_NOARG\n  parseopt: add OPT_NOOP_NOARG\n  archive.c: use OPT_BOOL()\n  parse-options: deprecate OPT_BOOLEAN\n\nConflicts:\n\tbuiltin/revert.c\n"
  },
  {
    "commit_hash": "2c5c66be6ecdd10f5a88c3548a1494bf9edf483a",
    "commit_message": "Merge branch 'jp/get-ref-dir-unsorted'\n\n* jp/get-ref-dir-unsorted:\n  refs.c: free duplicate entries in the ref array instead of leaking them\n  refs.c: abort ref search if ref array is empty\n  refs.c: ensure struct whose member may be passed to realloc is initialized\n  refs: Use binary search to lookup refs faster\n  Don't sort ref_list too early\n\nConflicts:\n\trefs.c\n"
  },
  {
    "commit_hash": "efc5fb6a77780c53c6636326ca82ff87b17e4c5f",
    "commit_message": "Merge branch 'fg/submodule-git-file-git-dir'\n\n* fg/submodule-git-file-git-dir:\n  Move git-dir for submodules\n  rev-parse: add option --resolve-git-dir <path>\n\nConflicts:\n\tcache.h\n\tgit-submodule.sh\n"
  },
  {
    "commit_hash": "278f7e6f6dc1b515f192daf836fe75d733435774",
    "commit_message": "Merge branch 'js/maint-no-cherry-pick-head-after-punted' into js/no-cherry-pick-head-after-punted\n\n* js/maint-no-cherry-pick-head-after-punted:\n  cherry-pick: do not give irrelevant advice when cherry-pick punted\n  revert.c: defer writing CHERRY_PICK_HEAD till it is safe to do so\n\nConflicts:\n\tbuiltin/revert.c\n"
  },
  {
    "commit_hash": "1077bf1ff676cd172a09b88204422228f21d7cbf",
    "commit_message": "Merge branch 'mg/branch-list'\n\n* mg/branch-list:\n  t3200: clean up checks for file existence\n  branch: -v does not automatically imply --list\n  branch: allow pattern arguments\n  branch: introduce --list option\n  git-branch: introduce missing long forms for the options\n  git-tag: introduce long forms for the options\n  t6040: test branch -vv\n\nConflicts:\n\tDocumentation/git-tag.txt\n\tt/t3200-branch.sh\n"
  },
  {
    "commit_hash": "6f62cd7ab1c47a7ea32ab05cf1292d82c47310e9",
    "commit_message": "Merge branch 'jc/receive-verify'\n\n* jc/receive-verify:\n  receive-pack: check connectivity before concluding \"git push\"\n  check_everything_connected(): libify\n  check_everything_connected(): refactor to use an iterator\n  fetch: verify we have everything we need before updating our ref\n\nConflicts:\n\tbuiltin/fetch.c\n"
  },
  {
    "commit_hash": "ca0c9764bfe4f5d33551b5cca74eb0966f796baf",
    "commit_message": "Merge branch 'jc/fetch-pack-fsck-objects'\n\n* jc/fetch-pack-fsck-objects:\n  test: fetch/receive with fsckobjects\n  transfer.fsckobjects: unify fetch/receive.fsckobjects\n  fetch.fsckobjects: verify downloaded objects\n\nConflicts:\n\tDocumentation/config.txt\n\tbuiltin/fetch-pack.c\n"
  },
  {
    "commit_hash": "00723b02912cc9dae1ee5601ab4b942fdd42ff52",
    "commit_message": "Merge branch 'nm/grep-object-sha1-lock'\n\n* nm/grep-object-sha1-lock:\n  grep: Fix race condition in delta_base_cache\n\nConflicts:\n\tbuiltin/grep.c\n"
  },
  {
    "commit_hash": "dbfae86a7b0bf9f9a4f37dbc916e8d26a5f9d51c",
    "commit_message": "Merge branch 'jc/maint-grep-untracked-exclude' into jc/grep-untracked-exclude\n\n* jc/maint-grep-untracked-exclude:\n  grep: teach --untracked and --exclude-standard options\n  grep --no-index: don't use git standard exclusions\n  grep: do not use --index in the short usage output\n\nConflicts:\n\tDocumentation/git-grep.txt\n\tbuiltin/grep.c\n"
  },
  {
    "commit_hash": "2f9e2e75874e0f0722382106e2e189cc3f95cc7d",
    "commit_message": "Merge branch 'maint'\n\n* maint:\n  Prepare for 1.7.6.3 maintenance release\n  SubmittingPathces: remove Cogito reference\n\nConflicts:\n\tRelNotes\n"
  },
  {
    "commit_hash": "7baf32a829e6e253f8b3b683da470be36b54c377",
    "commit_message": "Merge branch 'jn/doc-dashdash' into maint\n\n* jn/doc-dashdash:\n  Documentation/i18n: quote double-dash for AsciiDoc\n  Documentation: quote double-dash for AsciiDoc\n\nConflicts:\n\tDocumentation/git-mergetool--lib.txt\n"
  },
  {
    "commit_hash": "3fc44a10f62fdca29558dc553a3e12949af30637",
    "commit_message": "Merge branch 'jk/maint-1.7.2-status-ignored' into maint\n\n* jk/maint-1.7.2-status-ignored:\n  git status --ignored: tests and docs\n  status: fix bug with missing --ignore files\n\nConflicts:\n\tDocumentation/git-status.txt\n\tt/t7508-status.sh\n"
  },
  {
    "commit_hash": "e7734c6c9b04d78e970b8de4765cdebd984ec6e6",
    "commit_message": "Merge branch 'gb/maint-am-patch-format-error-message'\n\n* gb/maint-am-patch-format-error-message:\n  am: format is in $patch_format, not parse_patch\n\nConflicts:\n\tgit-am.sh\n"
  },
  {
    "commit_hash": "2478bd8318c3ad6eceb7b99f01db29499f63b759",
    "commit_message": "Merge branch 'jc/maint-clone-alternates'\n\n* jc/maint-clone-alternates:\n  clone: clone from a repository with relative alternates\n  clone: allow more than one --reference\n\nConflicts:\n\tbuiltin/clone.c\n"
  },
  {
    "commit_hash": "f946b465d7fa13a235dd5653d37c7babb1ceb233",
    "commit_message": "Merge branch 'jk/color-and-pager'\n\n* jk/color-and-pager:\n  want_color: automatically fallback to color.ui\n  diff: don't load color config in plumbing\n  config: refactor get_colorbool function\n  color: delay auto-color decision until point of use\n  git_config_colorbool: refactor stdout_is_tty handling\n  diff: refactor COLOR_DIFF from a flag into an int\n  setup_pager: set GIT_PAGER_IN_USE\n  t7006: use test_config helpers\n  test-lib: add helper functions for config\n  t7006: modernize calls to unset\n\nConflicts:\n\tbuiltin/commit.c\n\tparse-options.c\n"
  },
  {
    "commit_hash": "c9321a0e20f3461cf4ae07a8320aa80480107f24",
    "commit_message": "Merge branch 'jc/maint-combined-diff-work-tree' into maint\n\n* jc/maint-combined-diff-work-tree:\n  diff -c/--cc: do not mistake \"resolved as deletion\" as \"use working tree\"\n\nConflicts:\n\tcombine-diff.c\n"
  },
  {
    "commit_hash": "ffa69e61d3c5730bd4b65a465efc130b0ef3c7df",
    "commit_message": "Merge branch 'cb/maint-quiet-push' into maint\n\n* cb/maint-quiet-push:\n  receive-pack: do not overstep command line argument array\n  propagate --quiet to send-pack/receive-pack\n\nConflicts:\n\tDocumentation/git-receive-pack.txt\n\tDocumentation/git-send-pack.txt\n"
  },
  {
    "commit_hash": "6dd5622f68157f471c4f784e8c41f39e8c5163fc",
    "commit_message": "Merge branch 'cb/maint-quiet-push'\n\n* cb/maint-quiet-push:\n  receive-pack: do not overstep command line argument array\n  propagate --quiet to send-pack/receive-pack\n\nConflicts:\n\tDocumentation/git-receive-pack.txt\n\tDocumentation/git-send-pack.txt\n"
  },
  {
    "commit_hash": "660578d4da9d71fbc1e553c95d18987b40af5f0f",
    "commit_message": "Merge branch 'jc/maint-combined-diff-work-tree'\n\n* jc/maint-combined-diff-work-tree:\n  diff -c/--cc: do not mistake \"resolved as deletion\" as \"use working tree\"\n\nConflicts:\n\tcombine-diff.c\n"
  },
  {
    "commit_hash": "b14b969ab98d5dac835e57a2b6b9e9229b2e1c97",
    "commit_message": "Merge branch 'rc/histogram-diff' into HEAD\n\n* rc/histogram-diff:\n  xdiff/xhistogram: drop need for additional variable\n  xdiff/xhistogram: rely on xdl_trim_ends()\n  xdiff/xhistogram: rework handling of recursed results\n  xdiff: do away with xdl_mmfile_next()\n  Make test number unique\n  xdiff/xprepare: use a smaller sample size for histogram diff\n  xdiff/xprepare: skip classification\n  teach --histogram to diff\n  t4033-diff-patience: factor out tests\n  xdiff/xpatience: factor out fall-back-diff function\n  xdiff/xprepare: refactor abort cleanups\n  xdiff/xprepare: use memset()\n\nConflicts:\n\txdiff/xprepare.c\n"
  },
  {
    "commit_hash": "50b68aeb392537a730a86349293acf046a778b74",
    "commit_message": "Merge branch 'maint'\n\n* maint:\n  Prepare for 1.7.6.1\n  am: refresh the index at start and --resolved\n\nConflicts:\n\tGIT-VERSION-GEN\n\tRelNotes\n"
  },
  {
    "commit_hash": "f4af7f19639457d71c4e9b53892b937468824cac",
    "commit_message": "Merge branch 'jl/submodule-add-relurl-wo-upstream' into maint\n\n* jl/submodule-add-relurl-wo-upstream:\n  submodule add: clean up duplicated code\n  submodule add: allow relative repository path even when no url is set\n  submodule add: test failure when url is not configured in superproject\n\nConflicts:\n\tgit-submodule.sh\n"
  },
  {
    "commit_hash": "f253376dcbadb384d8c8af287c3f9e2271cb5ff4",
    "commit_message": "Merge branch 'jc/diff-index-quick-exit-early' into maint\n\n* jc/diff-index-quick-exit-early:\n  diff-index --quiet: learn the \"stop feeding the backend early\" logic\n\nConflicts:\n\tunpack-trees.h\n"
  },
  {
    "commit_hash": "0e9b12f874955cba820efd786e176be8ba1acc2e",
    "commit_message": "Merge branch 'rc/maint-http-wrong-free'\n\n* rc/maint-http-wrong-free:\n  Makefile: some changes for http-related flag documentation\n  http.c: fix an invalid free()\n\nConflicts:\n\tMakefile\n"
  },
  {
    "commit_hash": "1421fd9df4f1e3ed232bd1c683c6e264a464a41e",
    "commit_message": "Merge branch 'oa/pull-reflog'\n\n* oa/pull-reflog:\n  pull: remove extra space from reflog message\n\nConflicts:\n\tgit-pull.sh\n"
  },
  {
    "commit_hash": "22f41286be2a07cf96d71a795eaee54b702bb570",
    "commit_message": "Merge branch 'dc/stash-con-untracked'\n\n* dc/stash-con-untracked:\n  stash: Add --include-untracked option to stash and remove all untracked files\n\nConflicts:\n\tgit-stash.sh\n"
  },
  {
    "commit_hash": "b3743df73f9e0238ea360b2a640e5e5c99517e9a",
    "commit_message": "Merge branch 'mz/doc-synopsis-verse'\n\n* mz/doc-synopsis-verse:\n  Documentation: use [verse] for SYNOPSIS sections\n\nConflicts:\n\tDocumentation/git-mergetool--lib.txt\n"
  },
  {
    "commit_hash": "c56dce3b811400e73e7b68464cf229aa0edb9d8f",
    "commit_message": "Merge branch 'jl/submodule-add-relurl-wo-upstream'\n\n* jl/submodule-add-relurl-wo-upstream:\n  submodule add: clean up duplicated code\n  submodule add: allow relative repository path even when no url is set\n  submodule add: test failure when url is not configured in superproject\n\nConflicts:\n\tgit-submodule.sh\n"
  },
  {
    "commit_hash": "d907bf8ef327cd47433d4a4bb0a1bb4e96b6e340",
    "commit_message": "Merge branch 'jc/index-pack'\n\n* jc/index-pack:\n  verify-pack: use index-pack --verify\n  index-pack: show histogram when emulating \"verify-pack -v\"\n  index-pack: start learning to emulate \"verify-pack -v\"\n  index-pack: a miniscule refactor\n  index-pack --verify: read anomalous offsets from v2 idx file\n  write_idx_file: need_large_offset() helper function\n  index-pack: --verify\n  write_idx_file: introduce a struct to hold idx customization options\n  index-pack: group the delta-base array entries also by type\n\nConflicts:\n\tbuiltin/verify-pack.c\n\tcache.h\n\tsha1_file.c\n"
  },
  {
    "commit_hash": "0591c0a5be7d58dfe2c69c8a81b2cebbb0337320",
    "commit_message": "Merge branch 'jc/submodule-sync-no-auto-vivify'\n\n* jc/submodule-sync-no-auto-vivify:\n  submodule add: always initialize .git/config entry\n  submodule sync: do not auto-vivify uninteresting submodule\n\nConflicts:\n\tgit-submodule.sh\n"
  },
  {
    "commit_hash": "eb4f4076aa89d38221ee513a5f28f22124029c90",
    "commit_message": "Merge branch 'jc/zlib-wrap'\n\n* jc/zlib-wrap:\n  zlib: allow feeding more than 4GB in one go\n  zlib: zlib can only process 4GB at a time\n  zlib: wrap deflateBound() too\n  zlib: wrap deflate side of the API\n  zlib: wrap inflateInit2 used to accept only for gzip format\n  zlib: wrap remaining calls to direct inflate/inflateEnd\n  zlib wrapper: refactor error message formatter\n\nConflicts:\n\tsha1_file.c\n"
  },
  {
    "commit_hash": "13ac90a47878b0bb26375a1a6901a629aa2b2def",
    "commit_message": "Merge branch 'bc/submodule-foreach-stdin-fix-1.7.4'\n\n* bc/submodule-foreach-stdin-fix-1.7.4:\n  git-submodule.sh: preserve stdin for the command spawned by foreach\n  t/t7407: demonstrate that the command called by 'submodule foreach' loses stdin\n\nConflicts:\n\tgit-submodule.sh\n"
  },
  {
    "commit_hash": "ff968f03e6951e8ee84cfb923f8905296286134a",
    "commit_message": "Merge branch 'fg/submodule-keep-updating'\n\n* fg/submodule-keep-updating:\n  git-submodule.sh: clarify the \"should we die now\" logic\n  submodule update: continue when a checkout fails\n  git-sh-setup: add die_with_status\n\nConflicts:\n\tgit-submodule.sh\n"
  },
  {
    "commit_hash": "4d9e42f8f11c57b32b976a943c8ddaf6214e64b8",
    "commit_message": "Merge commit 'v1.6.0' into jc/checkout-reflog-fix\n\n* commit 'v1.6.0': (2063 commits)\n  GIT 1.6.0\n  git-p4: chdir now properly sets PWD environment variable in msysGit\n  Improve error output of git-rebase\n  t9300: replace '!' with test_must_fail\n  Git.pm: Make File::Spec and File::Temp requirement lazy\n  Documentation: document the pager.* configuration setting\n  git-stash: improve synopsis in help and manual page\n  Makefile: building git in cygwin 1.7.0\n  git-am: ignore --binary option\n  bash-completion: Add non-command git help files to bash-completion\n  Fix t3700 on filesystems which do not support question marks in names\n  Utilise our new p4_read_pipe and p4_write_pipe wrappers\n  Add p4 read_pipe and write_pipe wrappers\n  bash completion: Add '--merge' long option for 'git log'\n  bash completion: Add completion for 'git mergetool'\n  git format-patch documentation: clarify what --cover-letter does\n  bash completion: 'git apply' should use 'fix' not 'strip'\n  t5304-prune: adjust file mtime based on system time rather than file mtime\n  test-parse-options: use appropriate cast in length_callback\n  Fix escaping of glob special characters in pathspecs\n  ...\n\nConflicts:\n\tbuiltin-checkout.c\n"
  },
  {
    "commit_hash": "50cebdade1eb97ed667543b56e5b9d4db2a921f8",
    "commit_message": "Merge branch 'jk/maint-1.7.2-status-ignored'\n\n* jk/maint-1.7.2-status-ignored:\n  git status --ignored: tests and docs\n  status: fix bug with missing --ignore files\n\nConflicts:\n\tDocumentation/git-status.txt\n\tt/t7508-status.sh\n"
  },
  {
    "commit_hash": "57e4d61686b20ef3ad4982753407cf0bd87335f2",
    "commit_message": "Merge branch 'jc/diff-index-quick-exit-early'\n\n* jc/diff-index-quick-exit-early:\n  diff-index --quiet: learn the \"stop feeding the backend early\" logic\n\nConflicts:\n\tunpack-trees.h\n"
  },
  {
    "commit_hash": "0faf247485c2dc92fd8b492a5c4b49237e0338ee",
    "commit_message": "Merge branch 'jc/advice-about-to-lose-commit'\n\n* jc/advice-about-to-lose-commit:\n  checkout: make advice when reattaching the HEAD less loud\n\nConflicts:\n\tbuiltin/checkout.c\n"
  },
  {
    "commit_hash": "a8d3d265450d8fc2c14a4bcd2f16d28d4ea0196b",
    "commit_message": "Merge branch 'db/delta-applier' into svn-fe\n\n* db/delta-applier:\n  vcs-svn: cap number of bytes read from sliding view\n  test-svn-fe: split off \"test-svn-fe -d\" into a separate function\n  vcs-svn: let deltas use data from preimage\n  vcs-svn: let deltas use data from postimage\n  vcs-svn: verify that deltas consume all inline data\n  vcs-svn: implement copyfrom_data delta instruction\n  vcs-svn: read instructions from deltas\n  vcs-svn: read inline data from deltas\n  vcs-svn: read the preimage when applying deltas\n  vcs-svn: parse svndiff0 window header\n  vcs-svn: skeleton of an svn delta parser\n  vcs-svn: make buffer_read_binary API more convenient\n  vcs-svn: learn to maintain a sliding view of a file\n  Makefile: list one vcs-svn/xdiff object or header per line\n\nConflicts:\n\tMakefile\n\tvcs-svn/LICENSE\n"
  },
  {
    "commit_hash": "456a4c08b8d8ddefda939014c15877ace3e3f499",
    "commit_message": "Merge branch 'jk/diff-not-so-quick'\n\n* jk/diff-not-so-quick:\n  diff: futureproof \"stop feeding the backend early\" logic\n  diff_tree: disable QUICK optimization with diff filter\n\nConflicts:\n\tdiff.c\n"
  },
  {
    "commit_hash": "6c92972d7f5ab247a8cab5e4b88cb281bf201970",
    "commit_message": "Merge branch 'bc/maint-status-z-to-use-porcelain'\n\n* bc/maint-status-z-to-use-porcelain:\n  builtin/commit.c: set status_format _after_ option parsing\n  t7508: demonstrate status's failure to use --porcelain format with -z\n\nConflicts:\n\tbuiltin/commit.c\n"
  },
  {
    "commit_hash": "f67d2e82d6d2fd385d3d20e8d348eaf69dc95041",
    "commit_message": "Merge branch 'jk/format-patch-am'\n\n* jk/format-patch-am:\n  format-patch: preserve subject newlines with -k\n  clean up calling conventions for pretty.c functions\n  pretty: add pp_commit_easy function for simple callers\n  mailinfo: always clean up rfc822 header folding\n  t: test subject handling in format-patch / am pipeline\n\nConflicts:\n\tbuiltin/branch.c\n\tbuiltin/log.c\n\tcommit.h\n"
  },
  {
    "commit_hash": "2d11f21c365821ccba1e093f22b99ad71b955f21",
    "commit_message": "Merge remote-tracking branch 'ko/maint' into jc/diff-index-quick-exit-early\n\n* ko/maint: (4352 commits)\n  git-submodule.sh: separate parens by a space to avoid confusing some shells\n  Documentation/technical/api-diff.txt: correct name of diff_unmerge()\n  read_gitfile_gently: use ssize_t to hold read result\n  remove tests of always-false condition\n  rerere.c: diagnose a corrupt MERGE_RR when hitting EOF between TAB and '\\0'\n  Git 1.7.5.3\n  init/clone: remove short option -L and document --separate-git-dir\n  do not read beyond end of malloc'd buffer\n  git-svn: Fix git svn log --show-commit\n  Git 1.7.5.2\n  provide a copy of the LGPLv2.1\n  test core.gitproxy configuration\n  copy_gecos: fix not adding nlen to len when processing \"&\"\n  Update draft release notes to 1.7.5.2\n  Documentation/git-fsck.txt: fix typo: unreadable -> unreachable\n  send-pack: avoid deadlock on git:// push with failed pack-objects\n  connect: let callers know if connection is a socket\n  connect: treat generic proxy processes like ssh processes\n  sideband_demux(): fix decl-after-stmt\n  t3503: test cherry picking and reverting root commits\n  ...\n\nConflicts:\n\tdiff.c\n"
  },
  {
    "commit_hash": "1f9a980636d39c08c1cf1c13a6e6584d9d039e0e",
    "commit_message": "Merge branch 'jk/maint-config-alias-fix'\n\n* jk/maint-config-alias-fix:\n  handle_options(): do not miscount how many arguments were used\n  config: always parse GIT_CONFIG_PARAMETERS during git_config\n  git_config: don't peek at global config_parameters\n  config: make environment parsing routines static\n\nConflicts:\n\tconfig.c\n"
  },
  {
    "commit_hash": "8784e4dddeb16a89dd19bfb879788b8df0aac1f5",
    "commit_message": "Merge branch 'rg/no-gecos-in-pwent'\n\n* rg/no-gecos-in-pwent:\n  ident: add NO_GECOS_IN_PWENT for systems without pw_gecos in struct passwd\n\nConflicts:\n\tMakefile\n"
  },
  {
    "commit_hash": "bac9c06ba093d9254cb2ab3eed074722a3e635a6",
    "commit_message": "Merge branch 'jk/git-connection-deadlock-fix' into maint-1.7.4\n\n* jk/git-connection-deadlock-fix:\n  test core.gitproxy configuration\n  send-pack: avoid deadlock on git:// push with failed pack-objects\n  connect: let callers know if connection is a socket\n  connect: treat generic proxy processes like ssh processes\n\nConflicts:\n\tconnect.c\n"
  },
  {
    "commit_hash": "5590fe762ff9d68f6968d80979e446576e61e2e1",
    "commit_message": "Merge branch 'jk/git-connection-deadlock-fix' into maint\n\n* jk/git-connection-deadlock-fix:\n  test core.gitproxy configuration\n  send-pack: avoid deadlock on git:// push with failed pack-objects\n  connect: let callers know if connection is a socket\n  connect: treat generic proxy processes like ssh processes\n\nConflicts:\n\tconnect.c\n"
  },
  {
    "commit_hash": "e9f3f8b6f4141dae526e9792ba6dede7aa038622",
    "commit_message": "Merge branch 'db/delta-applier' into db/text-delta\n\n* db/delta-applier:\n  vcs-svn: let deltas use data from preimage\n  vcs-svn: let deltas use data from postimage\n  vcs-svn: verify that deltas consume all inline data\n  vcs-svn: implement copyfrom_data delta instruction\n  vcs-svn: read instructions from deltas\n  vcs-svn: read inline data from deltas\n  vcs-svn: read the preimage when applying deltas\n  vcs-svn: parse svndiff0 window header\n  vcs-svn: skeleton of an svn delta parser\n  vcs-svn: make buffer_read_binary API more convenient\n  vcs-svn: learn to maintain a sliding view of a file\n  Makefile: list one vcs-svn/xdiff object or header per line\n\nConflicts:\n\tMakefile\n\tvcs-svn/LICENSE\n"
  },
  {
    "commit_hash": "c19d653c4fcdc93169507c09f8f66ebffbdbb9a5",
    "commit_message": "Merge branch 'db/svn-fe-code-purge' into svn-fe\n\n* db/svn-fe-code-purge:\n  vcs-svn: drop obj_pool\n  vcs-svn: drop treap\n  vcs-svn: drop string_pool\n  vcs-svn: pass paths through to fast-import\n\nConflicts:\n\tvcs-svn/fast_export.c\n\tvcs-svn/fast_export.h\n\tvcs-svn/repo_tree.c\n\tvcs-svn/repo_tree.h\n\tvcs-svn/string_pool.c\n\tvcs-svn/svndump.c\n\tvcs-svn/trp.txt\n"
  },
  {
    "commit_hash": "9ecfa8ae4c6701cae85c4f22fdfacffe22d8a75e",
    "commit_message": "Merge branch 'db/vcs-svn-incremental' into svn-fe\n\nThis teaches svn-fe to incrementally import into an existing\nrepository (at last!) at the expense of less convenient UI.  Think of\nit as growing pains.  This opens the door to many excellent things,\nand it would be a bad idea to discourage people from building on it\nfor much longer.\n\n* db/vcs-svn-incremental:\n  vcs-svn: avoid using ls command twice\n  vcs-svn: use mark from previous import for parent commit\n  vcs-svn: handle filenames with dq correctly\n  vcs-svn: quote paths correctly for ls command\n  vcs-svn: eliminate repo_tree structure\n  vcs-svn: add a comment before each commit\n  vcs-svn: save marks for imported commits\n  vcs-svn: use higher mark numbers for blobs\n  vcs-svn: set up channel to read fast-import cat-blob response\n\nConflicts:\n\tt/t9010-svn-fe.sh\n\tvcs-svn/fast_export.c\n\tvcs-svn/fast_export.h\n\tvcs-svn/repo_tree.c\n\tvcs-svn/svndump.c\n"
  },
  {
    "commit_hash": "61d7503da141f13bc916b36012760791761cc909",
    "commit_message": "Merge branch 'jc/replacing'\n\n* jc/replacing:\n  read_sha1_file(): allow selective bypassing of replacement mechanism\n  inline lookup_replace_object() calls\n  read_sha1_file(): get rid of read_sha1_file_repl() madness\n  t6050: make sure we test not just commit replacement\n  Declare lookup_replace_object() in cache.h, not in commit.h\n\nConflicts:\n\tenvironment.c\n"
  },
  {
    "commit_hash": "a66fae3827d4bf39ddfdc19bbb818d67e2a3c20a",
    "commit_message": "Merge branch 'jk/git-connection-deadlock-fix'\n\n* jk/git-connection-deadlock-fix:\n  test core.gitproxy configuration\n  send-pack: avoid deadlock on git:// push with failed pack-objects\n  connect: let callers know if connection is a socket\n  connect: treat generic proxy processes like ssh processes\n\nConflicts:\n\tconnect.c\n"
  },
  {
    "commit_hash": "e2e4aed5defb2df8dbd523613ff4ef46050abb07",
    "commit_message": "Merge branch 'jc/maint-pathspec-stdin-and-cmdline'\n\n* jc/maint-pathspec-stdin-and-cmdline:\n  setup_revisions(): take pathspec from command line and --stdin correctly\n\nConflicts:\n\trevision.c\n"
  },
  {
    "commit_hash": "36a45b4fa4cff868632162d4e3d00e1579298910",
    "commit_message": "Merge branch 'mg/merge-ff-config'\n\n* mg/merge-ff-config:\n  tests: check git does not barf on merge.ff values for future versions of git\n  merge: introduce merge.ff configuration variable\n\nConflicts:\n\tt/t7600-merge.sh\n"
  },
  {
    "commit_hash": "90e8b9b23dff20946a0eacdf8abedce7e32c1d78",
    "commit_message": "Merge branch 'jc/fix-add-u-unmerged' into maint\n\n* jc/fix-add-u-unmerged:\n  Fix \"add -u\" that sometimes fails to resolve unmerged paths\n\nConflicts:\n\tbuiltin/add.c\n"
  },
  {
    "commit_hash": "2f0db1d86bb89a30c6742b03c40b320c178b1097",
    "commit_message": "Merge branch 'jc/maint-branch-mergeoptions' into maint\n\n* jc/maint-branch-mergeoptions:\n  merge: make branch.<name>.mergeoptions correctly override merge.<option>\n\nConflicts:\n\tbuiltin/merge.c\n"
  },
  {
    "commit_hash": "32341b9df528e4fce87f53dee7bf8487009d01c3",
    "commit_message": "Merge branch 'maint'\n\n* maint:\n  Prepare for 1.7.5.2\n  t5400: Fix a couple of typos\n\nConflicts:\n\tRelNotes\n"
  },
  {
    "commit_hash": "c7fe5b61e15cc5195e33f7d5e5ec452e6966c1ad",
    "commit_message": "Merge branch 'jc/maint-branch-mergeoptions'\n\n* jc/maint-branch-mergeoptions:\n  merge: make branch.<name>.mergeoptions correctly override merge.<option>\n\nConflicts:\n\tbuiltin/merge.c\n"
  },
  {
    "commit_hash": "606ee4be54b5ef3c8593a71b4b1bd6b4ee2d323d",
    "commit_message": "Merge branch 'js/info-man-path'\n\n* js/info-man-path:\n  Documentation: clarify meaning of --html-path, --man-path, and --info-path\n  git: add --info-path and --man-path options\n\nConflicts:\n\tMakefile\n"
  },
  {
    "commit_hash": "ace8ebbcf5f07a5519cbeb0ae0571d8b40222e34",
    "commit_message": "Merge branch 'jk/format-patch-quote-special-in-from'\n\n* jk/format-patch-quote-special-in-from:\n  pretty: quote rfc822 specials in email addresses\n\nConflicts:\n\tpretty.c\n\tt/t4014-format-patch.sh\n"
  },
  {
    "commit_hash": "9fdc1cc872308869d76665be55367eef48f05ff6",
    "commit_message": "Merge branch 'aw/maint-rebase-i-p-no-ff'\n\n* aw/maint-rebase-i-p-no-ff:\n  git-rebase--interactive.sh: preserve-merges fails on merges created with no-ff\n\nConflicts:\n\tgit-rebase--interactive.sh\n"
  },
  {
    "commit_hash": "be44a20aa88b196b769dd894c0ac7a9ff5a7a1f6",
    "commit_message": "Merge branch 'jk/maint-stash-oob' into maint\n\n* jk/maint-stash-oob:\n  stash: fix false positive in the invalid ref test.\n  stash: fix accidental apply of non-existent stashes\n\nConflicts:\n\tt/t3903-stash.sh\n"
  },
  {
    "commit_hash": "0d405d72f5ffb499b40dd3a95886ae5a1fc13b30",
    "commit_message": "Merge branch 'nm/submodule-update-force'\n\n* nm/submodule-update-force:\n  submodule: Add --force option for git submodule update\n\nConflicts:\n\tt/t7406-submodule-update.sh\n"
  },
  {
    "commit_hash": "2d23c64ba2e91029f4ce932117a1772378d63cf3",
    "commit_message": "Merge branch 'jh/notes-add-ui'\n\n* jh/notes-add-ui:\n  Make \"git notes add\" more user-friendly when there are existing notes\n\nConflicts:\n\tbuiltin/notes.c\n"
  },
  {
    "commit_hash": "c67e367c50304c5a0701ae2bb8ecb7291f481ffd",
    "commit_message": "Merge branch 'nd/maint-setup'\n\n* nd/maint-setup:\n  Kill off get_relative_cwd()\n  setup: return correct prefix if worktree is '/'\n\nConflicts:\n\tdir.c\n\tsetup.c\n"
  },
  {
    "commit_hash": "1c08bf50cfcf924094eca56c2486a90e2bf1e6e2",
    "commit_message": "Merge branch 'maint'\n\n* maint:\n  Start 1.7.5.1 maintenance track\n  git-send-email: fix missing space in error message\n\nConflicts:\n\tRelNotes\n"
  },
  {
    "commit_hash": "fcbf164fcbf4110c7e2f96356d6707d56ba44ba4",
    "commit_message": "Merge branch 'jk/maint-stash-oob'\n\n* jk/maint-stash-oob:\n  stash: fix false positive in the invalid ref test.\n  stash: fix accidental apply of non-existent stashes\n\nConflicts:\n\tt/t3903-stash.sh\n"
  },
  {
    "commit_hash": "2071fb015bc673d2514142d7614b56a37b3faaf2",
    "commit_message": "Merge branch 'jl/submodule-fetch-on-demand'\n\n* jl/submodule-fetch-on-demand:\n  fetch/pull: Describe --recurse-submodule restrictions in the BUGS section\n  submodule update: Don't fetch when the submodule commit is already present\n  fetch/pull: Don't recurse into a submodule when commits are already present\n  Submodules: Add 'on-demand' value for the 'fetchRecurseSubmodule' option\n  config: teach the fetch.recurseSubmodules option the 'on-demand' value\n  fetch/pull: Add the 'on-demand' value to the --recurse-submodules option\n  fetch/pull: recurse into submodules when necessary\n\nConflicts:\n\tbuiltin/fetch.c\n\tsubmodule.c\n"
  },
  {
    "commit_hash": "44bc573436c98b7c6cd798af04c538f6e76f0f6e",
    "commit_message": "Merge branch 'maint'\n\n* maint:\n  Start preparing for 1.7.4.4\n  pull: do not clobber untracked files on initial pull\n  compat: add missing #include <sys/resource.h>\n\nConflicts:\n\tRelNotes\n"
  },
  {
    "commit_hash": "3967c995eed9f4046a1dde5ef520d1dbcdedfab8",
    "commit_message": "Merge branch 'jc/maint-rev-list-culled-boundary' into maint\n\n* jc/maint-rev-list-culled-boundary:\n  list-objects.c: don't add an unparsed NULL as a pending tree\n\nConflicts:\n\tlist-objects.c\n"
  },
  {
    "commit_hash": "c4b2ce69534e1d51f71142ba0e463ed89605ccd1",
    "commit_message": "Merge branch 'nd/init-gitdir'\n\n* nd/init-gitdir:\n  init, clone: support --separate-git-dir for .git file\n  git-init.txt: move description section up\n\nConflicts:\n\tbuiltin/clone.c\n"
  },
  {
    "commit_hash": "ffc5e3c958b66fb4babeba01483cc924bc2957a5",
    "commit_message": "Merge branch 'jc/merge-sans-branch'\n\n* jc/merge-sans-branch:\n  merge: merge with the default upstream branch without argument\n  merge: match the help text with the documentation\n\nConflicts:\n\tbuiltin/merge.c\n"
  },
  {
    "commit_hash": "6c80cd298a9f2f36ae4e741cf65d94b7c184fb82",
    "commit_message": "Merge branch 'ab/i18n-st'\n\n* ab/i18n-st: (69 commits)\n  i18n: git-shortlog basic messages\n  i18n: git-revert split up \"could not revert/apply\" message\n  i18n: git-revert literal \"me\" messages\n  i18n: git-revert \"Your local changes\" message\n  i18n: git-revert basic messages\n  i18n: git-notes GIT_NOTES_REWRITE_MODE error message\n  i18n: git-notes basic commands\n  i18n: git-gc \"Auto packing the repository\" message\n  i18n: git-gc basic messages\n  i18n: git-describe basic messages\n  i18n: git-clean clean.requireForce messages\n  i18n: git-clean basic messages\n  i18n: git-bundle basic messages\n  i18n: git-archive basic messages\n  i18n: git-status \"renamed: \" message\n  i18n: git-status \"Initial commit\" message\n  i18n: git-status \"Changes to be committed\" message\n  i18n: git-status shortstatus messages\n  i18n: git-status \"nothing to commit\" messages\n  i18n: git-status basic messages\n  ...\n\nConflicts:\n\tbuiltin/branch.c\n\tbuiltin/checkout.c\n\tbuiltin/clone.c\n\tbuiltin/commit.c\n\tbuiltin/grep.c\n\tbuiltin/merge.c\n\tbuiltin/push.c\n\tbuiltin/revert.c\n\tt/t3507-cherry-pick-conflict.sh\n\tt/t7607-merge-overwrite.sh\n"
  },
  {
    "commit_hash": "b3369abfeb4b1630905de2ab516aeb946c0c19db",
    "commit_message": "Merge branch 'jc/fetch-progressive-stride'\n\n* jc/fetch-progressive-stride:\n  fetch-pack: use smaller handshake window for initial request\n  fetch-pack: progressively use larger handshake windows\n  fetch-pack: factor out hardcoded handshake window size\n\nConflicts:\n\tbuiltin/fetch-pack.c\n"
  },
  {
    "commit_hash": "4b28cd9f2fb755cdfe1b97130e84644ae932988c",
    "commit_message": "Merge branch 'jc/maint-rev-list-culled-boundary'\n\n* jc/maint-rev-list-culled-boundary:\n  list-objects.c: don't add an unparsed NULL as a pending tree\n\nConflicts:\n\tlist-objects.c\n"
  },
  {
    "commit_hash": "91b3c7ce8e189b90d3203265c9625806a15045e1",
    "commit_message": "Merge branch 'jc/maint-fetch-alt'\n\n* jc/maint-fetch-alt:\n  fetch-pack: objects in our alternates are available to us\n  refs_from_alternate: helper to use refs from alternates\n\nConflicts:\n\tbuiltin/receive-pack.c\n"
  },
  {
    "commit_hash": "41b9dd9d4f2f32f8450af59c30f3a7a2fc5a8cc7",
    "commit_message": "Merge branch 'db/length-as-hash' into svn-fe\n\n* db/length-as-hash:\n  vcs-svn: use strchr to find RFC822 delimiter\n  vcs-svn: implement perfect hash for top-level keys\n  vcs-svn: implement perfect hash for node-prop keys\n\nConflicts:\n\tvcs-svn/svndump.c\n"
  },
  {
    "commit_hash": "fa6c4bceabdb7bc4bf8946c4887f08e9765f5ff6",
    "commit_message": "Merge branch 'db/strbufs-for-metadata' into db/svn-fe-code-purge\n\n* db/strbufs-for-metadata:\n  vcs-svn: use strbuf for author, UUID, and URL\n  vcs-svn: use strbuf for revision log\n\nConflicts:\n\tvcs-svn/fast_export.c\n\tvcs-svn/fast_export.h\n\tvcs-svn/repo_tree.c\n\tvcs-svn/svndump.c\n"
  },
  {
    "commit_hash": "5c674860eb8bfa1a8c0038fc2d32c4fc205e9d62",
    "commit_message": "Merge branch 'db/length-as-hash' (early part) into db/svn-fe-code-purge\n\n* 'db/length-as-hash' (early part):\n  vcs-svn: implement perfect hash for top-level keys\n  vcs-svn: implement perfect hash for node-prop keys\n  vcs-svn: improve reporting of input errors\n  vcs-svn: make buffer_copy_bytes return length read\n  vcs-svn: make buffer_skip_bytes return length read\n  vcs-svn: improve support for reading large files\n\nConflicts:\n\tvcs-svn/fast_export.c\n\tvcs-svn/svndump.c\n"
  },
  {
    "commit_hash": "1e239079f704b840778c263f35f1e299565d4a49",
    "commit_message": "Merge branch 'ab/i18n-basic'\n\n* ab/i18n-basic:\n  i18n: \"make distclean\" should clean up after \"make pot\"\n  i18n: Makefile: \"pot\" target to extract messages marked for translation\n  i18n: add stub Q_() wrapper for ngettext\n  i18n: do not poison translations unless GIT_GETTEXT_POISON envvar is set\n  i18n: add GETTEXT_POISON to simulate unfriendly translator\n  i18n: add no-op _() and N_() wrappers\n  commit, status: use status_printf{,_ln,_more} helpers\n  commit: refer to commit template as s->fp\n  wt-status: add helpers for printing wt-status lines\n\nConflicts:\n\tbuiltin/commit.c\n"
  },
  {
    "commit_hash": "f4784b3eab2e12e7a8fda7431572753f3a970c63",
    "commit_message": "Merge branch 'jn/status-translatable'\n\n* jn/status-translatable:\n  commit, status: use status_printf{,_ln,_more} helpers\n  commit: refer to commit template as s->fp\n  wt-status: add helpers for printing wt-status lines\n\nConflicts:\n\tbuiltin/commit.c\n"
  },
  {
    "commit_hash": "b2f6eab4027beaaa7415e70dad269bdc7cc27722",
    "commit_message": "Merge branch 'maint'\n\n* maint:\n  Prepare draft release notes to 1.7.4.2\n  gitweb: highlight: replace tabs with spaces\n  make_absolute_path: return the input path if it points to our buffer\n  valgrind: ignore SSE-based strlen invalid reads\n  diff --submodule: split into bite-sized pieces\n  cherry: split off function to print output lines\n  branch: split off function that writes tracking info and commit subject\n  standardize brace placement in struct definitions\n  compat: make gcc bswap an inline function\n  enums: omit trailing comma for portability\n\nConflicts:\n\tRelNotes\n"
  },
  {
    "commit_hash": "fc7ae9c156775cc9679c0bcc7156abb7dba1bd3a",
    "commit_message": "Merge branch 'nd/hash-object-sanity'\n\n* nd/hash-object-sanity:\n  Make hash-object more robust against malformed objects\n\nConflicts:\n\tcache.h\n"
  },
  {
    "commit_hash": "c0791f365e8024c35321a2c53856c3c63cd54299",
    "commit_message": "Merge branch 'uk/checkout-ambiguous-ref'\n\n* uk/checkout-ambiguous-ref:\n  Rename t2019 with typo \"amiguous\" that meant \"ambiguous\"\n  checkout: rearrange update_refs_for_switch for clarity\n  checkout: introduce --detach synonym for \"git checkout foo^{commit}\"\n  checkout: split off a function to peel away branchname arg\n  checkout: fix bug with ambiguous refs\n\nConflicts:\n\tbuiltin/checkout.c\n"
  },
  {
    "commit_hash": "a62bbf8f01c6b19cd1a5cf92a98f612176aa2b67",
    "commit_message": "Merge commit 'jn/svn-fe' of git://github.com/gitster/git into svn-fe\n\n* git://github.com/gitster/git:\n  vcs-svn: Allow change nodes for root of tree (/)\n  vcs-svn: Implement Prop-delta handling\n  vcs-svn: Sharpen parsing of property lines\n  vcs-svn: Split off function for handling of individual properties\n  vcs-svn: Make source easier to read on small screens\n  vcs-svn: More dump format sanity checks\n  vcs-svn: Reject path nodes without Node-action\n  vcs-svn: Delay read of per-path properties\n  vcs-svn: Combine repo_replace and repo_modify functions\n  vcs-svn: Replace = Delete + Add\n  vcs-svn: handle_node: Handle deletion case early\n  vcs-svn: Use mark to indicate nodes with included text\n  vcs-svn: Unclutter handle_node by introducing have_props var\n  vcs-svn: Eliminate node_ctx.mark global\n  vcs-svn: Eliminate node_ctx.srcRev global\n  vcs-svn: Check for errors from open()\n  vcs-svn: Allow simple v3 dumps (no deltas yet)\n\nConflicts:\n\tt/t9010-svn-fe.sh\n\tvcs-svn/svndump.c\n"
  },
  {
    "commit_hash": "1a9fe453263137be7d42e6fbfc041b5b2d9521d7",
    "commit_message": "Merge branch 'tr/merge-unborn-clobber'\n\n* tr/merge-unborn-clobber:\n  Exhibit merge bug that clobbers index&WT\n\nConflicts:\n\tt/t7607-merge-overwrite.sh\n"
  },
  {
    "commit_hash": "75513914784bb75447c71e3b001612ee37af386c",
    "commit_message": "Merge branch 'jc/unpack-trees'\n\n* jc/unpack-trees:\n  unpack_trees(): skip trees that are the same in all input\n  unpack-trees.c: cosmetic fix\n\nConflicts:\n\tunpack-trees.c\n"
  },
  {
    "commit_hash": "a8e4a5943a63c8fd4a3a9b70ccf4608bcc973707",
    "commit_message": "Merge branch 'maint-1.7.0' into maint\n\n* maint-1.7.0:\n  fast-import: introduce \"feature notes\" command\n  fast-import: clarify documentation of \"feature\" command\n\nConflicts:\n\tDocumentation/git-fast-import.txt\n"
  },
  {
    "commit_hash": "99e63ef24e18c8ca918922b052de96a8ceca48a4",
    "commit_message": "Merge branch 'maint'\n\n* maint:\n  rebase -i: clarify in-editor documentation of \"exec\"\n  tests: sanitize more git environment variables\n  fast-import: treat filemodify with empty tree as delete\n  rebase: give a better error message for bogus branch\n  rebase: use explicit \"--\" with checkout\n\nConflicts:\n\tt/t9300-fast-import.sh\n"
  },
  {
    "commit_hash": "7810c6b6d6cf91d624216623e2327d7cb63c1c92",
    "commit_message": "Merge branch 'rj/test-fixes'\n\n* rj/test-fixes:\n  t4135-*.sh: Skip the \"backslash\" tests on cygwin\n  t3032-*.sh: Do not strip CR from line-endings while grepping on MinGW\n  t3032-*.sh: Pass the -b (--binary) option to sed on cygwin\n  t6038-*.sh: Pass the -b (--binary) option to sed on cygwin\n\nConflicts:\n\tt/t3032-merge-recursive-options.sh\n"
  },
  {
    "commit_hash": "bf9b46c16d28c0e1f938947a98ca518f9644b0c0",
    "commit_message": "Merge branch 'jn/svn-fe' (early part)\n\n* 'jn/svn-fe' (early part):\n  vcs-svn: Error out for v3 dumps\n\nConflicts:\n\tt/t9010-svn-fe.sh\n"
  },
  {
    "commit_hash": "2cd900fcf577af2cc5094ba21d1699809649f3bc",
    "commit_message": "Merge branch 'maint'\n\n* maint:\n  Prepare for 1.7.3.5\n  Fix false positives in t3404 due to SHELL=/bin/false\n  close file on error in read_mmfile()\n\nConflicts:\n\tRelNotes\n"
  },
  {
    "commit_hash": "3ea3860758cc2501388059a89c1e5f4a90acb50d",
    "commit_message": "Merge branch 'jk/commit-die-on-bogus-ident'\n\n* jk/commit-die-on-bogus-ident:\n  commit: die before asking to edit the log message\n  ident: die on bogus date format\n\nConflicts:\n\tbuiltin/commit.c\n"
  },
  {
    "commit_hash": "02fedc0f4835de7414b78e21739464a29520c94a",
    "commit_message": "Merge branch 'pd/bash-4-completion'\n\n* pd/bash-4-completion:\n  bash: simple reimplementation of _get_comp_words_by_ref\n  bash: get --pretty=m<tab> completion to work with bash v4\n\nConflicts:\n\tcontrib/completion/git-completion.bash\n"
  },
  {
    "commit_hash": "716958c9a23cbb4bf671dc89e094742e8ec41793",
    "commit_message": "Merge branch 'tf/commit-list-prefix'\n\n* tf/commit-list-prefix:\n  commit: Add commit_list prefix in two function names.\n\nConflicts:\n\tsha1_name.c\n"
  },
  {
    "commit_hash": "914584266c7675d3d0fa18e0eed05742327b22e5",
    "commit_message": "Merge branch 'jn/fast-import-blob-access'\n\n* jn/fast-import-blob-access:\n  t9300: avoid short reads from dd\n  t9300: remove unnecessary use of /dev/stdin\n  fast-import: Allow cat-blob requests at arbitrary points in stream\n  fast-import: let importers retrieve blobs\n  fast-import: clarify documentation of \"feature\" command\n  fast-import: stricter parsing of integer options\n\nConflicts:\n\tfast-import.c\n"
  },
  {
    "commit_hash": "4bb4d30095fbc3b1689cc656e71f6a51e43fbd69",
    "commit_message": "Merge branch 'jl/fetch-submodule-recursive'\n\n* jl/fetch-submodule-recursive:\n  fetch_populated_submodules(): document dynamic allocation\n  Submodules: Add the \"fetchRecurseSubmodules\" config option\n  Add the 'fetch.recurseSubmodules' config setting\n  fetch/pull: Add the --recurse-submodules option\n\nConflicts:\n\tbuiltin/fetch.c\n"
  },
  {
    "commit_hash": "620b89cd98219db33ce499c7f8e50d091fe9b598",
    "commit_message": "Merge branch 'nd/extended-sha1-relpath'\n\n* nd/extended-sha1-relpath:\n  get_sha1: teach \":$n:<path>\" the same relative path logic\n  get_sha1: support relative path \":path\" syntax\n  Make prefix_path() return char* without const\n\nConflicts:\n\tsha1_name.c\n"
  },
  {
    "commit_hash": "52c9d8e27592347a03962f47999bd32caf578d0f",
    "commit_message": "Merge branch 'master' (early part) into pd/bash-4-completion\n\n* 'master' (early part): (529 commits)\n  completion: fix zsh check under bash with 'set -u'\n  Fix copy-pasted comments related to tree diff handling.\n  Git 1.7.3.2\n  {cvs,svn}import: use the new 'git read-tree --empty'\n  t/t9001-send-email.sh: fix stderr redirection in 'Invalid In-Reply-To'\n  Clarify and extend the \"git diff\" format documentation\n  git-show-ref.txt: clarify the pattern matching\n  documentation: git-config minor cleanups\n  Update test script annotate-tests.sh to handle missing/extra authors\n  Better advice on using topic branches for kernel development\n  Documentation: update implicit \"--no-index\" behavior in \"git diff\"\n  Documentation: expand 'git diff' SEE ALSO section\n  Documentation: diff can compare blobs\n  Documentation: gitrevisions is in section 7\n  fast-import: Allow filemodify to set the root\n  shell portability: no \"export VAR=VAL\"\n  CodingGuidelines: reword parameter expansion section\n  Documentation: update-index: -z applies also to --index-info\n  gitweb: Improve behavior for actionless path_info gitweb URLs\n  gitweb: Fix bug in evaluate_path_info\n  ...\n\nConflicts:\n\tGIT-VERSION-GEN\n\tRelNotes\n\tcontrib/completion/git-completion.bash\n"
  },
  {
    "commit_hash": "187b259dce5c5db17ef4cac09b163753e85e62cc",
    "commit_message": "Merge branch 'gc/http-with-non-ascii-username-url' into maint\n\n* gc/http-with-non-ascii-username-url:\n  Fix username and password extraction from HTTP URLs\n  t5550: test HTTP authentication and userinfo decoding\n\nConflicts:\n\tt/lib-httpd/apache.conf\n"
  },
  {
    "commit_hash": "1e86274cd4e544628d5f6e327eb62094051e7948",
    "commit_message": "Merge branch 'ef/win32-dirent'\n\n* ef/win32-dirent:\n  win32: use our own dirent.h\n  msvc: opendir: handle paths ending with a slash\n  win32: dirent: handle errors\n  msvc: opendir: do not start the search\n  msvc: opendir: allocate enough memory\n  msvc: opendir: fix malloc-failure\n\nConflicts:\n\tMakefile\n"
  },
  {
    "commit_hash": "6758af89e4bf3f767e189da3e09c3c939162872d",
    "commit_message": "Merge branch 'jn/git-cmd-h-bypass-setup'\n\n* jn/git-cmd-h-bypass-setup:\n  update-index -h: show usage even with corrupt index\n  merge -h: show usage even with corrupt index\n  ls-files -h: show usage even with corrupt index\n  gc -h: show usage even with broken configuration\n  commit/status -h: show usage even with broken configuration\n  checkout-index -h: show usage even in an invalid repository\n  branch -h: show usage even in an invalid repository\n\nConflicts:\n\tbuiltin/merge.c\n"
  },
  {
    "commit_hash": "3d90c796503efa3ca9812575a41cb8b019d27218",
    "commit_message": "Merge branch 'il/remote-fd-ext'\n\n* il/remote-fd-ext:\n  remote-fd/ext: finishing touches after code review\n  git-remote-ext\n  git-remote-fd\n  Add bidirectional_transfer_loop()\n\nConflicts:\n\tcompat/mingw.h\n"
  },
  {
    "commit_hash": "16c06fcb39eec5505c383b412ca2254bccf354a5",
    "commit_message": "Merge branch 'gc/http-with-non-ascii-username-url'\n\n* gc/http-with-non-ascii-username-url:\n  Fix username and password extraction from HTTP URLs\n  t5550: test HTTP authentication and userinfo decoding\n\nConflicts:\n\tt/lib-httpd/apache.conf\n"
  },
  {
    "commit_hash": "657072f3ac5519f146a947253c9959909b38c293",
    "commit_message": "Merge branch 'jh/notes-merge'\n\n* jh/notes-merge: (23 commits)\n  Provide 'git merge --abort' as a synonym to 'git reset --merge'\n  cmd_merge(): Parse options before checking MERGE_HEAD\n  Provide 'git notes get-ref' to easily retrieve current notes ref\n  git notes merge: Add testcases for merging notes trees at different fanouts\n  git notes merge: Add another auto-resolving strategy: \"cat_sort_uniq\"\n  git notes merge: --commit should fail if underlying notes ref has moved\n  git notes merge: List conflicting notes in notes merge commit message\n  git notes merge: Manual conflict resolution, part 2/2\n  git notes merge: Manual conflict resolution, part 1/2\n  Documentation: Preliminary docs on 'git notes merge'\n  git notes merge: Add automatic conflict resolvers (ours, theirs, union)\n  git notes merge: Handle real, non-conflicting notes merges\n  builtin/notes.c: Refactor creation of notes commits.\n  git notes merge: Initial implementation handling trivial merges only\n  builtin/notes.c: Split notes ref DWIMmery into a separate function\n  notes.c: Use two newlines (instead of one) when concatenating notes\n  (trivial) t3303: Indent with tabs instead of spaces for consistency\n  notes.h/c: Propagate combine_notes_fn return value to add_note() and beyond\n  notes.h/c: Allow combine_notes functions to remove notes\n  notes.c: Reorder functions in preparation for next commit\n  ...\n\nConflicts:\n\tbuiltin.h\n"
  },
  {
    "commit_hash": "9bec60d3a52fa10b276214f8d255d6ff05a04b77",
    "commit_message": "Merge branch 'pn/commit-autosquash'\n\n* pn/commit-autosquash:\n  add tests of commit --squash\n  commit: --squash option for use with rebase --autosquash\n  add tests of commit --fixup\n  commit: --fixup option for use with rebase --autosquash\n  pretty.c: teach format_commit_message() to reencode the output\n  commit: helper methods to reduce redundant blocks of code\n\nConflicts:\n\tDocumentation/git-commit.txt\n\tt/t3415-rebase-autosquash.sh\n"
  },
  {
    "commit_hash": "5e738ae820ec53c45895b029baa3a1f63e654b1b",
    "commit_message": "Merge branch 'jj/icase-directory'\n\n* jj/icase-directory:\n  Support case folding in git fast-import when core.ignorecase=true\n  Support case folding for git add when core.ignorecase=true\n  Add case insensitivity support when using git ls-files\n  Add case insensitivity support for directories when using git status\n  Case insensitivity support for .gitignore via core.ignorecase\n  Add string comparison functions that respect the ignore_case variable.\n  Makefile & configure: add a NO_FNMATCH_CASEFOLD flag\n  Makefile & configure: add a NO_FNMATCH flag\n\nConflicts:\n\tMakefile\n\tconfig.mak.in\n\tconfigure.ac\n\tfast-import.c\n"
  },
  {
    "commit_hash": "b281796eeb925f5e91d27cd6c6c579c925577160",
    "commit_message": "Merge branch 'maint' to sync with Git 1.7.3.3\n\n* maint:\n  Git 1.7.3.3\n  CodingGuidelines: mention whitespace preferences for shell scripts\n  Documentation: do not misinterpret pull refspec as bold text\n\nConflicts:\n\tDocumentation/git-pull.txt\n\tRelNotes\n"
  },
  {
    "commit_hash": "2de3c142d3dc4ef329a3984af32583cf1e5af432",
    "commit_message": "Merge branch 'maint'\n\n* maint:\n  Git 1.7.0.8\n  Documentation: Fix mark-up of lines with more than one tilde\n\nConflicts:\n\tGIT-VERSION-GEN\n"
  },
  {
    "commit_hash": "208247adb9fc3702f87c6ec3fc26bd85d10d73e6",
    "commit_message": "Merge branch 'cb/leading-path-removal'\n\n* cb/leading-path-removal:\n  use persistent memory for rejected paths\n  do not overwrite files in leading path\n  lstat_cache: optionally return match_len\n  add function check_ok_to_remove()\n  t7607: add leading-path tests\n  t7607: use test-lib functions and check MERGE_HEAD\n\nConflicts:\n\tt/t7607-merge-overwrite.sh\n"
  },
  {
    "commit_hash": "5acb623b72bde9ec96c48a8bb8f50e61371705ee",
    "commit_message": "Merge branch 'en/merge-recursive'\n\n* en/merge-recursive: (41 commits)\n  t6022: Use -eq not = to test output of wc -l\n  merge-recursive:make_room_for_directories - work around dumb compilers\n  merge-recursive: Remove redundant path clearing for D/F conflicts\n  merge-recursive: Make room for directories in D/F conflicts\n  handle_delete_modify(): Check whether D/F conflicts are still present\n  merge_content(): Check whether D/F conflicts are still present\n  conflict_rename_rename_1to2(): Fix checks for presence of D/F conflicts\n  conflict_rename_delete(): Check whether D/F conflicts are still present\n  merge-recursive: Delay modify/delete conflicts if D/F conflict present\n  merge-recursive: Delay content merging for renames\n  merge-recursive: Delay handling of rename/delete conflicts\n  merge-recursive: Move handling of double rename of one file to other file\n  merge-recursive: Move handling of double rename of one file to two\n  merge-recursive: Avoid doubly merging rename/add conflict contents\n  merge-recursive: Update merge_content() call signature\n  merge-recursive: Update conflict_rename_rename_1to2() call signature\n  merge-recursive: Structure process_df_entry() to handle more cases\n  merge-recursive: Have process_entry() skip D/F or rename entries\n  merge-recursive: New function to assist resolving renames in-core only\n  merge-recursive: New data structures for deferring of D/F conflicts\n  ...\n\nConflicts:\n\tt/t6020-merge-df.sh\n\tt/t6036-recursive-corner-cases.sh\n"
  },
  {
    "commit_hash": "ec3f7d5d0f3676aa9634ee30f8c9e55893a8c505",
    "commit_message": "Merge branch 'md/interix'\n\n* md/interix:\n  Interix: add configure checks\n  add support for the SUA layer (interix; windows)\n\nConflicts:\n\tgit-compat-util.h\n"
  },
  {
    "commit_hash": "4ef927a995d9b54b37e4cff8ed7cd92764d4dacd",
    "commit_message": "Merge branch 'kb/blame-author-email'\n\n* kb/blame-author-email:\n  blame: Add option to show author email instead of name\n\nConflicts:\n\tt/annotate-tests.sh\n"
  },
  {
    "commit_hash": "b3ff808b714fd8fc5e4d2770720398e5dc7d27f9",
    "commit_message": "Merge branch 'en/and-cascade-tests'\n\n* en/and-cascade-tests: (25 commits)\n  t4124 (apply --whitespace): use test_might_fail\n  t3404: do not use 'describe' to implement test_cmp_rev\n  t3404 (rebase -i): introduce helper to check position of HEAD\n  t3404 (rebase -i): move comment to description\n  t3404 (rebase -i): unroll test_commit loops\n  t3301 (notes): use test_expect_code for clarity\n  t1400 (update-ref): use test_must_fail\n  t1502 (rev-parse --parseopt): test exit code from \"-h\"\n  t6022 (renaming merge): chain test commands with &&\n  test-lib: introduce test_line_count to measure files\n  tests: add missing &&, batch 2\n  tests: add missing &&\n  Introduce sane_unset and use it to ensure proper && chaining\n  t7800 (difftool): add missing &&\n  t7601 (merge-pull-config): add missing &&\n  t7001 (mv): add missing &&\n  t6016 (rev-list-graph-simplify-history): add missing &&\n  t5602 (clone-remote-exec): add missing &&\n  t4026 (color): remove unneeded and unchained command\n  t4019 (diff-wserror): add lots of missing &&\n  ...\n\nConflicts:\n\tt/t7006-pager.sh\n"
  },
  {
    "commit_hash": "be0a4c820094c72cff67b69de8ba7ce88145ce86",
    "commit_message": "Merge branch 'jk/repack-reuse-object' into maint\n\n* jk/repack-reuse-object:\n  Documentation: pack.compression: explain how to recompress\n  repack: add -F flag to let user choose between --no-reuse-delta/object\n\nConflicts:\n\tDocumentation/git-repack.txt\n"
  },
  {
    "commit_hash": "016c4b8919a0a58a430f3483aeac35de9dfdc579",
    "commit_message": "Merge branch 'bg/maint-gitweb-test-lib'\n\n* bg/maint-gitweb-test-lib:\n  t/gitweb-lib: Don't pass constant to decode_utf8\n\nConflicts:\n\tt/gitweb-lib.sh\n"
  },
  {
    "commit_hash": "7ebee44167fc25b975f5543472c851ab1840af1b",
    "commit_message": "Merge branch 'ab/send-email-perl'\n\n* ab/send-email-perl:\n  send-email: extract_valid_address use qr// regexes\n  send-email: is_rfc2047_quoted use qr// regexes\n  send-email: use Perl idioms in while loop\n  send-email: make_message_id use \"require\" instead of \"use\"\n  send-email: send_message die on $!, not $?\n  send-email: use (?:) instead of () if no match variables are needed\n  send-email: sanitize_address use qq[\"foo\"], not \"\\\"foo\\\"\"\n  send-email: sanitize_address use $foo, not \"$foo\"\n  send-email: use \\E***\\Q instead of \\*\\*\\*\n  send-email: cleanup_compose_files doesn't need a prototype\n  send-email: unique_email_list doesn't need a prototype\n  send-email: file_declares_8bit_cte doesn't need a prototype\n  send-email: get_patch_subject doesn't need a prototype\n  send-email: use lexical filehandles during sending\n  send-email: use lexical filehandles for $compose\n  send-email: use lexical filehandle for opendir\n\nConflicts:\n\tgit-send-email.perl\n"
  },
  {
    "commit_hash": "8796ff7f3f3de6af48dc38b621f879d95f609bf7",
    "commit_message": "Merge branch 'sb/send-email-use-to-from-input'\n\n* sb/send-email-use-to-from-input:\n  send-email: Don't leak To: headers between patches\n  send-email: Use To: headers in patch files\n\nConflicts:\n\tgit-send-email.perl\n"
  },
  {
    "commit_hash": "329351feeb0c08c835ac4ff05f127fbfe42a78cf",
    "commit_message": "Merge branch 'kb/merge-recursive-rename-threshold'\n\n* kb/merge-recursive-rename-threshold:\n  diff: add synonyms for -M, -C, -B\n  merge-recursive: option to specify rename threshold\n\nConflicts:\n\tDocumentation/diff-options.txt\n\tDocumentation/merge-strategies.txt\n"
  },
  {
    "commit_hash": "9b1054d93e7e8564d0d9865cb7118cb6e756c74b",
    "commit_message": "Merge branch 'jp/send-email-to-cmd'\n\n* jp/send-email-to-cmd:\n  git-send-email.perl: Add --to-cmd\n\nConflicts:\n\tgit-send-email.perl\n"
  },
  {
    "commit_hash": "02ef0ed7102a197e2b746f3e694c09915fa98060",
    "commit_message": "Merge branch 'rr/fmt-merge-msg'\n\n* rr/fmt-merge-msg:\n  t6200-fmt-merge-msg: Exercise '--log' to configure shortlog length\n  t6200-fmt-merge-msg: Exercise 'merge.log' to configure shortlog length\n  merge: Make 'merge.log' an integer or boolean option\n  merge: Make '--log' an integer option for number of shortlog entries\n  fmt_merge_msg: Change fmt_merge_msg API to accept shortlog_len\n\nConflicts:\n\tbuiltin/merge.c\n"
  },
  {
    "commit_hash": "2851e8eba52e98d3112417952a24d82ae9d8c0eb",
    "commit_message": "Merge branch 'po/etc-gitattributes'\n\n* po/etc-gitattributes:\n  Add global and system-wide gitattributes\n\nConflicts:\n\tDocumentation/config.txt\n\tMakefile\n"
  },
  {
    "commit_hash": "1125297ca1744be09f9e392aab0dd2c70d838583",
    "commit_message": "Merge branch 'js/ls-files-x-doc'\n\n* js/ls-files-x-doc:\n  ls-files documentation: reword for consistency\n  git-ls-files.txt: clarify -x/--exclude option\n\nConflicts:\n\tDocumentation/git-ls-files.txt\n"
  },
  {
    "commit_hash": "5879b6bbcaba7696e4abfa717748da166f915405",
    "commit_message": "Merge branch 'maint'\n\n* maint:\n  t3101: modernise style\n  compat/nedmalloc: don't force NDEBUG on the rest of git\n\nConflicts:\n\tMakefile\n"
  },
  {
    "commit_hash": "7505ae272bad53c6451f34ff5f04ad24f29b6dd9",
    "commit_message": "Merge branch 'maint'\n\n* maint:\n  revert: Fix trivial comment style issue\n  cache_tree_free: Fix small memory leak\n\nConflicts:\n\tbuiltin/revert.c\n"
  },
  {
    "commit_hash": "347c47e61e5daf1efb3503724a431e4316c6eb5b",
    "commit_message": "Merge branch 'jl/maint-fix-test'\n\n* jl/maint-fix-test:\n  Several tests: cd inside subshell instead of around\n\nConflicts:\n\tt/t9600-cvsimport.sh\n"
  },
  {
    "commit_hash": "02377cf4bc6050cdbf600ce65114a5438b049763",
    "commit_message": "Merge branch 'jl/submodule-ignore-diff'\n\n* jl/submodule-ignore-diff:\n  checkout: Use submodule.*.ignore settings from .git/config and .gitmodules\n  checkout: Add test for diff.ignoreSubmodules\n  checkout: respect diff.ignoreSubmodules setting\n\nConflicts:\n\tbuiltin/checkout.c\n"
  },
  {
    "commit_hash": "a2c6726417db22bea7a878aeb88e18bcc95e5c0c",
    "commit_message": "Merge branch 'ab/test-2'\n\n* ab/test-2: (51 commits)\n  tests: factor HOME=$(pwd) in test-lib.sh\n  test-lib: use subshell instead of cd $new && .. && cd $old\n  tests: simplify \"missing PREREQ\" message\n  t/t0000-basic.sh: Run the passing TODO test inside its own test-lib\n  test-lib: Allow overriding of TEST_DIRECTORY\n  test-lib: Use \"$GIT_BUILD_DIR\" instead of \"$TEST_DIRECTORY\"/../\n  test-lib: Use $TEST_DIRECTORY or $GIT_BUILD_DIR instead of $(pwd) and ../\n  test: Introduce $GIT_BUILD_DIR\n  cvs tests: do not touch test CVS repositories shipped with source\n  t/t9602-cvsimport-branches-tags.sh: Add a PERL prerequisite\n  t/t9601-cvsimport-vendor-branch.sh: Add a PERL prerequisite\n  t/t7105-reset-patch.sh: Add a PERL prerequisite\n  t/t9001-send-email.sh: convert setup code to tests\n  t/t9001-send-email.sh: change from skip_all=* to prereq skip\n  t/t9001-send-email.sh: Remove needless PROG=* assignment\n  t/t9600-cvsimport.sh: change from skip_all=* to prereq skip\n  lib-patch-mode tests: change from skip_all=* to prereq skip\n  t/t3701-add-interactive.sh: change from skip_all=* to prereq skip\n  tests: Move FILEMODE prerequisite to lib-prereq-FILEMODE.sh\n  t/Makefile: Create test-results dir for smoke target\n  ...\n\nConflicts:\n\tt/t6035-merge-dir-to-symlink.sh\n"
  },
  {
    "commit_hash": "c208e05bd9880028c980fafbc5dda3d17a603ac1",
    "commit_message": "Merge branch 'dg/local-mod-error-messages'\n\n* dg/local-mod-error-messages:\n  t7609-merge-co-error-msgs: test non-fast forward case too.\n  Move \"show_all_errors = 1\" to setup_unpack_trees_porcelain()\n  setup_unpack_trees_porcelain: take the whole options struct as parameter\n  Move set_porcelain_error_msgs to unpack-trees.c and rename it\n\nConflicts:\n\tmerge-recursive.c\n"
  },
  {
    "commit_hash": "cd1547d2049f32a5c13ba1828fcd1a553b844e97",
    "commit_message": "Merge branch 'ab/compat-regex'\n\n* ab/compat-regex:\n  Fix compat/regex ANSIfication on MinGW\n  autoconf: regex library detection typofix\n  autoconf: don't use platform regex if it lacks REG_STARTEND\n  t/t7008-grep-binary.sh: un-TODO a test that needs REG_STARTEND\n  compat/regex: get rid of old-style definition\n  compat/regex: define out variables only used under RE_ENABLE_I18N\n  Change regerror() declaration from K&R style to ANSI C (C89)\n  compat/regex: get the gawk regex engine to compile within git\n  compat/regex: use the regex engine from gawk for compat\n\nConflicts:\n\tcompat/regex/regex.c\n"
  },
  {
    "commit_hash": "1998f4c0966871d49ebf7f720dc58eb9f80771e9",
    "commit_message": "Merge branch 'cb/maint-mergetool-no-tty'\n\n* cb/maint-mergetool-no-tty:\n  mergetool: Remove explicit references to /dev/tty\n\nConflicts:\n\tgit-mergetool.sh\n"
  },
  {
    "commit_hash": "b9f171cc3b3f7f528acf672b5fef7e95b153213b",
    "commit_message": "Merge branch 'mg/doc-bundle'\n\n* mg/doc-bundle:\n  git-bundle.txt: Clarify rev-list-args restrictions\n  git-bundle.txt: whitespace cleanup\n  git-bundle.txt: Cleanup\n\nConflicts:\n\tDocumentation/git-bundle.txt\n"
  },
  {
    "commit_hash": "8aed4a5e38a2a4f31567e01ab2a73341e972c08a",
    "commit_message": "Merge branch 'jn/merge-renormalize'\n\n* jn/merge-renormalize:\n  merge-recursive --renormalize\n  rerere: never renormalize\n  rerere: migrate to parse-options API\n  t4200 (rerere): modernize style\n  ll-merge: let caller decide whether to renormalize\n  ll-merge: make flag easier to populate\n  Documentation/technical: document ll_merge\n  merge-trees: let caller decide whether to renormalize\n  merge-trees: push choice to renormalize away from low level\n  t6038 (merge.renormalize): check that it can be turned off\n  t6038 (merge.renormalize): try checkout -m and cherry-pick\n  t6038 (merge.renormalize): style nitpicks\n  Don't expand CRLFs when normalizing text during merge\n  Try normalizing files to avoid delete/modify conflicts when merging\n  Avoid conflicts when merging branches with mixed normalization\n\nConflicts:\n\tbuiltin/rerere.c\n\tt/t4200-rerere.sh\n"
  },
  {
    "commit_hash": "3f29dd6c2344c56aad263a82a773ead0d9fded30",
    "commit_message": "Merge branch 'en/d-f-conflict-fix'\n\n* en/d-f-conflict-fix:\n  merge-recursive: Avoid excessive output for and reprocessing of renames\n  merge-recursive: Fix multiple file rename across D/F conflict\n  t6031: Add a testcase covering multiple renames across a D/F conflict\n  merge-recursive: Fix typo\n  Mark tests that use symlinks as needing SYMLINKS prerequisite\n  t/t6035-merge-dir-to-symlink.sh: Remove TODO on passing test\n  fast-import: Improve robustness when D->F changes provided in wrong order\n  fast-export: Fix output order of D/F changes\n  merge_recursive: Fix renames across paths below D/F conflicts\n  merge-recursive: Fix D/F conflicts\n  Add a rename + D/F conflict testcase\n  Add additional testcases for D/F conflicts\n\nConflicts:\n\tmerge-recursive.c\n"
  },
  {
    "commit_hash": "633142d86874ee8ce79a23ee4346f32e6271faad",
    "commit_message": "Merge branch 'jn/paginate-fix'\n\n* jn/paginate-fix:\n  t7006 (pager): add missing TTY prerequisites\n  merge-file: run setup_git_directory_gently() sooner\n  var: run setup_git_directory_gently() sooner\n  ls-remote: run setup_git_directory_gently() sooner\n  index-pack: run setup_git_directory_gently() sooner\n  config: run setup_git_directory_gently() sooner\n  bundle: run setup_git_directory_gently() sooner\n  apply: run setup_git_directory_gently() sooner\n  grep: run setup_git_directory_gently() sooner\n  shortlog: run setup_git_directory_gently() sooner\n  git wrapper: allow setup_git_directory_gently() be called earlier\n  setup: remember whether repository was found\n  git wrapper: introduce startup_info struct\n\nConflicts:\n\tbuiltin/index-pack.c\n"
  },
  {
    "commit_hash": "693fefe3d022767975eec7585561bfe178b873f4",
    "commit_message": "Merge branch 'jn/maint-setup-fix'\n\n* jn/maint-setup-fix:\n  setup: split off a function to handle ordinary .git directories\n  Revert \"rehabilitate 'git index-pack' inside the object store\"\n  setup: do not forget working dir from subdir of gitdir\n  t4111 (apply): refresh index before applying patches to it\n  setup: split off get_device_or_die helper\n  setup: split off a function to handle hitting ceiling in repo search\n  setup: split off code to handle stumbling upon a repository\n  setup: split off a function to checks working dir for .git file\n  setup: split off $GIT_DIR-set case from setup_git_directory_gently\n  tests: try git apply from subdir of toplevel\n  t1501 (rev-parse): clarify\n\nConflicts:\n\tbuiltin/index-pack.c\n"
  },
  {
    "commit_hash": "5cba1229d8246da2a6d1d956eeed8227f69e185b",
    "commit_message": "Merge branch 'mm/rebase-i-exec'\n\n* mm/rebase-i-exec:\n  git-rebase--interactive.sh: use printf instead of echo to print commit message\n  git-rebase--interactive.sh: rework skip_unnecessary_picks\n  test-lib: user-friendly alternatives to test [-d|-f|-e]\n  rebase -i: add exec command to launch a shell command\n\nConflicts:\n\tgit-rebase--interactive.sh\n\tt/t3404-rebase-interactive.sh\n"
  },
  {
    "commit_hash": "e40b34b1ec2c91aaed5572116cd8d01afff7851f",
    "commit_message": "Merge branch 'mm/shortopt-detached'\n\n* mm/shortopt-detached:\n  log: parse separate option for --glob\n  log: parse separate options like git log --grep foo\n  diff: parse separate options --stat-width n, --stat-name-width n\n  diff: split off a function for --stat-* option parsing\n  diff: parse separate options like -S foo\n\nConflicts:\n\trevision.c\n"
  },
  {
    "commit_hash": "2d984464c6be7ced6772a8dcf95d6a461a659a78",
    "commit_message": "Merge branch 'hv/submodule-find-ff-merge'\n\n* hv/submodule-find-ff-merge:\n  Implement automatic fast-forward merge for submodules\n  setup_revisions(): Allow walking history in a submodule\n  Teach ref iteration module about submodules\n\nConflicts:\n\tsubmodule.c\n"
  },
  {
    "commit_hash": "2eb54692d145a0c2939698302e913975f059ac34",
    "commit_message": "Merge branch 'dg/local-mod-error-messages'\n\n* dg/local-mod-error-messages:\n  t7609: test merge and checkout error messages\n  unpack_trees: group error messages by type\n  merge-recursive: distinguish \"removed\" and \"overwritten\" messages\n  merge-recursive: porcelain messages for checkout\n  Turn unpack_trees_options.msgs into an array + enum\n\nConflicts:\n\tt/t3400-rebase.sh\n"
  },
  {
    "commit_hash": "6baa9bd882fe003478c42ee5709dcfc713e13ec9",
    "commit_message": "Merge branch 'jc/sha1-name-find-fix' into maint\n\n* jc/sha1-name-find-fix:\n  sha1_name.c: fix parsing of \":/token\" syntax\n\nConflicts:\n\tsha1_name.c\n"
  },
  {
    "commit_hash": "cc34bb0b0279a79117978cf220d70b1c14da05ca",
    "commit_message": "Merge branch 'jl/submodule-ignore-diff'\n\n* jl/submodule-ignore-diff:\n  Add tests for the diff.ignoreSubmodules config option\n  Add the 'diff.ignoreSubmodules' config setting\n  Submodules: Use \"ignore\" settings from .gitmodules too for diff and status\n  Submodules: Add the new \"ignore\" config option for diff and status\n\nConflicts:\n\tdiff.c\n"
  },
  {
    "commit_hash": "3d045897585c4b1ca0dce6bb5a33331f1b48c2bf",
    "commit_message": "Merge branch 'jc/sha1-name-find-fix'\n\n* jc/sha1-name-find-fix:\n  sha1_name.c: fix parsing of \":/token\" syntax\n\nConflicts:\n\tsha1_name.c\n"
  },
  {
    "commit_hash": "5f7baac1e34440d3805ef488c97af748f3c20640",
    "commit_message": "Merge branch 'maint'\n\n* maint:\n  t/README: clarify test_must_fail description\n  Check size of path buffer before writing into it\n\nConflicts:\n\tt/README\n"
  },
  {
    "commit_hash": "53b304224a561b5fd4ae35cedc0a978d91d4b1da",
    "commit_message": "Merge branch 'jn/paginate-fix'\n\n* jn/paginate-fix:\n  git --paginate: paginate external commands again\n  git --paginate: do not commit pager choice too early\n  tests: local config file should be honored from subdirs of toplevel\n  t7006: test pager configuration for several git commands\n  t7006 (pager): introduce helper for parameterized tests\n\nConflicts:\n\tt/t7006-pager.sh\n"
  },
  {
    "commit_hash": "037c43c68e220739e690540de89a6d5835fefe73",
    "commit_message": "Merge remote branch 'ko/master' into jc/read-tree-cache-tree-fix\n\n* ko/master: (2325 commits)\n  Git 1.7.2-rc2\n  backmerge a few more fixes to 1.7.1.X series\n  fix git branch -m in presence of cross devices\n  t/t0006: specify timezone as EST5 not EST to comply with POSIX\n  add missing && to submodule-merge testcase\n  t/README: document more test helpers\n  test-date: fix sscanf type conversion\n  xdiff: optimise for no whitespace difference when ignoring whitespace.\n  gitweb: Move evaluate_gitweb_config out of run_request\n  parse_date: fix signedness in timezone calculation\n  t0006: test timezone parsing\n  rerere.txt: Document forget subcommand\n  t/README: proposed rewording...\n  t/README: Document the do's and don'ts of tests\n  t/README: Add a section about skipping tests\n  t/README: Document test_expect_code\n  t/README: Document test_external*\n  t/README: Document the prereq functions, and 3-arg test_*\n  t/README: Typo: paralell -> parallel\n  t/README: The trash is in 't/trash directory.$name'\n  ...\n\nConflicts:\n\tbuiltin-read-tree.c\n"
  },
  {
    "commit_hash": "fcd91f8de20bf7969599a7a60cba73117d99f2d1",
    "commit_message": "Merge branch 'maint'\n\n* maint:\n  backmerge a few more fixes to 1.7.1.X series\n  rev-parse: fix --parse-opt --keep-dashdash --stop-at-non-option\n  fix git branch -m in presence of cross devices\n\nConflicts:\n\tRelNotes\n\tbuiltin/rev-parse.c\n"
  },
  {
    "commit_hash": "56bfacef7966553530532d58c07787754add2465",
    "commit_message": "Merge branch 'tr/receive-pack-aliased-update-fix' into maint\n\n* tr/receive-pack-aliased-update-fix:\n  check_aliased_update: strcpy() instead of strcat() to copy\n  receive-pack: detect aliased updates which can occur with symrefs\n  receive-pack: switch global variable 'commands' to a parameter\n\nConflicts:\n\tt/t5516-fetch-push.sh\n"
  },
  {
    "commit_hash": "a76b2084fb9c7e788108717fdce4c91227808980",
    "commit_message": "Merge branch 'jl/status-ignore-submodules'\n\n* jl/status-ignore-submodules:\n  Add the option \"--ignore-submodules\" to \"git status\"\n  git submodule: ignore dirty submodules for summary and status\n\nConflicts:\n\tbuiltin/commit.c\n\tt/t7508-status.sh\n\twt-status.c\n\twt-status.h\n"
  },
  {
    "commit_hash": "6f82be05191a4ec2adcbcac65078f87900ea8741",
    "commit_message": "Merge branch 'jn/grep-open'\n\n* jn/grep-open:\n  t/t7811-grep-open.sh: remove broken/redundant creation of fake \"less\" script\n  t/t7811-grep-open.sh: ensure fake \"less\" is made executable\n  t/lib-pager.sh: remove unnecessary '^' from 'expr' regular expression\n  grep -O: allow optional argument specifying the pager (or editor)\n  grep: Add the option '--open-files-in-pager'\n  Unify code paths of threaded greps\n  grep: refactor grep_objects loop into its own function\n\nConflicts:\n\tt/t7006-pager.sh\n"
  },
  {
    "commit_hash": "6296062285e07051a5a46cbbd74c67a10bf2ac16",
    "commit_message": "Merge branch 'tr/rev-list-count'\n\n* tr/rev-list-count:\n  bash completion: Support \"divergence from upstream\" messages in __git_ps1\n  rev-list: introduce --count option\n\nConflicts:\n\tcontrib/completion/git-completion.bash\n"
  },
  {
    "commit_hash": "4af574dbdc543b43e16838ed69890470b763136d",
    "commit_message": "Merge branch 'ab/blame-textconv'\n\n* ab/blame-textconv:\n  t/t8006: test textconv support for blame\n  textconv: support for blame\n  textconv: make the API public\n\nConflicts:\n\tdiff.h\n"
  },
  {
    "commit_hash": "223a923c37f76ee91eb6a9cb77ce6d31dcf939cc",
    "commit_message": "Merge branch 'mg/pretty-magic-space'\n\n* mg/pretty-magic-space:\n  pretty: Introduce ' ' modifier to add space if non-empty\n\nConflicts:\n\tpretty.c\n"
  },
  {
    "commit_hash": "5bfd53629e93113a17fe7d6a7a24554dc3c17cdb",
    "commit_message": "Merge branch 'jn/gitweb-return-or-exit-cleanup'\n\n* jn/gitweb-return-or-exit-cleanup:\n  gitweb: Return or exit after done serving request\n\nConflicts:\n\tgitweb/gitweb.perl\n"
  },
  {
    "commit_hash": "262657dce61b417d712a7f4cd85ff8ff4c6ec3a4",
    "commit_message": "Merge branch 'maint'\n\n* maint:\n  Update draft release notes to 1.7.1.1\n  tests: remove unnecessary '^' from 'expr' regular expression\n\nConflicts:\n\tdiff.c\n"
  },
  {
    "commit_hash": "3c656899cdfbfdd40987625c4615a8c941d5968a",
    "commit_message": "Merge branch 'cc/maint-diff-CC-binary' into maint\n\n* cc/maint-diff-CC-binary:\n  diff: fix \"git show -C -C\" output when renaming a binary file\n\nConflicts:\n\tdiff.c\n"
  },
  {
    "commit_hash": "d5cff17edaf438bbf45a2130e9cadc0c938291d6",
    "commit_message": "Merge branch 'eb/core-eol'\n\n* eb/core-eol:\n  Add \"core.eol\" config variable\n  Rename the \"crlf\" attribute \"text\"\n  Add per-repository eol normalization\n  Add tests for per-repository eol normalization\n\nConflicts:\n\tDocumentation/config.txt\n\tMakefile\n"
  },
  {
    "commit_hash": "632d3f4b5b80700c6c7c3637d6a4d1d9a457f7e1",
    "commit_message": "Merge branch 'gs/usage-to-stdout'\n\n* gs/usage-to-stdout:\n  parseopt: wrap rev-parse --parseopt usage for eval consumption\n  print the usage string on stdout instead of stderr\n\nConflicts:\n\tparse-options.h\n"
  },
  {
    "commit_hash": "762655010d6f051f632a77b8c5b95b9f5cad02c9",
    "commit_message": "Merge branch 'js/async-thread'\n\n* js/async-thread:\n  fast-import: die_nicely() back to vsnprintf (reverts part of ebaa79f)\n  Enable threaded async procedures whenever pthreads is available\n  Dying in an async procedure should only exit the thread, not the process.\n  Reimplement async procedures using pthreads\n  Windows: more pthreads functions\n  Fix signature of fcntl() compatibility dummy\n  Make report() from usage.c public as vreportf() and use it.\n  Modernize t5530-upload-pack-error.\n\nConflicts:\n\thttp-backend.c\n"
  },
  {
    "commit_hash": "8d676d85f772ce3a100b6f0dddd1c34a7e4313cf",
    "commit_message": "Merge branch 'gv/portable'\n\n* gv/portable:\n  test-lib: use DIFF definition from GIT-BUILD-OPTIONS\n  build: propagate $DIFF to scripts\n  Makefile: Tru64 portability fix\n  Makefile: HP-UX 10.20 portability fixes\n  Makefile: HPUX11 portability fixes\n  Makefile: SunOS 5.6 portability fix\n  inline declaration does not work on AIX\n  Allow disabling \"inline\"\n  Some platforms lack socklen_t type\n  Make NO_{INET_NTOP,INET_PTON} configured independently\n  Makefile: some platforms do not have hstrerror anywhere\n  git-compat-util.h: some platforms with mmap() lack MAP_FAILED definition\n  test_cmp: do not use \"diff -u\" on platforms that lack one\n  fixup: do not unconditionally disable \"diff -u\"\n  tests: use \"test_cmp\", not \"diff\", when verifying the result\n  Do not use \"diff\" found on PATH while building and installing\n  enums: omit trailing comma for portability\n  Makefile: -lpthread may still be necessary when libc has only pthread stubs\n  Rewrite dynamic structure initializations to runtime assignment\n  Makefile: pass CPPFLAGS through to fllow customization\n\nConflicts:\n\tMakefile\n\twt-status.h\n"
  },
  {
    "commit_hash": "b43688a5bc2eaa8a5805856fc11dc3cd60e6e6ac",
    "commit_message": "Merge branch 'maint'\n\n* maint:\n  gitweb/Makefile: fix typo in gitweb.min.css rule\n\nConflicts:\n\tgitweb/Makefile\n"
  },
  {
    "commit_hash": "5977744d045cacb809a3e3630dbbd28fe83976ae",
    "commit_message": "Merge branch 'cc/maint-diff-CC-binary'\n\n* cc/maint-diff-CC-binary:\n  diff: fix \"git show -C -C\" output when renaming a binary file\n\nConflicts:\n\tdiff.c\n"
  },
  {
    "commit_hash": "98ad90fbab90a423ca835956d3121c60db2eb218",
    "commit_message": "Merge branch 'by/diff-graph'\n\n* by/diff-graph:\n  Make --color-words work well with --graph\n  graph.c: register a callback for graph output\n  Emit a whole line in one go\n  diff.c: Output the text graph padding before each diff line\n  Output the graph columns at the end of the commit message\n  Add a prefix output callback to diff output\n\nConflicts:\n\tdiff.c\n"
  },
  {
    "commit_hash": "18fd805583130862632e40e98aecc7edcd16d878",
    "commit_message": "Merge branch 'jh/diff-index-line-abbrev'\n\n* jh/diff-index-line-abbrev:\n  diff.c: Ensure \"index $from..$to\" line contains unambiguous SHA1s\n\nConflicts:\n\tdiff.c\n"
  },
  {
    "commit_hash": "1c5d6b2a401576f74c76f56dae0204604235705c",
    "commit_message": "Merge branch 'jn/remote-set-branches'\n\n* jn/remote-set-branches:\n  Add git remote set-branches\n\nConflicts:\n\tbuiltin/remote.c\n"
  },
  {
    "commit_hash": "8642abc76454a6e09344e27a7797ff08264abe76",
    "commit_message": "Merge branch 'tc/merge-m-log'\n\n* tc/merge-m-log:\n  merge: --log appends shortlog to message if specified\n  fmt-merge-msg: add function to append shortlog only\n  fmt-merge-msg: refactor merge title formatting\n  fmt-merge-msg: minor refactor of fmt_merge_msg()\n  merge: rename variable\n  merge: update comment\n  t7604-merge-custom-message: show that --log doesn't append to -m\n  t7604-merge-custom-message: shift expected output creation\n\nConflicts:\n\tbuiltin.h\n"
  },
  {
    "commit_hash": "4dd4a09eac9ecb27f051ad0f3447c205c5b50c8b",
    "commit_message": "Merge branch 'rc/maint-curl-helper' into maint\n\n* rc/maint-curl-helper:\n  remote-curl: ensure that URLs have a trailing slash\n  http: make end_url_with_slash() public\n  t5541-http-push: add test for URLs with trailing slash\n\nConflicts:\n\tremote-curl.c\n"
  },
  {
    "commit_hash": "82e7ee7351d6e328294016d3b99825d8001abd24",
    "commit_message": "Merge branch 'mg/advice-statushints'\n\n* mg/advice-statushints:\n  wt-status: take advice.statusHints seriously\n  t7508: test advice.statusHints\n\nConflicts:\n\twt-status.c\n"
  },
  {
    "commit_hash": "9215f76fb6d938ae93889f46f27cff22723fe0e4",
    "commit_message": "Merge branch 'js/maint-receive-pack-symref-alias'\n\n* js/maint-receive-pack-symref-alias:\n  t5516-fetch-push.sh: style cleanup\n  receive-pack: detect aliased updates which can occur with symrefs\n  receive-pack: switch global variable 'commands' to a parameter\n\nConflicts:\n\tt/t5516-fetch-push.sh\n"
  },
  {
    "commit_hash": "a660534e06147f8867d6c9b6c41025427a7b5c6c",
    "commit_message": "Merge branch 'jc/maint-no-reflog-expire-unreach-for-head'\n\n* jc/maint-no-reflog-expire-unreach-for-head:\n  reflog --expire-unreachable: special case entries in \"HEAD\" reflog\n  more war on \"sleep\" in tests\n  Document gc.<pattern>.reflogexpire variables\n\nConflicts:\n\tDocumentation/config.txt\n"
  },
  {
    "commit_hash": "1bdd46cd3a2fe1e0aeb965fb0edb493064e24495",
    "commit_message": "Merge branch 'tr/word-diff'\n\n* tr/word-diff:\n  diff: add --word-diff option that generalizes --color-words\n\nConflicts:\n\tdiff.c\n"
  },
  {
    "commit_hash": "af655431f53c20e3d0ed236544397c69974267f4",
    "commit_message": "Merge branch 'sr/remote-helper-export'\n\n* sr/remote-helper-export:\n  t5800: testgit helper requires Python support\n  Makefile: Simplify handling of python scripts\n  remote-helpers: add tests for testgit helper\n  remote-helpers: add testgit helper\n  remote-helpers: add support for an export command\n  remote-helpers: allow requesing the path to the .git directory\n  fast-import: always create marks_file directories\n  clone: also configure url for bare clones\n  clone: pass the remote name to remote_get\n\nConflicts:\n\tMakefile\n"
  },
  {
    "commit_hash": "3cc9caadf738c3b2cf7aa46364be173751912a10",
    "commit_message": "Merge branch 'rc/maint-curl-helper'\n\n* rc/maint-curl-helper:\n  remote-curl: ensure that URLs have a trailing slash\n  http: make end_url_with_slash() public\n  t5541-http-push: add test for URLs with trailing slash\n\nConflicts:\n\tremote-curl.c\n"
  },
  {
    "commit_hash": "72d9b222a940c93a8d915c26a4d5d077e23be871",
    "commit_message": "Merge branch 'sd/log-decorate'\n\n* sd/log-decorate:\n  log.decorate: only ignore it under \"log --pretty=raw\"\n  script with rev-list instead of log\n  log --pretty/--oneline: ignore log.decorate\n  log.decorate: usability fixes\n  Add `log.decorate' configuration variable.\n  git_config_maybe_bool()\n\nConflicts:\n\tbuiltin/log.c\n"
  },
  {
    "commit_hash": "f78eeeaf55a4f60a05d3e6452f29a2214c29b6fd",
    "commit_message": "Merge branch 'cc/revert-strategy'\n\n* cc/revert-strategy:\n  revert: add \"--strategy\" option to choose merge strategy\n  merge: make function try_merge_command non static\n  merge: refactor code that calls \"git merge-STRATEGY\"\n  revert: refactor merge recursive code into its own function\n  revert: use strbuf to refactor the code that writes the merge message\n\nConflicts:\n\tbuiltin/revert.c\n"
  },
  {
    "commit_hash": "a6018bbdca918c4f0a35badcfd826077d07502ca",
    "commit_message": "Merge branch 'maint'\n\n* maint:\n  Documentation/config.txt: default gc.aggressiveWindow is 250, not 10\n  Docs: Add -X option to git-merge's synopsis.\n\nConflicts:\n\tDocumentation/merge-options.txt\n"
  },
  {
    "commit_hash": "da288e25d9e10b746cf3b311cb4503d1810cde37",
    "commit_message": "Merge branch 'rc/maint-reflog-msg-for-forced-branch'\n\n* rc/maint-reflog-msg-for-forced-branch:\n  branch: say \"Reset to\" in reflog entries for 'git branch -f' operations\n\nConflicts:\n\tbuiltin-branch.c\n"
  },
  {
    "commit_hash": "9234b003726556e0d3d0ea8ade97dc9f7bd50a6e",
    "commit_message": "Merge branch 'mb/rebase-i-no-ff'\n\n* mb/rebase-i-no-ff:\n  Teach rebase the --no-ff option.\n\nConflicts:\n\tgit-rebase--interactive.sh\n\tt/t3404-rebase-interactive.sh\n"
  },
  {
    "commit_hash": "16b8a3e4b94dc7f6e05b624eae3cf1eed7b358a5",
    "commit_message": "Merge branch 'jn/merge-diff3-label'\n\n* jn/merge-diff3-label:\n  merge-recursive: add a label for ancestor\n  cherry-pick, revert: add a label for ancestor\n  revert: clarify label on conflict hunks\n  compat: add mempcpy()\n  checkout -m --conflict=diff3: add a label for ancestor\n  merge_trees(): add ancestor label parameter for diff3-style output\n  merge_file(): add comment explaining behavior wrt conflict style\n  checkout --conflict=diff3: add a label for ancestor\n  ll_merge(): add ancestor label parameter for diff3-style output\n  merge-file --diff3: add a label for ancestor\n  xdl_merge(): move file1 and file2 labels to xmparam structure\n  xdl_merge(): add optional ancestor label to diff3-style output\n  tests: document cherry-pick behavior in face of conflicts\n  tests: document format of conflicts from checkout -m\n\nConflicts:\n\tbuiltin/revert.c\n"
  },
  {
    "commit_hash": "07b838f087a1535e387d5d4a1414b2b545b73265",
    "commit_message": "Merge branch 'rs/threaded-grep-context'\n\n* rs/threaded-grep-context:\n  grep: enable threading for context line printing\n\nConflicts:\n\tgrep.c\n"
  },
  {
    "commit_hash": "df9930c129d4cfe4d39e5e4688a6a55a2bca0050",
    "commit_message": "Merge branch 'do/rebase-i-arbitrary'\n\n* do/rebase-i-arbitrary:\n  rebase--interactive: don't require what's rebased to be a branch\n\nConflicts:\n\tt/t3404-rebase-interactive.sh\n"
  },
  {
    "commit_hash": "3b37d9c17efd199a237435f7d8573008f6aa68c1",
    "commit_message": "Merge branch 'sb/notes-parse-opt'\n\n* sb/notes-parse-opt:\n  notes: rework subcommands and parse options\n\nConflicts:\n\tbuiltin/notes.c\n"
  },
  {
    "commit_hash": "ff0a181fa6580d29ce0ab7abf79780a1fa3c5555",
    "commit_message": "Merge branch 'maint'\n\n* maint:\n  Prepare for 1.7.0.4\n\nConflicts:\n\tRelNotes\n"
  },
  {
    "commit_hash": "a86ed83cce0fc0b9a9fe4e17ac1bf4f719028d20",
    "commit_message": "Merge branch 'tr/notes-display'\n\n* tr/notes-display:\n  git-notes(1): add a section about the meaning of history\n  notes: track whether notes_trees were changed at all\n  notes: add shorthand --ref to override GIT_NOTES_REF\n  commit --amend: copy notes to the new commit\n  rebase: support automatic notes copying\n  notes: implement helpers needed for note copying during rewrite\n  notes: implement 'git notes copy --stdin'\n  rebase -i: invoke post-rewrite hook\n  rebase: invoke post-rewrite hook\n  commit --amend: invoke post-rewrite hook\n  Documentation: document post-rewrite hook\n  Support showing notes from more than one notes tree\n  test-lib: unset GIT_NOTES_REF to stop it from influencing tests\n\nConflicts:\n\tgit-am.sh\n\trefs.c\n"
  },
  {
    "commit_hash": "53997a30f8138f41d1d9c7a45e84106cc21c0558",
    "commit_message": "Merge branch 'tc/transport-verbosity'\n\n* tc/transport-verbosity:\n  transport: update flags to be in running order\n  fetch and pull: learn --progress\n  push: learn --progress\n  transport->progress: use flag authoritatively\n  clone: support multiple levels of verbosity\n  push: support multiple levels of verbosity\n  fetch: refactor verbosity option handling into transport.[ch]\n  Documentation/git-push: put --quiet before --verbose\n  Documentation/git-pull: put verbosity options before merge/fetch ones\n  Documentation/git-clone: mention progress in -v\n\nConflicts:\n\ttransport.h\n"
  },
  {
    "commit_hash": "66bce02ec459123d07c3f0230906cc2f8e36504c",
    "commit_message": "Merge branch 'ld/push-porcelain'\n\n* ld/push-porcelain:\n  t5516: Use test_cmp when appropriate\n  git-push: add tests for git push --porcelain\n  git-push: make git push --porcelain print \"Done\"\n  git-push: send \"To <remoteurl>\" messages to the standard output in --porcelain mode\n  git-push: fix an advice message so it goes to stderr\n\nConflicts:\n\ttransport.c\n"
  },
  {
    "commit_hash": "2949151fe9d92b2c3405f188e650d9bb7b46c663",
    "commit_message": "Merge branch 'jh/notes'\n\n* jh/notes: (33 commits)\n  Documentation: fix a few typos in git-notes.txt\n  notes: fix malformed tree entry\n  builtin-notes: Minor (mostly parse_options-related) fixes\n  builtin-notes: Add \"copy\" subcommand for copying notes between objects\n  builtin-notes: Misc. refactoring of argc and exit value handling\n  builtin-notes: Add -c/-C options for reusing notes\n  builtin-notes: Refactor handling of -F option to allow combining -m and -F\n  builtin-notes: Deprecate the -m/-F options for \"git notes edit\"\n  builtin-notes: Add \"append\" subcommand for appending to note objects\n  builtin-notes: Add \"add\" subcommand for adding notes to objects\n  builtin-notes: Add --message/--file aliases for -m/-F options\n  builtin-notes: Add \"list\" subcommand for listing note objects\n  Documentation: Generalize git-notes docs to 'objects' instead of 'commits'\n  builtin-notes: Add \"prune\" subcommand for removing notes for missing objects\n  Notes API: prune_notes(): Prune notes that belong to non-existing objects\n  t3305: Verify that removing notes triggers automatic fanout consolidation\n  builtin-notes: Add \"remove\" subcommand for removing existing notes\n  Teach builtin-notes to remove empty notes\n  Teach notes code to properly preserve non-notes in the notes tree\n  t3305: Verify that adding many notes with git-notes triggers increased fanout\n  ...\n\nConflicts:\n\tMakefile\n"
  },
  {
    "commit_hash": "2e0e8b68e3ba8ea87f001c45c78f9b7ce549c61f",
    "commit_message": "Merge branch 'lt/deepen-builtin-source'\n\n* lt/deepen-builtin-source:\n  Move 'builtin-*' into a 'builtin/' subdirectory\n\nConflicts:\n\tMakefile\n"
  },
  {
    "commit_hash": "c6830a3b7ea043714966121e40f47d1077c681ac",
    "commit_message": "Merge branch 'maint'\n\n* maint:\n  Merge accumulated fixes to prepare for 1.7.0.3\n\nConflicts:\n\tRelNotes\n"
  },
  {
    "commit_hash": "c2b456b8956c2091318edaee362119e0e96b86b7",
    "commit_message": "Merge branch 'nd/root-git'\n\n* nd/root-git:\n  Add test for using Git at root of file system\n  Support working directory located at root\n  Move offset_1st_component() to path.c\n  init-db, rev-parse --git-dir: do not append redundant slash\n  make_absolute_path(): Do not append redundant slash\n\nConflicts:\n\tsetup.c\n\tsha1_file.c\n"
  },
  {
    "commit_hash": "6d84bcb5de78251d98f7d3e80e822d9a4b8f4df3",
    "commit_message": "Merge branch 'maint'\n\n* maint:\n  Start preparing for 1.7.0.2\n\nConflicts:\n\tRelNotes\n"
  },
  {
    "commit_hash": "a886ba2801cbe0a4d6bbc34714cb09996dbcc127",
    "commit_message": "Merge branch 'sp/maint-push-sideband' into maint\n\n* sp/maint-push-sideband:\n  receive-pack: Send internal errors over side-band #2\n  t5401: Use a bare repository for the remote peer\n  receive-pack: Send hook output over side band #2\n  receive-pack: Wrap status reports inside side-band-64k\n  receive-pack: Refactor how capabilities are shown to the client\n  send-pack: demultiplex a sideband stream with status data\n  run-command: support custom fd-set in async\n  run-command: Allow stderr to be a caller supplied pipe\n\nConflicts:\n\tbuiltin-receive-pack.c\n\trun-command.c\n\tt/t5401-update-hooks.sh\n"
  },
  {
    "commit_hash": "a026d5318cdcbc05690749ac9cd5c2a50d09cb14",
    "commit_message": "Merge branch 'jn/makedepend'\n\n* jn/makedepend:\n  Makefile: clarify definition of TEST_OBJS\n  Makefile: always remove .depend directories on 'make clean'\n  Makefile: tuck away generated makefile fragments in .depend\n  Teach Makefile to check header dependencies\n  Makefile: list standalone program object files in PROGRAM_OBJS\n  Makefile: lazily compute header dependencies\n  Makefile: list generated object files in OBJECTS\n  Makefile: disable default implicit rules\n  Makefile: rearrange dependency rules\n  Makefile: transport.o depends on branch.h now\n  Makefile: drop dependency on $(wildcard */*.h)\n  Makefile: clean up http-walker.o dependency rules\n  Makefile: remove wt-status.h from LIB_H\n  Makefile: make sure test helpers are rebuilt when headers change\n  Makefile: add missing header file dependencies\n\nConflicts:\n\tMakefile\n"
  },
  {
    "commit_hash": "7e94805db2a69e3fe6b9833fdaa6eb80de33959c",
    "commit_message": "Merge branch 'maint'\n\n* maint:\n  Start 1.7.0 maintenance track\n\nConflicts:\n\tRelNotes\n"
  },
  {
    "commit_hash": "263830c47b0ddd3440fbc87a841499fe699a50b1",
    "commit_message": "Merge branch 'rs/git-dir-cleanup'\n\n* rs/git-dir-cleanup:\n  Resurrect \"git grep --no-index\"\n  setenv(GIT_DIR) clean-up\n\nConflicts:\n\tbuiltin-grep.c\n\tt/t7002-grep.sh\n"
  },
  {
    "commit_hash": "a42332c21723fde9f36b579f6b39a23aa1aac137",
    "commit_message": "Merge branch 'jc/maint-1.6.1-checkout-m-custom-merge' into maint\n\n* jc/maint-1.6.1-checkout-m-custom-merge:\n  checkout -m path: fix recreating conflicts\n\nConflicts:\n\tt/t7201-co.sh\n"
  },
  {
    "commit_hash": "cc8eb6407e88a46da6d41e18cffed3878f2c53cf",
    "commit_message": "Merge branch 'sp/maint-push-sideband' into sp/push-sideband\n\n* sp/maint-push-sideband:\n  receive-pack: Send internal errors over side-band #2\n  t5401: Use a bare repository for the remote peer\n\nConflicts:\n\tbuiltin-receive-pack.c\n\tt/t5401-update-hooks.sh\n"
  },
  {
    "commit_hash": "76d44c8cfda9be1db78884580ab045c421b083fe",
    "commit_message": "Merge branch 'sp/maint-push-sideband' into sp/push-sideband\n\n* sp/maint-push-sideband:\n  receive-pack: Send hook output over side band #2\n  receive-pack: Wrap status reports inside side-band-64k\n  receive-pack: Refactor how capabilities are shown to the client\n  send-pack: demultiplex a sideband stream with status data\n  run-command: support custom fd-set in async\n  run-command: Allow stderr to be a caller supplied pipe\n  Update git fsck --full short description to mention packs\n\nConflicts:\n\trun-command.c\n"
  },
  {
    "commit_hash": "844ad3d9a0418b4a3a6a944a50d65403121a0eb6",
    "commit_message": "Merge branch 'sp/maint-fast-import-large-blob' into sp/fast-import-large-blob\n\n* sp/maint-fast-import-large-blob:\n  fast-import: Stream very large blobs directly to pack\n  bash: don't offer remote transport helpers as subcommands\n\nConflicts:\n\tfast-import.c\n"
  },
  {
    "commit_hash": "225f78c817755bebff91629cc525a258cf60eaea",
    "commit_message": "Merge branch 'master' of git://repo.or.cz/alt-git into jn/autodep\n\n* 'master' of git://repo.or.cz/alt-git: (384 commits)\n  am: fix patch format detection for Thunderbird \"Save As\" emails\n  t0022: replace non-portable literal CR\n  tests: consolidate CR removal/addition functions\n  commit-tree: remove unused #define\n  t5541-http-push: make grep expression check for one line only\n  rebase: replace antiquated sed invocation\n  Add test-run-command to .gitignore\n  git_connect: use use_shell instead of explicit \"sh\", \"-c\"\n  gitweb.js: Workaround for IE8 bug\n  Make test numbers unique\n  Windows: Remove dependency on pthreadGC2.dll\n  Documentation: move away misplaced 'push --upstream' description\n  Documentation: add missing :: in config.txt\n  pull: re-fix command line generation\n  Documentation: merge: use MERGE_HEAD to refer to the remote branch\n  Documentation: simplify How Merge Works\n  Documentation: merge: add a section about fast-forward\n  Documentation: emphasize when git merge terminates early\n  Documentation: merge: add an overview\n  Documentation: merge: move merge strategy list to end\n  ...\n\nConflicts:\n\tMakefile\n"
  },
  {
    "commit_hash": "026680f881e751311674d97d0f6ed87f06a92bfb",
    "commit_message": "Merge branch 'jc/fix-tree-walk'\n\n* jc/fix-tree-walk:\n  read-tree --debug-unpack\n  unpack-trees.c: look ahead in the index\n  unpack-trees.c: prepare for looking ahead in the index\n  Aggressive three-way merge: fix D/F case\n  traverse_trees(): handle D/F conflict case sanely\n  more D/F conflict tests\n  tests: move convenience regexp to match object names to test-lib.sh\n\nConflicts:\n\tbuiltin-read-tree.c\n\tunpack-trees.c\n\tunpack-trees.h\n"
  },
  {
    "commit_hash": "77b3b7969d1a817e28639dc75305a9e301f0d4b4",
    "commit_message": "Merge branch 'doc-style/for-next' of git://repo.or.cz/git/trast\n\n* 'doc-style/for-next' of git://repo.or.cz/git/trast:\n  Documentation: merge: use MERGE_HEAD to refer to the remote branch\n  Documentation: simplify How Merge Works\n  Documentation: merge: add a section about fast-forward\n  Documentation: emphasize when git merge terminates early\n  Documentation: merge: add an overview\n  Documentation: merge: move merge strategy list to end\n  Documentation: suggest `reset --merge` in How Merge Works section\n  Documentation: merge: move configuration section to end\n  Documentation: emphasise 'git shortlog' in its synopsis\n  Documentation: show-files is now called git-ls-files\n  Documentation: tiny git config manual tweaks\n  Documentation: git gc packs refs by default now\n\nConflicts:\n\tDocumentation/config.txt\n"
  },
  {
    "commit_hash": "06dbc1ea5768618337bf11e5f64c4f9f14a68008",
    "commit_message": "Merge branch 'jc/conflict-marker-size'\n\n* jc/conflict-marker-size:\n  rerere: honor conflict-marker-size attribute\n  rerere: prepare for customizable conflict marker length\n  conflict-marker-size: new attribute\n  rerere: use ll_merge() instead of using xdl_merge()\n  merge-tree: use ll_merge() not xdl_merge()\n  xdl_merge(): allow passing down marker_size in xmparam_t\n  xdl_merge(): introduce xmparam_t for merge specific parameters\n  git_attr(): fix function signature\n\nConflicts:\n\tbuiltin-merge-file.c\n\tll-merge.c\n\txdiff/xdiff.h\n\txdiff/xmerge.c\n"
  },
  {
    "commit_hash": "fcb2a7e4a3c7899a3432f5804889fa3ea5779220",
    "commit_message": "Merge branch 'ap/merge-backend-opts'\n\n* ap/merge-backend-opts:\n  Document that merge strategies can now take their own options\n  Extend merge-subtree tests to test -Xsubtree=dir.\n  Make \"subtree\" part more orthogonal to the rest of merge-recursive.\n  pull: Fix parsing of -X<option>\n  Teach git-pull to pass -X<option> to git-merge\n  git merge -X<option>\n  git-merge-file --ours, --theirs\n\nConflicts:\n\tgit-compat-util.h\n"
  },
  {
    "commit_hash": "add0951ab0bee43b5f634d1be68a7a80f627c18f",
    "commit_message": "Merge remote branch 'remotes/trast-doc/for-next'\n\n* remotes/trast-doc/for-next:\n  Documentation: spell 'git cmd' without dash throughout\n  Documentation: format full commands in typewriter font\n  Documentation: warn prominently against merging with dirty trees\n  Documentation/git-merge: reword references to \"remote\" and \"pull\"\n\nConflicts:\n\tDocumentation/config.txt\n\tDocumentation/git-config.txt\n\tDocumentation/git-merge.txt\n"
  },
  {
    "commit_hash": "9ca8f834116fab64e31e368e97001c75fd3c1b05",
    "commit_message": "Merge branch 'maint'\n\n* maint:\n  status: don't require the repository to be writable\n\nConflicts:\n\tbuiltin-commit.c\n"
  },
  {
    "commit_hash": "6751e0471df1bdc4a1d5e5a3929a531c74e95aeb",
    "commit_message": "Merge branch 'jc/cache-unmerge'\n\n* jc/cache-unmerge:\n  rerere forget path: forget recorded resolution\n  rerere: refactor rerere logic to make it independent from I/O\n  rerere: remove silly 1024-byte line limit\n  resolve-undo: teach \"update-index --unresolve\" to use resolve-undo info\n  resolve-undo: \"checkout -m path\" uses resolve-undo information\n  resolve-undo: allow plumbing to clear the information\n  resolve-undo: basic tests\n  resolve-undo: record resolved conflicts in a new index extension section\n  builtin-merge.c: use standard active_cache macros\n\nConflicts:\n\tbuiltin-ls-files.c\n\tbuiltin-merge.c\n\tbuiltin-rerere.c\n"
  },
  {
    "commit_hash": "030b1a77f72a7e3307c7d7881ae570ca1c8ed877",
    "commit_message": "Merge branch 'js/exec-error-report'\n\n* js/exec-error-report:\n  Improve error message when a transport helper was not found\n  start_command: detect execvp failures early\n  run-command: move wait_or_whine earlier\n  start_command: report child process setup errors to the parent's stderr\n\nConflicts:\n\tMakefile\n"
  },
  {
    "commit_hash": "34349bea60ec9cb3e320175cad9eb01b3054e5c6",
    "commit_message": "Merge branch 'jc/grep-lookahead'\n\n* jc/grep-lookahead:\n  grep --no-index: allow use of \"git grep\" outside a git repository\n  grep: prepare to run outside of a work tree\n  grep: rip out pessimization to use fixmatch()\n  grep: rip out support for external grep\n  grep: optimize built-in grep by skipping lines that do not hit\n\nConflicts:\n\tbuiltin-grep.c\n\tt/t7002-grep.sh\n"
  },
  {
    "commit_hash": "71b3ef11fa0aade4a514c51b83438858a4a3c03b",
    "commit_message": "Merge branch 'mm/conflict-advice'\n\n* mm/conflict-advice:\n  Be more user-friendly when refusing to do something because of conflict.\n\nConflicts:\n\tDocumentation/config.txt\n\tadvice.c\n\tadvice.h\n"
  },
  {
    "commit_hash": "cea20f24738c558d56483402db1ddfebd0362ee4",
    "commit_message": "Merge branch 'ns/rebase-auto-squash'\n\n* ns/rebase-auto-squash:\n  rebase -i --autosquash: auto-squash commits\n\nConflicts:\n\tgit-rebase--interactive.sh\n"
  },
  {
    "commit_hash": "533e8af50ed6e89eabc421478c9021c4da5f404d",
    "commit_message": "Merge branch 'il/push-set-upstream'\n\n* il/push-set-upstream:\n  Add push --set-upstream\n\nConflicts:\n\ttransport.c\n"
  },
  {
    "commit_hash": "0877510ad4e8b951b08f9cbb25cfc0d994468979",
    "commit_message": "Merge branch 'jk/warn-author-committer-after-commit'\n\n* jk/warn-author-committer-after-commit:\n  user_ident_sufficiently_given(): refactor the logic to be usable from elsewhere\n  commit.c::print_summary: do not release the format string too early\n  commit: allow suppression of implicit identity advice\n  commit: show interesting ident information in summary\n  strbuf: add strbuf_addbuf_percentquote\n  strbuf_expand: convert \"%%\" to \"%\"\n\nConflicts:\n\tbuiltin-commit.c\n\tident.c\n"
  },
  {
    "commit_hash": "07301eaa766efac7818eac7a4a6db0d0c3948d66",
    "commit_message": "Merge branch 'tr/http-push-ref-status'\n\n* tr/http-push-ref-status:\n  transport-helper.c::push_refs(): emit \"no refs\" error message\n  transport-helper.c::push_refs(): ignore helper-reported status if ref is not to be pushed\n  transport.c::transport_push(): make ref status affect return value\n  refactor ref status logic for pushing\n  t5541-http-push.sh: add test for unmatched, non-fast-forwarded refs\n  t5541-http-push.sh: add tests for non-fast-forward pushes\n\nConflicts:\n\ttransport-helper.c\n"
  },
  {
    "commit_hash": "ce67b3eed896e0884ca4cdc2edce9a032cefe45a",
    "commit_message": "Merge branch 'sb/maint-octopus' into maint\n\n* sb/maint-octopus:\n  octopus: remove dead code\n  octopus: reenable fast-forward merges\n  octopus: make merge process simpler to follow\n\nConflicts:\n\tgit-merge-octopus.sh\n"
  },
  {
    "commit_hash": "f0b0d78489407f9b934cc0d4ae83e078553acbcd",
    "commit_message": "Merge branch 'maint-1.6.5' into maint\n\n* maint-1.6.5:\n  Git 1.6.5.8\n  Fix mis-backport of t7002\n  bash completion: factor submodules into dirty state\n  reset: unbreak hard resets with GIT_WORK_TREE\n\nConflicts:\n\tDocumentation/git.txt\n\tGIT-VERSION-GEN\n\tRelNotes\n"
  },
  {
    "commit_hash": "814035c12a07927ea03350184a14f869cdce7276",
    "commit_message": "Merge branch 'maint-1.6.3' into maint-1.6.4\n\n* maint-1.6.3:\n  base85: Make the code more obvious instead of explaining the non-obvious\n  base85: encode_85() does not use the decode table\n  base85 debug code: Fix length byte calculation\n  checkout -m: do not try to fall back to --merge from an unborn branch\n  branch: die explicitly why when calling \"git branch [-a|-r] branchname\".\n  textconv: stop leaking file descriptors\n  commit: --cleanup is a message option\n  git count-objects: handle packs bigger than 4G\n  t7102: make the test fail if one of its check fails\n\nConflicts:\n\tbuiltin-commit.c\n"
  },
  {
    "commit_hash": "011c181cc656c8b3e48882729d1b6238e8c5c537",
    "commit_message": "Merge branch 'maint-1.6.2' into maint-1.6.3\n\n* maint-1.6.2:\n  base85: Make the code more obvious instead of explaining the non-obvious\n  base85: encode_85() does not use the decode table\n  base85 debug code: Fix length byte calculation\n  checkout -m: do not try to fall back to --merge from an unborn branch\n  branch: die explicitly why when calling \"git branch [-a|-r] branchname\".\n  textconv: stop leaking file descriptors\n  commit: --cleanup is a message option\n  git count-objects: handle packs bigger than 4G\n  t7102: make the test fail if one of its check fails\n\nConflicts:\n\tdiff.c\n"
  },
  {
    "commit_hash": "f8eb50f60b5c8efda3529fcf89517080c686ce0b",
    "commit_message": "Merge branch 'jh/commit-status'\n\n* jh/commit-status:\n  t7502: test commit.status, --status and --no-status\n  commit: support commit.status, --status, and --no-status\n\nConflicts:\n\tDocumentation/git-commit.txt\n\tbuiltin-commit.c\n"
  },
  {
    "commit_hash": "a0db3e5878fd5fa3f54bcf7042ad3d0cb30e07f2",
    "commit_message": "Merge branch 'jc/maint-1.6.1-checkout-m-custom-merge'\n\n* jc/maint-1.6.1-checkout-m-custom-merge:\n  checkout -m path: fix recreating conflicts\n\nConflicts:\n\tt/t7201-co.sh\n"
  },
  {
    "commit_hash": "42aac96763a72b5bac73d34640d3a0c6233027a6",
    "commit_message": "Merge branch 'tc/clone-v-progress'\n\n* tc/clone-v-progress:\n  clone: use --progress to force progress reporting\n  clone: set transport->verbose when -v/--verbose is used\n  git-clone.txt: reword description of progress behaviour\n  check stderr with isatty() instead of stdout when deciding to show progress\n\nConflicts:\n\ttransport.c\n"
  },
  {
    "commit_hash": "bd33a29283819f1eb1b9ddcb3f1a22c268af8679",
    "commit_message": "Merge branch 'il/vcs-helper'\n\n* il/vcs-helper:\n  Reset possible helper before reusing remote structure\n  Remove special casing of http, https and ftp\n  Support remote archive from all smart transports\n  Support remote helpers implementing smart transports\n  Support taking over transports\n  Refactor git transport options parsing\n  Pass unknown protocols to external protocol handlers\n  Support mandatory capabilities\n  Add remote helper debug mode\n\nConflicts:\n\tDocumentation/git-remote-helpers.txt\n\ttransport-helper.c\n"
  },
  {
    "commit_hash": "73d66323ac78c750ba42fef23b1cb8fd2110e023",
    "commit_message": "Merge branch 'nd/sparse'\n\n* nd/sparse: (25 commits)\n  t7002: test for not using external grep on skip-worktree paths\n  t7002: set test prerequisite \"external-grep\" if supported\n  grep: do not do external grep on skip-worktree entries\n  commit: correctly respect skip-worktree bit\n  ie_match_stat(): do not ignore skip-worktree bit with CE_MATCH_IGNORE_VALID\n  tests: rename duplicate t1009\n  sparse checkout: inhibit empty worktree\n  Add tests for sparse checkout\n  read-tree: add --no-sparse-checkout to disable sparse checkout support\n  unpack-trees(): ignore worktree check outside checkout area\n  unpack_trees(): apply $GIT_DIR/info/sparse-checkout to the final index\n  unpack-trees(): \"enable\" sparse checkout and load $GIT_DIR/info/sparse-checkout\n  unpack-trees.c: generalize verify_* functions\n  unpack-trees(): add CE_WT_REMOVE to remove on worktree alone\n  Introduce \"sparse checkout\"\n  dir.c: export excluded_1() and add_excludes_from_file_1()\n  excluded_1(): support exclude files in index\n  unpack-trees(): carry skip-worktree bit over in merged_entry()\n  Read .gitignore from index if it is skip-worktree\n  Avoid writing to buffer in add_excludes_from_file_1()\n  ...\n\nConflicts:\n\t.gitignore\n\tDocumentation/config.txt\n\tDocumentation/git-update-index.txt\n\tMakefile\n\tentry.c\n\tt/t7002-grep.sh\n"
  },
  {
    "commit_hash": "8fb5d44a47dd3657c8be0de5dcf220935b04e98e",
    "commit_message": "Merge branch 'maint-1.6.2' into maint\n\n* maint-1.6.2:\n  base85: Make the code more obvious instead of explaining the non-obvious\n  base85: encode_85() does not use the decode table\n  base85 debug code: Fix length byte calculation\n  checkout -m: do not try to fall back to --merge from an unborn branch\n\nConflicts:\n\tdiff.c\n"
  },
  {
    "commit_hash": "c5034673fd92b6278e6c9d55683770ec01fafc89",
    "commit_message": "Merge branch 'maint-1.6.1' into maint-1.6.2\n\n* maint-1.6.1:\n  base85: Make the code more obvious instead of explaining the non-obvious\n  base85: encode_85() does not use the decode table\n  base85 debug code: Fix length byte calculation\n  checkout -m: do not try to fall back to --merge from an unborn branch\n  branch: die explicitly why when calling \"git branch [-a|-r] branchname\".\n  textconv: stop leaking file descriptors\n  commit: --cleanup is a message option\n  git count-objects: handle packs bigger than 4G\n  t7102: make the test fail if one of its check fails\n\nConflicts:\n\tdiff.c\n"
  },
  {
    "commit_hash": "3259ada4c79eb1e8213ab44c7ce3ec6f7775cd33",
    "commit_message": "Merge branch 'sb/maint-octopus'\n\n* sb/maint-octopus:\n  octopus: remove dead code\n  octopus: reenable fast-forward merges\n  octopus: make merge process simpler to follow\n\nConflicts:\n\tgit-merge-octopus.sh\n"
  },
  {
    "commit_hash": "b0b3a241e2ca1ba5b928a128b6dcafb990df6e75",
    "commit_message": "Merge branch 'maint-1.6.1' into maint\n\n* maint-1.6.1:\n  textconv: stop leaking file descriptors\n  commit: --cleanup is a message option\n  git count-objects: handle packs bigger than 4G\n  t7102: make the test fail if one of its check fails\n\nConflicts:\n\tbuiltin-commit.c\n\tdiff.c\n"
  },
  {
    "commit_hash": "c2ff10c98e22ae64d553273e6d67bb123a1c916f",
    "commit_message": "Merge branch 'jk/1.7.0-status'\n\n* jk/1.7.0-status:\n  status/commit: do not suggest \"reset HEAD <path>\" while merging\n  commit/status: \"git add <path>\" is not necessarily how to resolve\n  commit/status: check $GIT_DIR/MERGE_HEAD only once\n  t7508-status: test all modes with color\n  t7508-status: status --porcelain ignores relative paths setting\n  status: reduce duplicated setup code\n  status: disable color for porcelain format\n  status -s: obey color.status\n  builtin-commit: refactor short-status code into wt-status.c\n  t7508-status.sh: Add tests for status -s\n  status -s: respect the status.relativePaths option\n  docs: note that status configuration affects only long format\n  commit: support alternate status formats\n  status: add --porcelain output format\n  status: refactor format option parsing\n  status: refactor short-mode printing to its own function\n  status: typo fix in usage\n  git status: not \"commit --dry-run\" anymore\n  git stat -s: short status output\n  git stat: the beginning of \"status that is not a dry-run of commit\"\n\nConflicts:\n\tt/t4034-diff-words.sh\n\twt-status.c\n"
  },
  {
    "commit_hash": "1d85dd6fb2d5a05493dd11c6fb77ef2c04c79f43",
    "commit_message": "Merge branch 'maint'\n\n* maint:\n  Makefile: FreeBSD (both 7 and 8) needs OLD_ICONV\n  Start 1.6.6.X maintenance track\n  Add git-http-backend to command-list.\n  t4019 \"grep\" portability fix\n  t1200: work around a bug in some implementations of \"find\"\n\nConflicts:\n\tRelNotes\n"
  },
  {
    "commit_hash": "3cc3fb7df67dc9c83b71fec82e5bfb1df3724089",
    "commit_message": "Merge branch 'jc/1.7.0-diff-whitespace-only-status'\n\n* jc/1.7.0-diff-whitespace-only-status:\n  diff.c: fix typoes in comments\n  Make test case number unique\n  diff: Rename QUIET internal option to QUICK\n  diff: change semantics of \"ignore whitespace\" options\n\nConflicts:\n\tdiff.h\n"
  },
  {
    "commit_hash": "a19f101e3f31234db23bd1eb24994db6e4caa443",
    "commit_message": "Merge branch 'jc/1.7.0-send-email-no-thread-default'\n\n* jc/1.7.0-send-email-no-thread-default:\n  send-email: make --no-chain-reply-to the default\n\nConflicts:\n\tgit-send-email.perl\n"
  },
  {
    "commit_hash": "e74f43f9b702ccb88ee83e28de13ccfaebc4abf2",
    "commit_message": "Merge branch 'sr/vcs-helper'\n\n* sr/vcs-helper:\n  tests: handle NO_PYTHON setting\n  builtin-push: don't access freed transport->url\n  Add Python support library for remote helpers\n  Basic build infrastructure for Python scripts\n  Allow helpers to report in \"list\" command that the ref is unchanged\n  Fix various memory leaks in transport-helper.c\n  Allow helper to map private ref names into normal names\n  Add support for \"import\" helper command\n  Allow specifying the remote helper in the url\n  Add a config option for remotes to specify a foreign vcs\n  Allow fetch to modify refs\n  Use a function to determine whether a remote is valid\n  Allow programs to not depend on remotes having urls\n  Fix memory leak in helper method for disconnect\n\nConflicts:\n\tDocumentation/git-remote-helpers.txt\n\tMakefile\n\tbuiltin-ls-remote.c\n\tbuiltin-push.c\n\ttransport-helper.c\n"
  },
  {
    "commit_hash": "5c30b8f7dd2640a1b75fcbcdd3e175329c5b7bbe",
    "commit_message": "Merge branch 'mm/maint-merge-ff-error-message-fix' into maint\n\n* mm/maint-merge-ff-error-message-fix:\n  builtin-merge: show user-friendly error messages for fast-forward too.\n  merge-recursive: make the error-message generation an extern function\n\nConflicts:\n\tmerge-recursive.c\n"
  },
  {
    "commit_hash": "a24a32ddb30c904d244fe911f4d9e7e3924fdac7",
    "commit_message": "Merge branch 'master' into il/vcs-helper\n\n* master: (334 commits)\n  bash: update 'git commit' completion\n  Git 1.6.5.5\n  Fix diff -B/--dirstat miscounting of newly added contents\n  reset: improve worktree safety valves\n  Documentation: Avoid use of xmlto --stringparam\n  archive: clarify description of path parameter\n  rerere: don't segfault on failure to open rr-cache\n  Prepare for 1.6.5.5\n  gitweb: Describe (possible) gitweb.js minification in gitweb/README\n  Documentation: xmlto 0.0.18 does not know --stringparam\n  Fix crasher on encountering SHA1-like non-note in notes tree\n  t9001: use older Getopt::Long boolean prefix '--no' rather than '--no-'\n  t4201: use ISO8859-1 rather than ISO-8859-1\n  Git 1.6.5.4\n  Unconditionally set man.base.url.for.relative.links\n  Documentation/Makefile: allow man.base.url.for.relative.link to be set from Make\n  Git 1.6.6-rc1\n  git-pull.sh: Fix call to git-merge for new command format\n  Prepare for 1.6.5.4\n  merge: do not add standard message when message is given with -m option\n  ...\n\nConflicts:\n\tDocumentation/git-remote-helpers.txt\n\tMakefile\n\tbuiltin-ls-remote.c\n\tbuiltin-push.c\n\ttransport-helper.c\n\nSigned-off-by: Junio C Hamano <gitster@pobox.com>\n"
  },
  {
    "commit_hash": "0748494e866041034605aaf177f29a61bdc25951",
    "commit_message": "Merge branch 'maint'\n\n* maint:\n  Prepare for 1.6.5.4\n  merge: do not add standard message when message is given with -m option\n  Do not misidentify \"git merge foo HEAD\" as an old-style invocation\n\nConflicts:\n\tRelNotes\n"
  },
  {
    "commit_hash": "8678bc09e3a553fdacfbf7f8493e400c399f8e7b",
    "commit_message": "Merge branch 'jn/gitweb-blame'\n\n* jn/gitweb-blame:\n  gitweb: Add link to other blame implementation in blame views\n  gitweb: Make linking to actions requiring JavaScript a feature\n  gitweb.js: fix padLeftStr() and its usage\n  gitweb.js: Harden setting blamed commit info in incremental blame\n  gitweb.js: fix null object exception in initials calculation\n  gitweb: Minify gitweb.js if JSMIN is defined\n  gitweb: Create links leading to 'blame_incremental' using JavaScript\n  gitweb: Colorize 'blame_incremental' view during processing\n  gitweb: Incremental blame (using JavaScript)\n  gitweb: Add optional \"time to generate page\" info in footer\n\nConflicts:\n\tMakefile\n\tgitweb/gitweb.css\n"
  },
  {
    "commit_hash": "9eba92f684ad9fb1b2e9b99f3f406048fece266d",
    "commit_message": "Merge branch 'fc/maint-format-patch-pathspec-dashes'\n\nConflicts:\n\tt/t4014-format-patch.sh\n"
  },
  {
    "commit_hash": "045c05048530b8c57c410886e5f64d91a44c2c83",
    "commit_message": "Merge branch 'mm/maint-merge-ff-error-message-fix'\n\nConflicts:\n\tmerge-recursive.c\n"
  },
  {
    "commit_hash": "684d0d8dcfa2288744a553fc7294c5f9f5c12026",
    "commit_message": "Merge branch 'jc/pretty-lf'\n\nConflicts:\n\tpretty.c\n\tt/t6006-rev-list-format.sh\n"
  },
  {
    "commit_hash": "d268cb940d6d299cbb7c77328c2f51843b0883df",
    "commit_message": "Merge branch 'jc/mailinfo-remove-brackets'\n\nConflicts:\n\tDocumentation/git-mailinfo.txt\n\tbuiltin-mailinfo.c\n"
  },
  {
    "commit_hash": "a689faeb5850174edfbbb0a502ef7eee8cd06d76",
    "commit_message": "Merge branch 'uk/maint-shortlog-encoding'\n\nConflicts:\n\tbuiltin-shortlog.c\n"
  },
  {
    "commit_hash": "ad7ace714d353ef49045bc37c1363e8fc904792d",
    "commit_message": "Merge branch 'rs/work-around-grep-opt-insanity'\n\n* rs/work-around-grep-opt-insanity:\n  Protect scripted Porcelains from GREP_OPTIONS insanity\n  mergetool--lib: simplify guess_merge_tool()\n\nConflicts:\n\tgit-instaweb.sh\n"
  },
  {
    "commit_hash": "e61f25f3a6bb5dcbb5ae5f8b4ad26c308982373c",
    "commit_message": "Merge branch 'jc/log-stdin'\n\n* jc/log-stdin:\n  Add trivial tests for --stdin option to log family\n  Make --stdin option to \"log\" family read also pathspecs\n  setup_revisions(): do not call get_pathspec() too early\n  Teach --stdin option to \"log\" family\n  read_revision_from_stdin(): use strbuf\n\nConflicts:\n\trevision.c\n"
  },
  {
    "commit_hash": "75a7ea258c0644b79e57cab3a345807f4017dfd2",
    "commit_message": "Merge branch 'maint'\n\n* maint:\n  pack-objects: split implications of --all-progress from progress activation\n  instaweb: restart server if already running\n  prune-packed: only show progress when stderr is a tty\n\nConflicts:\n\tbuiltin-pack-objects.c\n"
  },
  {
    "commit_hash": "885d492f69a80ae3e91c1310a63caf0aeb567f2a",
    "commit_message": "Merge branch 'jh/notes' (early part)\n\n* 'jh/notes' (early part):\n  Add selftests verifying concatenation of multiple notes for the same commit\n  Refactor notes code to concatenate multiple notes annotating the same object\n  Add selftests verifying that we can parse notes trees with various fanouts\n  Teach the notes lookup code to parse notes trees with various fanout schemes\n  Teach notes code to free its internal data structures on request\n  Add '%N'-format for pretty-printing commit notes\n  Add flags to get_commit_notes() to control the format of the note string\n  t3302-notes-index-expensive: Speed up create_repo()\n  fast-import: Add support for importing commit notes\n  Teach \"-m <msg>\" and \"-F <file>\" to \"git notes edit\"\n  Add an expensive test for git-notes\n  Speed up git notes lookup\n  Add a script to edit/inspect notes\n  Introduce commit notes\n\nConflicts:\n\t.gitignore\n\tDocumentation/pretty-formats.txt\n\tpretty.c\n"
  },
  {
    "commit_hash": "905bf7742cf5f4a6dea2e75ba2dbd89d5dfaa793",
    "commit_message": "Merge branch 'sp/smart-http'\n\n* sp/smart-http: (37 commits)\n  http-backend: Let gcc check the format of more printf-type functions.\n  http-backend: Fix access beyond end of string.\n  http-backend: Fix bad treatment of uintmax_t in Content-Length\n  t5551-http-fetch: Work around broken Accept header in libcurl\n  t5551-http-fetch: Work around some libcurl versions\n  http-backend: Protect GIT_PROJECT_ROOT from /../ requests\n  Git-aware CGI to provide dumb HTTP transport\n  http-backend: Test configuration options\n  http-backend: Use http.getanyfile to disable dumb HTTP serving\n  test smart http fetch and push\n  http tests: use /dumb/ URL prefix\n  set httpd port before sourcing lib-httpd\n  t5540-http-push: remove redundant fetches\n  Smart HTTP fetch: gzip requests\n  Smart fetch over HTTP: client side\n  Smart push over HTTP: client side\n  Discover refs via smart HTTP server when available\n  http-backend: more explict LocationMatch\n  http-backend: add example for gitweb on same URL\n  http-backend: use mod_alias instead of mod_rewrite\n  ...\n\nConflicts:\n\t.gitignore\n\tremote-curl.c\n"
  },
  {
    "commit_hash": "750054cd3f1298bc9e113a47eaa6346923e08c19",
    "commit_message": "Merge branch 'jn/help-everywhere'\n\n* jn/help-everywhere: (23 commits)\n  diff --no-index: make the usage string less scary\n  merge-{recursive,subtree}: use usagef() to print usage\n  Introduce usagef() that takes a printf-style format\n  Let 'git <command> -h' show usage without a git dir\n  Show usage string for 'git http-push -h'\n  Let 'git http-fetch -h' show usage outside any git repository\n  Show usage string for 'git stripspace -h'\n  Show usage string for 'git unpack-file -h'\n  Show usage string for 'git show-index -h'\n  Show usage string for 'git rev-parse -h'\n  Show usage string for 'git merge-one-file -h'\n  Show usage string for 'git mailsplit -h'\n  Show usage string for 'git imap-send -h'\n  Show usage string for 'git get-tar-commit-id -h'\n  Show usage string for 'git fast-import -h'\n  Show usage string for 'git check-ref-format -h'\n  http-fetch: add missing initialization of argv0_path\n  Show usage string for 'git show-ref -h'\n  Show usage string for 'git merge-ours -h'\n  Show usage string for 'git commit-tree -h'\n  ...\n\nConflicts:\n\timap-send.c\n"
  },
  {
    "commit_hash": "d404a3e1a5588fa075e4fae6679603a5add2e4df",
    "commit_message": "Merge branch 'js/maint-diff-color-words' into maint\n\n* js/maint-diff-color-words:\n  diff --color-words: bit of clean-up\n  diff --color-words -U0: fix the location of hunk headers\n  t4034-diff-words: add a test for word diff without context\n\nConflicts:\n\tdiff.c\n"
  },
  {
    "commit_hash": "002a9ec005cd3d4273e3c6b7dbe7a2fb9e70c1bc",
    "commit_message": "Merge branch 'js/maint-diff-color-words'\n\n* js/maint-diff-color-words:\n  diff --color-words: bit of clean-up\n  diff --color-words -U0: fix the location of hunk headers\n  t4034-diff-words: add a test for word diff without context\n\nConflicts:\n\tdiff.c\n"
  },
  {
    "commit_hash": "934c042c9cf09a14762b3fa094f1ba15ec721161",
    "commit_message": "Merge branch 'rs/pretty-wrap'\n\n* rs/pretty-wrap:\n  log --format: don't ignore %w() at the start of format string\n  Implement wrap format %w() as if it is a mode switch\n\nConflicts:\n\tpretty.c\n"
  },
  {
    "commit_hash": "4d8c3258880548510b1d23f0db517adb7dfd2486",
    "commit_message": "Merge branch 'fc/doc-fast-forward'\n\n* fc/doc-fast-forward:\n  Use 'fast-forward' all over the place\n\nConflicts:\n\tbuiltin-merge.c\n"
  },
  {
    "commit_hash": "8ac7a77be668180d515e234d550cc661aa0c1ebd",
    "commit_message": "Merge branch 'maint'\n\n* maint:\n  merge: do not setup worktree twice\n  check-ref-format: update usage string\n\nConflicts:\n\tbuiltin-check-ref-format.c\n"
  },
  {
    "commit_hash": "af526de90ca1ae1baf039f161cf9597d3ef379d4",
    "commit_message": "Merge branch 'jk/gitignore-anchored'\n\n* jk/gitignore-anchored:\n  gitignore: root most patterns at the top-level directory\n\nConflicts:\n\t.gitignore\n"
  },
  {
    "commit_hash": "1a507b9cf75bcb2de2391c584539e0ff202549bf",
    "commit_message": "Merge branch 'jn/maint-http-fetch-mingw' into jn/help-everywhere\n\n* jn/maint-http-fetch-mingw:\n  http-fetch: add missing initialization of argv0_path\n  merge: do not setup worktree twice\n  check-ref-format: update usage string\n\nConflicts:\n\tbuiltin-check-ref-format.c\n"
  },
  {
    "commit_hash": "68d00fd83421a0494c66512e4c66829f4863693d",
    "commit_message": "Merge branch 'jn/show-normalized-refs'\n\n* jn/show-normalized-refs:\n  check-ref-format: simplify --print implementation\n  git check-ref-format --print\n  Add tests for git check-ref-format\n\nConflicts:\n\tDocumentation/git-check-ref-format.txt\n"
  },
  {
    "commit_hash": "af4f6405296dec699321ca59d48583ffa0323b0e",
    "commit_message": "Merge branch 'jc/maint-unpack-objects-strict' into maint\n\n* jc/maint-unpack-objects-strict:\n  Fix \"unpack-objects --strict\"\n\nConflicts:\n\tbuiltin-unpack-objects.c\n"
  },
  {
    "commit_hash": "5b590d783a461c63fa803d1c21b57bc79c0207f7",
    "commit_message": "Merge branch 'maint'\n\n* maint:\n  GIT 1.6.4.3\n  svn: properly escape arguments for authors-prog\n  http.c: remove verification of remote packs\n  grep: accept relative paths outside current working directory\n  grep: fix exit status if external_grep() punts\n\nConflicts:\n\tGIT-VERSION-GEN\n\tRelNotes\n"
  },
  {
    "commit_hash": "45c58ba00a9c4e31e94997b59fd8112f962fa222",
    "commit_message": "Merge branch 'cb/maint-1.6.3-grep-relative-up' into maint\n\n* cb/maint-1.6.3-grep-relative-up:\n  grep: accept relative paths outside current working directory\n  grep: fix exit status if external_grep() punts\n\nConflicts:\n\tt/t7002-grep.sh\n"
  },
  {
    "commit_hash": "554555ac7da0b9b78bd97cff05daa60498eb1bba",
    "commit_message": "Merge branch 'lt/approxidate'\n\n* lt/approxidate:\n  fix approxidate parsing of relative months and years\n  tests: add date printing and parsing tests\n  refactor test-date interface\n  Add date formatting and parsing functions relative to a given time\n  Further 'approxidate' improvements\n  Improve on 'approxidate'\n\nConflicts:\n\tdate.c\n"
  },
  {
    "commit_hash": "232d4537667e32230c855777444abbe732536ed9",
    "commit_message": "Merge branch 'np/maint-1.6.3-deepen'\n\n* np/maint-1.6.3-deepen:\n  fix simple deepening of a repo\n\nConflicts:\n\tt/t5500-fetch-pack.sh\n"
  },
  {
    "commit_hash": "5e64650d938d7a23b73532b4a68bc6bd08cfd041",
    "commit_message": "Merge branch 'maint-1.6.2' into maint-1.6.3\n\n* maint-1.6.2:\n  Fix overridable written with an extra 'e'\n  Documentation: git-archive: mark --format as optional in summary\n  Round-down years in \"years+months\" relative date view\n\nConflicts:\n\tDocumentation/git-archive.txt\n"
  },
  {
    "commit_hash": "adc542353199bdc0b9b1ed5d03cf881b7efaff6e",
    "commit_message": "Merge branch 'jh/submodule-foreach'\n\n* jh/submodule-foreach:\n  git clone: Add --recursive to automatically checkout (nested) submodules\n  t7407: Use 'rev-parse --short' rather than bash's substring expansion notation\n  git submodule status: Add --recursive to recurse into nested submodules\n  git submodule update: Introduce --recursive to update nested submodules\n  git submodule foreach: Add --recursive to recurse into nested submodules\n  git submodule foreach: test access to submodule name as '$name'\n  Add selftest for 'git submodule foreach'\n  git submodule: Cleanup usage string and add option parsing to cmd_foreach()\n  git submodule foreach: Provide access to submodule name, as '$name'\n\nConflicts:\n\tDocumentation/git-submodule.txt\n\tgit-submodule.sh\n"
  },
  {
    "commit_hash": "ab36d06f12b7243de419bb82b11a678bea30eef2",
    "commit_message": "Merge branch 'jc/maint-unpack-objects-strict'\n\n* jc/maint-unpack-objects-strict:\n  Fix \"unpack-objects --strict\"\n\nConflicts:\n\tbuiltin-unpack-objects.c\n"
  },
  {
    "commit_hash": "0397ff24698ee39954f25dda7b45de5a2767f642",
    "commit_message": "Merge branch 'ns/init-mkdir'\n\n* ns/init-mkdir:\n  git init: optionally allow a directory argument\n\nConflicts:\n\tbuiltin-init-db.c\n"
  },
  {
    "commit_hash": "7d1b50981277c59a788298751f121567a1e75202",
    "commit_message": "Merge branch 'ne/futz-upload-pack'\n\n* ne/futz-upload-pack:\n  Shift object enumeration out of upload-pack\n\nConflicts:\n\tupload-pack.c\n"
  },
  {
    "commit_hash": "6517452d7a4269e9a34648a28b8931640299f458",
    "commit_message": "Merge branch 'maint'\n\n* maint:\n  t8005: Nobody writes Russian in shift_jis\n\nConflicts:\n\tt/t8005-blame-i18n.sh\n"
  },
  {
    "commit_hash": "130b04ab37d74e574d525df7948b963b13c6bdbf",
    "commit_message": "Merge branch 'js/maint-graft-unhide-true-parents'\n\n* js/maint-graft-unhide-true-parents:\n  git repack: keep commits hidden by a graft\n  Add a test showing that 'git repack' throws away grafted-away parents\n\nConflicts:\n\tgit-repack.sh\n"
  },
  {
    "commit_hash": "f87dd2152a6941dfa7f3ddaf599bc30f58562a98",
    "commit_message": "Merge branch 'maint'\n\n* maint:\n  SunOS grep does not understand -C<n> nor -e\n  Fix export_marks() error handling.\n  git branch: clean up detached branch handling\n  git branch: avoid unnecessary object lookups\n  git branch: fix performance problem\n  do_one_ref(): null_sha1 check is not about broken ref\n\nConflicts:\n\tMakefile\n"
  },
  {
    "commit_hash": "c535d767f7a518b79a0f9b9a70ec746de76da97c",
    "commit_message": "Merge branch 'ml/http'\n\n* ml/http:\n  http.c: add http.sslCertPasswordProtected option\n  http.c: prompt for SSL client certificate password\n\nConflicts:\n\thttp.c\n"
  },
  {
    "commit_hash": "a49eb197d809d2d7efbd81d935c61e1a0caa983e",
    "commit_message": "Merge branch 'ph/submodule-rebase'\n\n* ph/submodule-rebase:\n  git-submodule: add support for --merge.\n\nConflicts:\n\tDocumentation/git-submodule.txt\n\tgit-submodule.sh\n"
  },
  {
    "commit_hash": "09236d80480c15f6da804e56a80c08d320475fb1",
    "commit_message": "Merge branch 'sb/maint-1.6.0-add-config-fix'\n\n* sb/maint-1.6.0-add-config-fix:\n  add: allow configurations to be overriden by command line\n  use xstrdup, not strdup in ll-merge.c\n\nConflicts:\n\tbuiltin-add.c\n"
  },
  {
    "commit_hash": "95ad2a65fbb9b7f26669fed9906fe9a1a531810b",
    "commit_message": "Merge branch 'sp/msysgit'\n\n* sp/msysgit:\n  compat/ has subdirectories: do not omit them in 'make clean'\n  Fix typo in nedmalloc warning fix\n  MinGW: Teach Makefile to detect msysgit and apply specific settings\n  Fix warnings in nedmalloc when compiling with GCC 4.4.0\n  Add custom memory allocator to MinGW and MacOS builds\n  MinGW readdir reimplementation to support d_type\n  connect.c: Support PuTTY plink and TortoisePlink as SSH on Windows\n  git: browsing paths with spaces when using the start command\n  MinGW: fix warning about implicit declaration of _getch()\n  test-chmtime: work around Windows limitation\n  Work around a regression in Windows 7, causing erase_in_line() to crash sometimes\n  Quiet make: do not leave Windows behind\n  MinGW: GCC >= 4 does not need SNPRINTF_SIZE_CORR anymore\n\nConflicts:\n\tMakefile\n"
  },
  {
    "commit_hash": "7d40f89137b456820d51ebc1cbb3ffbb966e7fec",
    "commit_message": "Merge branch 'ph/submodule-rebase' (early part)\n\n* 'ph/submodule-rebase' (early part):\n  Rename submodule.<name>.rebase to submodule.<name>.update\n  git-submodule: add support for --rebase.\n\nConflicts:\n\tDocumentation/git-submodule.txt\n\tgit-submodule.sh\n"
  },
  {
    "commit_hash": "436f66b7e908d5ce2f292d1fd4e7f6f9de7c6fa1",
    "commit_message": "Merge branch 'bc/solaris'\n\n* bc/solaris:\n  configure: test whether -lresolv is needed\n  Makefile: insert SANE_TOOL_PATH to PATH before /bin or /usr/bin\n  git-compat-util.h: avoid using c99 flex array feature with Sun compiler 5.8\n  Makefile: add section for SunOS 5.7\n  Makefile: introduce SANE_TOOL_PATH for prepending required elements to PATH\n  Makefile: define __sun__ on SunOS\n  git-compat-util.h: tweak the way _XOPEN_SOURCE is set on Solaris\n  On Solaris choose the OLD_ICONV iconv() declaration based on the UNIX spec\n  Makefile: add NEEDS_RESOLV to optionally add -lresolv to compile arguments\n  Makefile: use /usr/ucb/install on SunOS platforms rather than ginstall\n\nConflicts:\n\tMakefile\n"
  },
  {
    "commit_hash": "95a877a34c3838a92a99794ebc3b082f6f525899",
    "commit_message": "Merge branch 'mh/maint-fix-send-email-threaded' into mh/fix-send-email-threaded\n\n* mh/maint-fix-send-email-threaded:\n  doc/send-email: clarify the behavior of --in-reply-to with --no-thread\n  send-email: fix non-threaded mails\n  add a test for git-send-email for non-threaded mails\n\nConflicts:\n\tgit-send-email.perl\n\tt/t9001-send-email.sh\n"
  },
  {
    "commit_hash": "a0c0447b8eda07529eec2ae8fbc6bf68e1ff2d67",
    "commit_message": "Merge branch 'uk/maint-1.5.3-rebase-i-reflog' into maint\n\n* uk/maint-1.5.3-rebase-i-reflog:\n  rebase--interactive: remote stray closing parenthesis\n\nConflicts:\n\tgit-rebase--interactive.sh\n"
  },
  {
    "commit_hash": "b11cf09043f18b368ec0d988f064ea21247c843d",
    "commit_message": "Merge branch 'da/pretty-tempname'\n\n* da/pretty-tempname:\n  diff: generate pretty filenames in prep_temp_blob()\n  compat: add a basename() compatibility function\n  compat: add a mkstemps() compatibility function\n\nConflicts:\n\tMakefile\n"
  },
  {
    "commit_hash": "456cb4cf3ef6e3dec637b7061b0c834b62eba0f5",
    "commit_message": "Merge branch 'cb/maint-1.6.0-xdl-merge-fix' into maint\n\n* cb/maint-1.6.0-xdl-merge-fix:\n  Change xdl_merge to generate output even for null merges\n  t6023: merge-file fails to output anything for a degenerate merge\n\nConflicts:\n\txdiff/xmerge.c\n"
  },
  {
    "commit_hash": "f9275c68af58e0f65e1557b5109ccbfdbbbc384a",
    "commit_message": "Merge branch 'sb/opt-filename'\n\n* sb/opt-filename:\n  parse-opts: add OPT_FILENAME and transition builtins\n  parse-opts: prepare for OPT_FILENAME\n\nConflicts:\n\tbuiltin-log.c\n"
  },
  {
    "commit_hash": "c6e73936b9ea26fcad0d77d68194545082343c43",
    "commit_message": "Merge branch 'sb/show-branch-parse-options'\n\n* sb/show-branch-parse-options:\n  show-branch: migrate to parse-options API\n  parse-options: add PARSE_OPT_LITERAL_ARGHELP for complicated argh's\n\nConflicts:\n\tparse-options.h\n"
  },
  {
    "commit_hash": "1af4731b5435e708355f20463a458493aa0e5aca",
    "commit_message": "Merge branch 'sb/format-patch-parseopt'\n\n* sb/format-patch-parseopt:\n  format-patch: migrate to parse-options API\n\nConflicts:\n\tbuiltin-log.c\n"
  },
  {
    "commit_hash": "23807fa0086ae6ad6980a2a1071f23ed1a6dde93",
    "commit_message": "Merge branch 'maint'\n\n* maint:\n  Prepare for 1.6.3.2\n  fix cat-file usage message and documentation\n  fetch: report ref storage DF errors more accurately\n  lock_ref: inform callers of unavailable ref\n  merge-options.txt: Clarify merge --squash\n\nConflicts:\n\tRelNotes\n"
  },
  {
    "commit_hash": "2a1feb92ee58770670e6b82992d29cbc5d6f04aa",
    "commit_message": "Merge branch 'js/maint-no-ln-across-libexec-and-bin' into maint\n\n* js/maint-no-ln-across-libexec-and-bin:\n  Add NO_CROSS_DIRECTORY_HARDLINKS support to the Makefile\n\nConflicts:\n\tMakefile\n"
  },
  {
    "commit_hash": "417653777a1d073f53b2053cf0b0838a35cfc7d5",
    "commit_message": "Merge branch 'jk/maint-1.6.0-trace-argv' into maint\n\n* jk/maint-1.6.0-trace-argv:\n  fix GIT_TRACE segfault with shell-quoted aliases\n\nConflicts:\n\talias.c\n"
  },
  {
    "commit_hash": "8a17595899ac49a24128db76a80fbb35da487845",
    "commit_message": "Merge branch 'sb/format-patch-parseopt' into sb/opt-filename\n\n* sb/format-patch-parseopt:\n  format-patch: migrate to parse-options API\n\nConflicts:\n\tbuiltin-log.c\n"
  },
  {
    "commit_hash": "b064e2fc3d197c3c691fe89c43d1bf79f64fcdf7",
    "commit_message": "Merge branch 'sb/show-branch-parse-options' into sb/opt-filename\n\n* sb/show-branch-parse-options:\n  show-branch: migrate to parse-options API\n  parse-options: add PARSE_OPT_LITERAL_ARGHELP for complicated argh's\n\nConflicts:\n\tparse-options.h\n"
  },
  {
    "commit_hash": "2c8f8b19d4f293edd78885880ed1a6166395ffdd",
    "commit_message": "Merge branch 'js/maint-no-ln-across-libexec-and-bin'\n\n* js/maint-no-ln-across-libexec-and-bin:\n  Add NO_CROSS_DIRECTORY_HARDLINKS support to the Makefile\n\nConflicts:\n\tMakefile\n"
  },
  {
    "commit_hash": "2beba6beb0074afac988594539572865fb37a00f",
    "commit_message": "Merge branch 'jk/maint-1.6.0-trace-argv'\n\n* jk/maint-1.6.0-trace-argv:\n  fix GIT_TRACE segfault with shell-quoted aliases\n\nConflicts:\n\talias.c\n"
  },
  {
    "commit_hash": "96825a805419628c35f9fea70997aa749dbb2750",
    "commit_message": "Merge branch 'mh/show-branch-color'\n\n* mh/show-branch-color:\n  bash completion: show-branch color support\n  show-branch: color the commit status signs\n\nConflicts:\n\tcontrib/completion/git-completion.bash\n"
  },
  {
    "commit_hash": "00f97c72f22b82c6c77ae429986060832c6b6f55",
    "commit_message": "Merge branch 'maint-1.6.1' into maint\n\n* maint-1.6.1:\n  GIT 1.6.1.4\n\nConflicts:\n\tGIT-VERSION-GEN\n"
  },
  {
    "commit_hash": "d1c8c0c8c42912eb768a05115c798de50e595f8b",
    "commit_message": "Merge branch 'maint'\n\n* maint:\n  diff -c -p: do not die on submodules\n\nConflicts:\n\tcombine-diff.c\n"
  },
  {
    "commit_hash": "0be9bc0f0a45ba667e7aaca14257da772b38e783",
    "commit_message": "Merge branch 'mk/maint-apply-swap'\n\n* mk/maint-apply-swap:\n  tests: make test-apply-criss-cross-rename more robust\n  builtin-apply: keep information about files to be deleted\n  tests: test applying criss-cross rename patch\n\nConflicts:\n\tt/t4130-apply-criss-cross-rename.sh\n"
  },
  {
    "commit_hash": "9824a388e53ba0951e38f246038fa0ef6fda3397",
    "commit_message": "Merge branch 'lt/pack-object-memuse'\n\n* lt/pack-object-memuse:\n  show_object(): push path_name() call further down\n  process_{tree,blob}: show objects without buffering\n\nConflicts:\n\tbuiltin-pack-objects.c\n\tbuiltin-rev-list.c\n\tlist-objects.c\n\tlist-objects.h\n\tupload-pack.c\n"
  },
  {
    "commit_hash": "a54c4edc511608fdba513cc94812c31fd4b497f6",
    "commit_message": "Merge branch 'maint'\n\n* maint:\n  GIT 1.6.2.3\n  State the effect of filter-branch on graft explicitly\n  process_{tree,blob}: Remove useless xstrdup calls\n\nConflicts:\n\tGIT-VERSION-GEN\n"
  },
  {
    "commit_hash": "796b13781aecce551b8f92049a66646e60f31dce",
    "commit_message": "Merge branch 'maint'\n\n* maint:\n  Start 1.6.2.3 preparation\n  process_{tree,blob}: Remove useless xstrdup calls\n  git-pull.sh: better warning message for \"git pull\" on detached head.\n\nConflicts:\n\tRelNotes\n"
  },
  {
    "commit_hash": "c3067cbfb3fbab32177d5f61ea73127f08ab43cb",
    "commit_message": "Merge branch 'jc/maint-1.6.0-keep-pack' into maint\n\n* jc/maint-1.6.0-keep-pack:\n  pack-objects: don't loosen objects available in alternate or kept packs\n  t7700: demonstrate repack flaw which may loosen objects unnecessarily\n  Remove --kept-pack-only option and associated infrastructure\n  pack-objects: only repack or loosen objects residing in \"local\" packs\n  git-repack.sh: don't use --kept-pack-only option to pack-objects\n  t7700-repack: add two new tests demonstrating repacking flaws\n  is_kept_pack(): final clean-up\n  Simplify is_kept_pack()\n  Consolidate ignore_packed logic more\n  has_sha1_kept_pack(): take \"struct rev_info\"\n  has_sha1_pack(): refactor \"pretend these packs do not exist\" interface\n  git-repack: resist stray environment variable\n\nConflicts:\n\tt/t7700-repack.sh\n"
  },
  {
    "commit_hash": "bb11eb31a2e7da7f878dd501d39f6877ec00eb7d",
    "commit_message": "Merge branch 'jc/maint-1.6.0-blame-s' into maint-1.6.1\n\n* jc/maint-1.6.0-blame-s:\n  blame: read custom grafts given by -S before calling setup_revisions()\n\nConflicts:\n\tbuiltin-blame.c\n"
  },
  {
    "commit_hash": "6da14ee14f85fe5766780e1cbe8d42d385638e9e",
    "commit_message": "Merge branch 'maint'\n\n* maint:\n  Change double quotes to single quotes in message\n  Documentation: clarify .gitattributes search\n  git-checkout.txt: clarify that <branch> applies when no path is given.\n  git-checkout.txt: fix incorrect statement about HEAD and index\n\nConflicts:\n\tDocumentation/git-checkout.txt\n"
  },
  {
    "commit_hash": "fbdc05661d9b732d06c47ccb3d5836d0d1b563e5",
    "commit_message": "Merge branch 'jc/name-branch'\n\n* jc/name-branch:\n  Don't permit ref/branch names to end with \".lock\"\n  check_ref_format(): tighten refname rules\n  strbuf_check_branch_ref(): a helper to check a refname for a branch\n  Fix branch -m @{-1} newname\n  check-ref-format --branch: give Porcelain a way to grok branch shorthand\n  strbuf_branchname(): a wrapper for branch name shorthands\n  Rename interpret/substitute nth_last_branch functions\n\nConflicts:\n\tDocumentation/git-check-ref-format.txt\n"
  },
  {
    "commit_hash": "acb0b7b01f64cf55d508b469eb2a351359c0cd82",
    "commit_message": "Merge branch 'maint-1.6.0' into maint-1.6.1\n\n* maint-1.6.0:\n  commit: abort commit if interactive add failed\n  git-repack: use non-dashed update-server-info\n\nConflicts:\n\tbuiltin-commit.c\n"
  },
  {
    "commit_hash": "5ab2f7b2ce8c51e8c47a4cc57c30fa7cae239005",
    "commit_message": "Merge branch 'jc/maint-1.6.0-blame-s' into maint\n\n* jc/maint-1.6.0-blame-s:\n  blame: read custom grafts given by -S before calling setup_revisions()\n\nConflicts:\n\tbuiltin-blame.c\n"
  },
  {
    "commit_hash": "8afd3178437eef29a08ba21aceb47a94177409d5",
    "commit_message": "Merge branch 'bc/maint-1.6.1-branch-deleted-was' into maint\n\n* bc/maint-1.6.1-branch-deleted-was:\n  git-branch: display \"was sha1\" on branch deletion rather than just \"sha1\"\n\nConflicts:\n\tbuiltin-branch.c\n"
  },
  {
    "commit_hash": "3c91bf6805249d0f59ddff4e5dc4118127527243",
    "commit_message": "Merge branch 'jc/maint-1.6.0-keep-pack'\n\n* jc/maint-1.6.0-keep-pack:\n  pack-objects: don't loosen objects available in alternate or kept packs\n  t7700: demonstrate repack flaw which may loosen objects unnecessarily\n  Remove --kept-pack-only option and associated infrastructure\n  pack-objects: only repack or loosen objects residing in \"local\" packs\n  git-repack.sh: don't use --kept-pack-only option to pack-objects\n  t7700-repack: add two new tests demonstrating repacking flaws\n\nConflicts:\n\tt/t7700-repack.sh\n"
  },
  {
    "commit_hash": "b19293df9e84ed056bc984aa7ef716689b58b0b1",
    "commit_message": "Merge branch 'maint-1.6.1' into maint\n\n* maint-1.6.1:\n  Fix bash completion in path with spaces\n  bash completion: only show 'log --merge' if merging\n  git-tag(1): add hint about commit messages\n  Documentation: update graph api example.\n\nConflicts:\n\tcontrib/completion/git-completion.bash\n"
  },
  {
    "commit_hash": "32786093108231ef7d9e403e90b239f67428c3dd",
    "commit_message": "Merge branch 'cj/doc-quiet' into cj/doc-format\n\n* cj/doc-quiet:\n  Documentation/Makefile: break up texi pipeline\n  Documentation/Makefile: make most operations \"quiet\"\n\nConflicts:\n\tDocumentation/Makefile\n"
  },
  {
    "commit_hash": "f23336f5c15eb90df3275076181d10746479be5b",
    "commit_message": "Merge branch 'db/push-cleanup'\n\n* db/push-cleanup:\n  Move push matching and reporting logic into transport.c\n  Use a common function to get the pretty name of refs\n\nConflicts:\n\ttransport.c\n"
  },
  {
    "commit_hash": "3fcee259d023087184c63eedf1015be6e23ea6e1",
    "commit_message": "Merge branch 'jc/maint-1.6.0-blame-s'\n\n* jc/maint-1.6.0-blame-s:\n  blame: read custom grafts given by -S before calling setup_revisions()\n\nConflicts:\n\tbuiltin-blame.c\n"
  },
  {
    "commit_hash": "6422c6af38747f008ebffc106f9a5799b26091d0",
    "commit_message": "Merge branch 'mg/http-auth'\n\n* mg/http-auth:\n  http-push.c: use a faux remote to pass to http_init\n  Do not name \"repo\" struct \"remote\" in push_http.c\n  http.c: CURLOPT_NETRC_OPTIONAL is not available in ancient versions of cURL\n  http authentication via prompts\n  http_init(): Fix config file parsing\n  http.c: style cleanups\n\nConflicts:\n\thttp-push.c\n"
  },
  {
    "commit_hash": "23fd723c9dfbe9b558c0d9a46696ca93f93bab04",
    "commit_message": "Merge branch 'bc/maint-1.6.1-branch-deleted-was'\n\n* bc/maint-1.6.1-branch-deleted-was:\n  git-branch: display \"was sha1\" on branch deletion rather than just \"sha1\"\n\nConflicts:\n\tbuiltin-branch.c\n"
  },
  {
    "commit_hash": "2545c089e329d340a9bdec9f725fa737063dd7f6",
    "commit_message": "Merge branch 'fg/push-default'\n\n* fg/push-default:\n  builtin-push.c: Fix typo: \"anythig\" -> \"anything\"\n  Display warning for default git push with no push.default config\n  New config push.default to decide default behavior for push\n\nConflicts:\n\tDocumentation/config.txt\n"
  },
  {
    "commit_hash": "78360b576acb0ee47c90552cb3f976a3c6ba4d6a",
    "commit_message": "Merge branch 'js/windows-tests'\n\n* js/windows-tests:\n  t0060: fix whitespace in \"wc -c\" invocation\n  t5503: GIT_DEBUG_SEND_PACK is not supported on MinGW\n  t7004: Use prerequisite tags to skip tests that need gpg\n  Use prerequisites to skip tests that need unzip\n  t3700: Skip a test with backslashes in pathspec\n  Skip tests that require a filesystem that obeys POSIX permissions\n  t0060: Fix tests on Windows\n  Use prerequisite tags to skip tests that depend on symbolic links\n  t9100, t9129: Use prerequisite tags for UTF-8 tests\n  t5302: Use prerequisite tags to skip 64-bit offset tests\n  Skip tests that fail if the executable bit is not handled by the filesystem\n  t3600: Use test prerequisite tags\n  test-lib: Infrastructure to test and check for prerequisites\n  t0050: Check whether git init detected symbolic link support correctly\n  Tests on Windows: $(pwd) must return Windows-style paths\n  test-lib: Work around missing sum on Windows\n  test-lib: Work around incompatible sort and find on Windows\n\nConflicts:\n\tt/t3000-ls-files-others.sh\n"
  },
  {
    "commit_hash": "923cc82c481a99269d397dc86f8b664ba8cb98da",
    "commit_message": "Merge branch 'tr/maint-1.6.0-send-email-irt' into maint\n\n* tr/maint-1.6.0-send-email-irt:\n  send-email: test --no-thread --in-reply-to combination\n  send-email: respect in-reply-to regardless of threading\n\nConflicts:\n\tt/t9001-send-email.sh\n"
  },
  {
    "commit_hash": "2990034f1ed2c3d85d23d5611a1f04d317f785ac",
    "commit_message": "Merge branch 'jc/maint-1.6.0-pack-directory' into maint-1.6.1\n\n* jc/maint-1.6.0-pack-directory:\n  Fix odb_mkstemp() on AIX\n  Make sure objects/pack exists before creating a new pack\n\nConflicts:\n\twrapper.c\n"
  },
  {
    "commit_hash": "de2e3b04cd70a22016561547530f980c66807641",
    "commit_message": "Merge branch 'mv/parseopt-ls-files'\n\n* mv/parseopt-ls-files:\n  ls-files: fix broken --no-empty-directory\n  t3000: use test_cmp instead of diff\n  parse-opt: migrate builtin-ls-files.\n  Turn the flags in struct dir_struct into a single variable\n\nConflicts:\n\tbuiltin-ls-files.c\n\tt/t3000-ls-files-others.sh\n"
  },
  {
    "commit_hash": "0f64f874317a67d4d32bc10d85cf19e27ff0e43b",
    "commit_message": "Merge branch 'jc/clone-branch-rebase'\n\n* jc/clone-branch-rebase:\n  Improve \"git branch --tracking\" output\n  Make git-clone respect branch.autosetuprebase\n\nConflicts:\n\tbuiltin-clone.c\n"
  },
  {
    "commit_hash": "ca8a36e6e0cf6ee952df16160bc853630c56b997",
    "commit_message": "Merge branch 'js/remote-improvements'\n\n* js/remote-improvements: (23 commits)\n  builtin-remote.c: no \"commented out\" code, please\n  builtin-remote: new show output style for push refspecs\n  builtin-remote: new show output style\n  remote: make guess_remote_head() use exact HEAD lookup if it is available\n  builtin-remote: add set-head subcommand\n  builtin-remote: teach show to display remote HEAD\n  builtin-remote: fix two inconsistencies in the output of \"show <remote>\"\n  builtin-remote: make get_remote_ref_states() always populate states.tracked\n  builtin-remote: rename variables and eliminate redundant function call\n  builtin-remote: remove unused code in get_ref_states\n  builtin-remote: refactor duplicated cleanup code\n  string-list: new for_each_string_list() function\n  remote: make match_refs() not short-circuit\n  remote: make match_refs() copy src ref before assigning to peer_ref\n  remote: let guess_remote_head() optionally return all matches\n  remote: make copy_ref() perform a deep copy\n  remote: simplify guess_remote_head()\n  move locate_head() to remote.c\n  move duplicated ref_newer() to remote.c\n  move duplicated get_local_heads() to remote.c\n  ...\n\nConflicts:\n\tbuiltin-clone.c\n"
  },
  {
    "commit_hash": "a57ca9dd400c8459a3cd3d769bab317f57d1e9ac",
    "commit_message": "Merge branch 'tr/maint-1.6.0-send-email-irt'\n\n* tr/maint-1.6.0-send-email-irt:\n  send-email: test --no-thread --in-reply-to combination\n  send-email: respect in-reply-to regardless of threading\n\nConflicts:\n\tt/t9001-send-email.sh\n"
  },
  {
    "commit_hash": "bf0fe35c938ac9f03d1369600b0c76e428a57507",
    "commit_message": "Merge branch 'maint-1.6.0' into maint-1.6.1\n\n* maint-1.6.0:\n  bisect: fix another instance of eval'ed string\n  bisect: fix quoting TRIED revs when \"bad\" commit is also \"skip\"ped\n  Support \"\\\" in non-wildcard exclusion entries\n\nConflicts:\n\tgit-bisect.sh\n"
  },
  {
    "commit_hash": "bbc6a14b723ae831f35fc1b923fe497e7329443e",
    "commit_message": "Merge branch 'en/maint-hash-object' into maint\n\n* en/maint-hash-object:\n  Ensure proper setup of git_dir for git-hash-object\n\nConflicts:\n\thash-object.c\n"
  },
  {
    "commit_hash": "5a5bd23486c5d8721f4654eadec75213d3dc074f",
    "commit_message": "Merge branch 'tr/format-patch-thread'\n\n* tr/format-patch-thread:\n  format-patch: support deep threading\n  format-patch: thread as reply to cover letter even with in-reply-to\n  format-patch: track several references\n  format-patch: threading test reactivation\n\nConflicts:\n\tbuiltin-log.c\n"
  },
  {
    "commit_hash": "8cc3fe45c92a2e85400a6ee83c3b3a4a8ca1d6c7",
    "commit_message": "Merge branch 'en/maint-hash-object'\n\n* en/maint-hash-object:\n  Ensure proper setup of git_dir for git-hash-object\n\nConflicts:\n\thash-object.c\n"
  },
  {
    "commit_hash": "814742672f765e379f7809eab7650e8ad0a24c35",
    "commit_message": "Merge branch 'js/branch-symref'\n\n* js/branch-symref:\n  add basic branch display tests\n  branch: clean up repeated strlen\n  Avoid segfault with 'git branch' when the HEAD is detached\n  builtin-branch: improve output when displaying remote branches\n\nConflicts:\n\tbuiltin-branch.c\n"
  },
  {
    "commit_hash": "48fce9356531469b00bd0e1592d77e8b229316d0",
    "commit_message": "Merge branch 'cc/maint-1.6.0-bisect-fix'\n\n* cc/maint-1.6.0-bisect-fix:\n  bisect: fix another instance of eval'ed string\n\nConflicts:\n\tgit-bisect.sh\n"
  },
  {
    "commit_hash": "0c3473561610ac9f94c65f64178d2a66ee73eb64",
    "commit_message": "Merge branch 'cc/maint-1.6.0-bisect-fix'\n\n* cc/maint-1.6.0-bisect-fix:\n  bisect: fix quoting TRIED revs when \"bad\" commit is also \"skip\"ped\n\nConflicts:\n\tgit-bisect.sh\n"
  },
  {
    "commit_hash": "30aa4fb15fa408596dea59cdc9f00c94eeaa69f1",
    "commit_message": "Merge branch 'maint'\n\n* maint:\n  Prepare for 1.6.1.4.\n  Make repack less likely to corrupt repository\n  fast-export: ensure we traverse commits in topological order\n  Clear the delta base cache if a pack is rebuilt\n\nConflicts:\n\tRelNotes\n"
  },
  {
    "commit_hash": "afce435000030e3ad076ef1dd413e0fa314cdcbb",
    "commit_message": "Merge branch 'maint-1.5.5' into maint-1.5.6\n\n* maint-1.5.5:\n  revision traversal and pack: notice and die on missing commit\n\nConflicts:\n\trevision.c\n"
  },
  {
    "commit_hash": "7de265a4cfd2c6dbe1c7af8c592a23ede08ec854",
    "commit_message": "Merge branch 'maint'\n\n* maint:\n  GIT 1.6.1.3\n\nConflicts:\n\tGIT-VERSION-GEN\n\tRelNotes\n"
  },
  {
    "commit_hash": "7b75b331f6744fbf953fe8913703378ef86a2189",
    "commit_message": "Merge branch 'js/notes'\n\n* js/notes:\n  git-notes: fix printing of multi-line notes\n  notes: fix core.notesRef documentation\n  Add an expensive test for git-notes\n  Speed up git notes lookup\n  Add a script to edit/inspect notes\n  Introduce commit notes\n\nConflicts:\n\tpretty.c\n"
  },
  {
    "commit_hash": "141b6b83d7ca5bd32d55a0a7e08384084d081557",
    "commit_message": "Merge branch 'lt/maint-wrap-zlib' into maint\n\n* lt/maint-wrap-zlib:\n  Wrap inflate and other zlib routines for better error reporting\n\nConflicts:\n\thttp-push.c\n\thttp-walker.c\n\tsha1_file.c\n"
  },
  {
    "commit_hash": "a4f004bffcea5b2cd8671738305962afe7b1d08f",
    "commit_message": "Merge branch 'ns/am-slacker'\n\n* ns/am-slacker:\n  git-am: Add --ignore-date option\n  am: Add --committer-date-is-author-date option\n\nConflicts:\n\tgit-am.sh\n"
  },
  {
    "commit_hash": "b63bc0bc3152ca42ba1c9fa9bed73da061beeca2",
    "commit_message": "Merge branch 'maint'\n\n* maint:\n  User-manual: \"git stash <comment>\" form is long gone\n  add test-dump-cache-tree in Makefile\n  fix typo in Documentation\n  apply: fix access to an uninitialized mode variable, found by valgrind\n\nConflicts:\n\tMakefile\n"
  },
  {
    "commit_hash": "a9ed6ce0e7057b94809d3c51094ba96fe96fded8",
    "commit_message": "Merge branch 'jc/maint-format-patch-o-relative' into maint\n\n* jc/maint-format-patch-o-relative:\n  Teach format-patch to handle output directory relative to cwd\n\nConflicts:\n\tt/t4014-format-patch.sh\n"
  },
  {
    "commit_hash": "8712b3cdb0495f5a56b91cd67e2697412447a886",
    "commit_message": "Merge branch 'tr/previous-branch'\n\n* tr/previous-branch:\n  t1505: remove debugging cruft\n  Simplify parsing branch switching events in reflog\n  Introduce for_each_recent_reflog_ent().\n  interpret_nth_last_branch(): plug small memleak\n  Fix reflog parsing for a malformed branch switching entry\n  Fix parsing of @{-1}@{1}\n  interpret_nth_last_branch(): avoid traversing the reflog twice\n  checkout: implement \"-\" abbreviation, add docs and tests\n  sha1_name: support @{-N} syntax in get_sha1()\n  sha1_name: tweak @{-N} lookup\n  checkout: implement \"@{-N}\" shortcut name for N-th last branch\n\nConflicts:\n\tsha1_name.c\n"
  },
  {
    "commit_hash": "5dc1308562ab5991ecada68b06707709bea408c9",
    "commit_message": "Merge branch 'js/patience-diff'\n\n* js/patience-diff:\n  bash completions: Add the --patience option\n  Introduce the diff option '--patience'\n  Implement the patience diff algorithm\n\nConflicts:\n\tcontrib/completion/git-completion.bash\n"
  },
  {
    "commit_hash": "36dd9393938d4e7f8843c6c587c9b4db077377fc",
    "commit_message": "Merge branch 'lt/maint-wrap-zlib'\n\n* lt/maint-wrap-zlib:\n  Wrap inflate and other zlib routines for better error reporting\n\nConflicts:\n\thttp-push.c\n\thttp-walker.c\n\tsha1_file.c\n"
  },
  {
    "commit_hash": "d9fde065bd808fbbad3b53e10e160c8f8193b577",
    "commit_message": "Merge branch 'rs/ctype'\n\n* rs/ctype:\n  Add is_regex_special()\n  Change NUL char handling of isspecial()\n  Reformat ctype.c\n  Add ctype test\n\nConflicts:\n\tMakefile\n"
  },
  {
    "commit_hash": "a14f15427bca9af70127f26cd3cb0fcd78c8d36f",
    "commit_message": "Merge branch 'jc/maint-format-patch-o-relative'\n\n* jc/maint-format-patch-o-relative:\n  Teach format-patch to handle output directory relative to cwd\n\nConflicts:\n\tt/t4014-format-patch.sh\n"
  },
  {
    "commit_hash": "6fc2a199699ec151a081301d53fbd324c95f47a7",
    "commit_message": "Merge branch 'gb/gitweb-patch'\n\n* gb/gitweb-patch:\n  gitweb: link to patch(es) view in commit(diff) and (short)log view\n  gitweb: add patches view\n  gitweb: change call pattern for git_commitdiff\n  gitweb: add patch view\n\nConflicts:\n\tgitweb/gitweb.perl\n"
  },
  {
    "commit_hash": "9e8f6e7f6e8817db30a492e32fa92c1daf51b77c",
    "commit_message": "Merge branch 'cb/maint-merge-recursive-fix' into maint\n\n* cb/maint-merge-recursive-fix:\n  merge-recursive: do not clobber untracked working tree garbage\n  modify/delete conflict resolution overwrites untracked file\n\nConflicts:\n\tbuiltin-merge-recursive.c\n"
  },
  {
    "commit_hash": "7bb5321be0ecb70a990ad49da2a1366c19201372",
    "commit_message": "Merge branch 'rs/diff-ihc'\n\n* rs/diff-ihc:\n  diff: add option to show context between close hunks\n\nConflicts:\n\tDocumentation/diff-options.txt\n"
  },
  {
    "commit_hash": "373654ee0f568fdeab891c621d6a1ac6b0c15d3a",
    "commit_message": "Merge branch 'maint'\n\n* maint:\n  Prepare for v1.6.1.1 maintenance release\n  Documentation/diff-options.txt: unify options\n  gitweb: Fix export check in git_get_projects_list\n\nConflicts:\n\tRelNotes\n"
  },
  {
    "commit_hash": "42fc11c1103a88c49233f04dc0c2f5659b3973fe",
    "commit_message": "Merge branch 'mm/maint-sort-config-doc' into mm/sort-config-doc\n\n* mm/maint-sort-config-doc:\n  config.txt: alphabetize configuration sections\n\nConflicts:\n\tDocumentation/config.txt\n"
  },
  {
    "commit_hash": "3e9f158c804776f6a7a42bef582a38909d3e920d",
    "commit_message": "Merge branch 'ds/uintmax-config' (early part)\n\n* 'ds/uintmax-config' (early part):\n  Add autoconf tests for pthreads\n  Make Pthread link flags configurable\n  Add Makefile check for FreeBSD 4.9-SECURITY\n  Build: add NO_UINTMAX_T to support ancient systems\n\nConflicts:\n\tMakefile\n"
  },
  {
    "commit_hash": "3fdd37fe1520765d1d207737ab65415e3d2ca174",
    "commit_message": "Merge branch 'mk/maint-cg-push'\n\n* mk/maint-cg-push:\n  git push: Interpret $GIT_DIR/branches in a Cogito compatible way\n\nConflicts:\n\tt/t5516-fetch-push.sh\n"
  },
  {
    "commit_hash": "b2b80c107f6db4c3297af59fd2fb40ada5899778",
    "commit_message": "Merge branch 'lt/decorate'\n\n* lt/decorate:\n  rev-list documentation: clarify the two parts of history simplification\n  Document \"git log --simplify-by-decoration\"\n  Document \"git log --source\"\n  revision traversal: '--simplify-by-decoration'\n  Make '--decorate' set an explicit 'show_decorations' flag\n  revision: make tree comparison functions take commits rather than trees\n  Add a 'source' decorator for commits\n\nConflicts:\n\tDocumentation/rev-list-options.txt\n"
  },
  {
    "commit_hash": "72b6157aa847615a778ac9950e87dde109afa50c",
    "commit_message": "Merge branch 'jk/diff-convfilter'\n\n* jk/diff-convfilter:\n  enable textconv for diff in verbose status/commit\n  wt-status: load diff ui config\n  only textconv regular files\n  userdiff: require explicitly allowing textconv\n  refactor userdiff textconv code\n\nConflicts:\n\tt/t4030-diff-textconv.sh\n"
  },
  {
    "commit_hash": "459d60084fa463203d0adfc99cbf5d6fcd7edd43",
    "commit_message": "Merge branch 'jk/diff-convfilter-test-fix'\n\n* jk/diff-convfilter-test-fix:\n  Avoid using non-portable `echo -n` in tests.\n  add userdiff textconv tests\n  document the diff driver textconv feature\n  diff: add missing static declaration\n\nConflicts:\n\tDocumentation/gitattributes.txt\n"
  },
  {
    "commit_hash": "6cd3729eae8d8945c0482423149163d40afd082c",
    "commit_message": "Merge branch 'maint'\n\n* maint:\n  Start 1.6.0.5 cycle\n  Fix pack.packSizeLimit and --max-pack-size handling\n  checkout: Fix \"initial checkout\" detection\n  Remove the period after the git-check-attr summary\n\nConflicts:\n\tRelNotes\n"
  },
  {
    "commit_hash": "bc9c0248a5cf184756ba562d6c452cace8863517",
    "commit_message": "Merge branch 'maint'\n\n* maint:\n  GIT 1.6.0.4\n  Update RPM spec for the new location of git-cvsserver.\n  push: fix local refs update if already up-to-date\n  do not force write of packed refs\n\nConflicts:\n\tbuiltin-revert.c\n"
  },
  {
    "commit_hash": "8b1981d32b41f1b4e26d8d96a3c6e63b9bc746b0",
    "commit_message": "Merge branch 'ar/maint-mksnpath' into maint\n\n* ar/maint-mksnpath:\n  Use git_pathdup instead of xstrdup(git_path(...))\n  git_pathdup: returns xstrdup-ed copy of the formatted path\n  Fix potentially dangerous use of git_path in ref.c\n  Add git_snpath: a .git path formatting routine with output buffer\n  Fix potentially dangerous uses of mkpath and git_path\n  Fix mkpath abuse in dwim_ref and dwim_log of sha1_name.c\n  Add mksnpath which allows you to specify the output buffer\n\nConflicts:\n\tbuiltin-revert.c\n\trerere.c\n"
  },
  {
    "commit_hash": "a1a846a19e854a3b3baff8f55c039846880a2635",
    "commit_message": "Merge branch 'ar/mksnpath'\n\n* ar/mksnpath:\n  Use git_pathdup instead of xstrdup(git_path(...))\n  git_pathdup: returns xstrdup-ed copy of the formatted path\n  Fix potentially dangerous use of git_path in ref.c\n  Add git_snpath: a .git path formatting routine with output buffer\n  Fix potentially dangerous uses of mkpath and git_path\n  Fix potentially dangerous uses of mkpath and git_path\n  Fix mkpath abuse in dwim_ref and dwim_log of sha1_name.c\n  Add mksnpath which allows you to specify the output buffer\n\nConflicts:\n\tbuiltin-revert.c\n"
  },
  {
    "commit_hash": "aebd173ffa7a4e67447f0157a14abde7767c54e9",
    "commit_message": "Merge branch 'maint'\n\n* maint:\n  Start 1.6.0.4 cycle\n  add instructions on how to send patches to the mailing list with Gmail\n  Documentation/gitattributes: Add subsection header for each attribute\n  git send-email: avoid leaking directory file descriptors.\n  send-pack: do not send out single-level refs such as refs/stash\n  fix overlapping memcpy in normalize_absolute_path\n  pack-objects: avoid reading uninitalized data\n  correct cache_entry allocation\n\nConflicts:\n\tRelNotes\n"
  },
  {
    "commit_hash": "98b35e2c749614446b916230148d66857e8a09f3",
    "commit_message": "Merge branch 'ar/maint-mksnpath' into ar/mksnpath\n\n* ar/maint-mksnpath:\n  Use git_pathdup instead of xstrdup(git_path(...))\n  git_pathdup: returns xstrdup-ed copy of the formatted path\n  Fix potentially dangerous use of git_path in ref.c\n  Add git_snpath: a .git path formatting routine with output buffer\n\nConflicts:\n\tbuiltin-revert.c\n\trefs.c\n\trerere.c\n"
  },
  {
    "commit_hash": "ca6c06b2efe2f55c498670efcb419bce35678e03",
    "commit_message": "Merge branch 'js/maint-fetch-update-head'\n\n* js/maint-fetch-update-head:\n  pull: allow \"git pull origin $something:$current_branch\" into an unborn branch\n  Fix fetch/pull when run without --update-head-ok\n\nConflicts:\n\tt/t5510-fetch.sh\n"
  },
  {
    "commit_hash": "a157400c972bbdeab2b5629658c99839c855f5ab",
    "commit_message": "Merge branch 'jc/maint-co-track'\n\n* jc/maint-co-track:\n  Enhance hold_lock_file_for_{update,append}() API\n  demonstrate breakage of detached checkout with symbolic link HEAD\n  Fix \"checkout --track -b newbranch\" on detached HEAD\n\nConflicts:\n\tbuiltin-commit.c\n"
  },
  {
    "commit_hash": "4f2d651e5b3414eac5d22ff47366d22c8cc289f6",
    "commit_message": "Merge branch 'mv/merge-noff'\n\n* mv/merge-noff:\n  builtin-commit: use reduce_heads() only when appropriate\n\nConflicts:\n\tbuiltin-commit.c\n\tt/t7600-merge.sh\n"
  },
  {
    "commit_hash": "e845e16ee6de99a203db47eeb840daf3b1914ec9",
    "commit_message": "Merge branch 'jk/maint-ls-files-other' into jk/fix-ls-files-other\n\n* jk/maint-ls-files-other:\n  refactor handling of \"other\" files in ls-files and status\n\nConflicts:\n\tread-cache.c\n"
  },
  {
    "commit_hash": "46dc1b0e332612aa32c139007fa33f4b429de9d1",
    "commit_message": "Merge branch 'maint'\n\n* maint:\n  t1301-shared-repo.sh: don't let a default ACL interfere with the test\n  git-check-attr(1): add output and example sections\n  xdiff-interface.c: strip newline (and cr) from line before pattern matching\n  t4018-diff-funcname: demonstrate end of line funcname matching flaw\n  t4018-diff-funcname: rework negated last expression test\n  Typo \"does not exists\" when git remote update remote.\n  remote.c: correct the check for a leading '/' in a remote name\n  Add testcase to ensure merging an early part of a branch is done properly\n\nConflicts:\n\tt/t7600-merge.sh\n"
  },
  {
    "commit_hash": "e782e12f89955dfb0be82098af3cfdd8dd0eaf80",
    "commit_message": "Merge branch 'maint'\n\n* maint:\n  rebase -i: do not fail when there is no commit to cherry-pick\n  test-lib: fix color reset in say_color()\n  fix pread()'s short read in index-pack\n\nConflicts:\n\tcsum-file.c\n"
  },
  {
    "commit_hash": "276328ffb87cefdc515bee5f09916aea6e0244ed",
    "commit_message": "Merge branch 'maint'\n\n* maint:\n  Update release notes for 1.6.0.3\n  Teach rebase -i to honor pre-rebase hook\n  docs: describe pre-rebase hook\n  do not segfault if make_cache_entry failed\n  make prefix_path() never return NULL\n  fix bogus \"diff --git\" header from \"diff --no-index\"\n  Fix fetch/clone --quiet when stdout is connected\n  builtin-blame: Fix blame -C -C with submodules.\n  bash: remove fetch, push, pull dashed form leftovers\n\nConflicts:\n\tdiff.c\n"
  },
  {
    "commit_hash": "3e3d4ee7cb7726dcf799f95d27bce384c32b2c8a",
    "commit_message": "Merge branch 'pb/gitweb-tagcloud' into pb/gitweb\n\n* pb/gitweb-tagcloud:\n  gitweb: Support for simple project search form\n  gitweb: Make the by_tag filter delve in forks as well\n  gitweb: Support for tag clouds\n  ... (+ many updates from master) ...\n\nConflicts:\n\tgitweb/gitweb.perl\n"
  },
  {
    "commit_hash": "9800c0df412869c7949935b61581b9361fc49bd1",
    "commit_message": "Merge branch 'bc/master-diff-hunk-header-fix'\n\n* bc/master-diff-hunk-header-fix:\n  Clarify commit error message for unmerged files\n  Use strchrnul() instead of strchr() plus manual workaround\n  Use remove_path from dir.c instead of own implementation\n  Add remove_path: a function to remove as much as possible of a path\n  git-submodule: Fix \"Unable to checkout\" for the initial 'update'\n  Clarify how the user can satisfy stash's 'dirty state' check.\n  t4018-diff-funcname: test syntax of builtin xfuncname patterns\n  t4018-diff-funcname: test syntax of builtin xfuncname patterns\n  make \"git remote\" report multiple URLs\n  diff hunk pattern: fix misconverted \"\\{\" tex macro introducers\n  diff: fix \"multiple regexp\" semantics to find hunk header comment\n  diff: use extended regexp to find hunk headers\n  diff: use extended regexp to find hunk headers\n  diff.*.xfuncname which uses \"extended\" regex's for hunk header selection\n  diff.c: associate a flag with each pattern and use it for compiling regex\n  diff.c: return pattern entry pointer rather than just the hunk header pattern\n\nConflicts:\n\tbuiltin-merge-recursive.c\n\tt/t7201-co.sh\n\txdiff-interface.h\n"
  },
  {
    "commit_hash": "5a139ba483efea47e103fef47afe87157e3bba77",
    "commit_message": "Merge branch 'maint' into bc/master-diff-hunk-header-fix\n\n* maint: (41 commits)\n  Clarify commit error message for unmerged files\n  Use strchrnul() instead of strchr() plus manual workaround\n  Use remove_path from dir.c instead of own implementation\n  Add remove_path: a function to remove as much as possible of a path\n  git-submodule: Fix \"Unable to checkout\" for the initial 'update'\n  Clarify how the user can satisfy stash's 'dirty state' check.\n  Remove empty directories in recursive merge\n  Documentation: clarify the details of overriding LESS via core.pager\n  Update release notes for 1.6.0.3\n  checkout: Do not show local changes when in quiet mode\n  for-each-ref: Fix --format=%(subject) for log message without newlines\n  git-stash.sh: don't default to refs/stash if invalid ref supplied\n  maint: check return of split_cmdline to avoid bad config strings\n  builtin-prune.c: prune temporary packs in <object_dir>/pack directory\n  Do not perform cross-directory renames when creating packs\n  Use dashless git commands in setgitperms.perl\n  git-remote: do not use user input in a printf format string\n  make \"git remote\" report multiple URLs\n  Start draft release notes for 1.6.0.3\n  git-repack uses --no-repack-object, not --no-repack-delta.\n  ...\n\nConflicts:\n\tRelNotes\n"
  },
  {
    "commit_hash": "edb7e82f72106add9f2fbaf9d99d9532a72e3f91",
    "commit_message": "Merge branch 'bc/maint-diff-hunk-header-fix' into maint\n\n* bc/maint-diff-hunk-header-fix:\n  t4018-diff-funcname: test syntax of builtin xfuncname patterns\n  diff hunk pattern: fix misconverted \"\\{\" tex macro introducers\n  diff: use extended regexp to find hunk headers\n  diff.*.xfuncname which uses \"extended\" regex's for hunk header selection\n  diff.c: associate a flag with each pattern and use it for compiling regex\n  diff.c: return pattern entry pointer rather than just the hunk header pattern\n\nConflicts:\n\tDocumentation/gitattributes.txt\n"
  },
  {
    "commit_hash": "9ba929ed652f5ed7707f1c684999af4ad02c4925",
    "commit_message": "Merge branch 'jc/better-conflict-resolution'\n\n* jc/better-conflict-resolution:\n  Fix AsciiDoc errors in merge documentation\n  git-merge documentation: describe how conflict is presented\n  checkout --conflict=<style>: recreate merge in a non-default style\n  checkout -m: recreate merge when checking out of unmerged index\n  git-merge-recursive: learn to honor merge.conflictstyle\n  merge.conflictstyle: choose between \"merge\" and \"diff3 -m\" styles\n  rerere: understand \"diff3 -m\" style conflicts with the original\n  rerere.c: use symbolic constants to keep track of parsing states\n  xmerge.c: \"diff3 -m\" style clips merge reduction level to EAGER or less\n  xmerge.c: minimum readability fixups\n  xdiff-merge: optionally show conflicts in \"diff3 -m\" style\n  xdl_fill_merge_buffer(): separate out a too deeply nested function\n  checkout --ours/--theirs: allow checking out one side of a conflicting merge\n  checkout -f: allow ignoring unmerged paths when checking out of the index\n\nConflicts:\n\tDocumentation/git-checkout.txt\n\tbuiltin-checkout.c\n\tbuiltin-merge-recursive.c\n\tt/t7201-co.sh\n"
  },
  {
    "commit_hash": "15dc66abf02fa22a03d709725bcaeeec4b809834",
    "commit_message": "Merge branch 'maint'\n\n* maint:\n  Remove empty directories in recursive merge\n  Documentation: clarify the details of overriding LESS via core.pager\n\nConflicts:\n\tbuiltin-merge-recursive.c\n"
  },
  {
    "commit_hash": "92bb978541af02ac624d1b9aeec296691cc15734",
    "commit_message": "Merge branch 'bc/maint-diff-hunk-header-fix' into bc/master-diff-hunk-header-fix\n\n* bc/maint-diff-hunk-header-fix:\n  diff hunk pattern: fix misconverted \"\\{\" tex macro introducers\n\nConflicts:\n\tdiff.c\n"
  },
  {
    "commit_hash": "cd0843198fecf9faa6e82f6db15fc9c7ec31d3f4",
    "commit_message": "Merge branch 'bc/maint-diff-hunk-header-fix' into bc/master-diff-hunk-header-fix\n\n* bc/maint-diff-hunk-header-fix:\n  diff: use extended regexp to find hunk headers\n\nConflicts:\n\tdiff.c\n"
  },
  {
    "commit_hash": "34a5d35bbd6164cfbe08f5f14e359867ce80955b",
    "commit_message": "Merge branch 'maint'\n\n* maint:\n  Start draft release notes for 1.6.0.3\n  git-repack uses --no-repack-object, not --no-repack-delta.\n  Typo \"bogos\" in format-patch error message.\n  builtin-clone: fix typo\n  Bust the ghost of long-defunct diffcore-pathspec.\n  completion: git commit should list --interactive\n\nConflicts:\n\tRelNotes\n"
  },
  {
    "commit_hash": "dde4af4313c6fba5269df384d97ef4fa3ab5971d",
    "commit_message": "Merge branch 'bc/maint-diff-hunk-header-fix' into bc/master-diff-hunk-header-fix\n\n* bc/maint-diff-hunk-header-fix:\n  diff.*.xfuncname which uses \"extended\" regex's for hunk header selection\n  diff.c: associate a flag with each pattern and use it for compiling regex\n  diff.c: return pattern entry pointer rather than just the hunk header pattern\n  Cosmetical command name fix\n  Start conforming code to \"git subcmd\" style part 3\n  t9700/test.pl: remove File::Temp requirement\n  t9700/test.pl: avoid bareword 'STDERR' in 3-argument open()\n  GIT 1.6.0.2\n  Fix some manual typos.\n  Use compatibility regex library also on FreeBSD\n  Use compatibility regex library also on AIX\n  Update draft release notes for 1.6.0.2\n  Use compatibility regex library for OSX/Darwin\n  git-svn: Fixes my() parameter list syntax error in pre-5.8 Perl\n  Git.pm: Use File::Temp->tempfile instead of ->new\n  t7501: always use test_cmp instead of diff\n  Start conforming code to \"git subcmd\" style part 2\n  diff: Help \"less\" hide ^M from the output\n  checkout: do not check out unmerged higher stages randomly\n\nConflicts:\n\tDocumentation/git.txt\n\tDocumentation/gitattributes.txt\n\tMakefile\n\tdiff.c\n\tt/t7201-co.sh\n"
  },
  {
    "commit_hash": "c4398286fa5245cf54d73f6016444179d73f140b",
    "commit_message": "Merge branch 'np/pack'\n\n* np/pack:\n  t5300: improve SHA1 collision test\n  pack-objects: don't include missing preferred base objects\n  sha1write: don't copy full sized buffers\n\nConflicts:\n\tt/t5300-pack-object.sh\n"
  },
  {
    "commit_hash": "b281eea75f0ab68e3c9510323c73b78cd3e62814",
    "commit_message": "Merge branch 'maint'\n\n* maint:\n  Update draft release notes for 1.6.0.2\n  Use compatibility regex library for OSX/Darwin\n  git-svn: Fixes my() parameter list syntax error in pre-5.8 Perl\n  Git.pm: Use File::Temp->tempfile instead of ->new\n  t7501: always use test_cmp instead of diff\n\nConflicts:\n\tMakefile\n"
  },
  {
    "commit_hash": "cd50988ae03e086ca1a8f18584153d359699ea25",
    "commit_message": "Merge branch 'jc/cc-ld-dynpath'\n\n* jc/cc-ld-dynpath:\n  configure: auto detect dynamic library path switches\n  Makefile: Allow CC_LD_DYNPATH to be overriden\n\nConflicts:\n\tMakefile\n\tconfig.mak.in\n"
  },
  {
    "commit_hash": "11bd3ddb913afd9665e7e822ea54be4fc8d2d5ea",
    "commit_message": "Merge branch 'jc/maint-checkout-fix'\n\n* jc/maint-checkout-fix:\n  checkout: do not check out unmerged higher stages randomly\n\nConflicts:\n\tt/t7201-co.sh\n"
  },
  {
    "commit_hash": "9b8ae93ad92efef59649a3a7c4bed162d2051059",
    "commit_message": "Merge branch 'maint'\n\n* maint:\n  Start 1.6.0.2 maintenance cycle\n  tests: use \"git xyzzy\" form (t7200 - t9001)\n  tests: use \"git xyzzy\" form (t7000 - t7199)\n  Fix passwd(5) ref and reflect that commit doens't use commit-tree\n  improve handling of sideband message display\n  tests: use \"git xyzzy\" form (t3600 - t6999)\n  tests: use \"git xyzzy\" form (t0000 - t3599)\n  checkout: fix message when leaving detached HEAD\n  clone: fix creation of explicitly named target directory\n  'git foo' program identifies itself without dash in die() messages\n  setup_git_directory(): fix move to worktree toplevel directory\n  update-index: fix worktree setup\n  Start conforming code to \"git subcmd\" style\n  read-tree: setup worktree if merge is required\n  grep: fix worktree setup\n  diff*: fix worktree setup\n\nConflicts:\n\tRelNotes\n\tt/t3900-i18n-commit.sh\n\tt/t7003-filter-branch.sh\n"
  },
  {
    "commit_hash": "961a628fdd79a30188b0f76be98b3c1db8e13389",
    "commit_message": "Merge branch 'maint'\n\n* maint:\n  git-gui: Fix string escaping in po2msg.sh\n  git gui: show diffs with a minimum of 1 context line\n\nConflicts:\n\tlib/option.tcl\n"
  },
  {
    "commit_hash": "a1184d85e8752658f02746982822f43f32316803",
    "commit_message": "Merge branch 'mv/merge-custom'\n\n* mv/merge-custom:\n  t7606: fix custom merge test\n  Fix \"git-merge -s bogo\" help text\n  Update .gitignore to ignore git-help\n  Builtin git-help.\n  builtin-help: always load_command_list() in cmd_help()\n  Add a second testcase for handling invalid strategies in git-merge\n  Add a new test for using a custom merge strategy\n  builtin-merge: allow using a custom strategy\n  builtin-help: make some internal functions available to other builtins\n\nConflicts:\n\thelp.c\n"
  },
  {
    "commit_hash": "a1975c4feaa5e9a45beb7aad22b4a0cca44dcbb8",
    "commit_message": "Merge branch 'ak/p4'\n\n* ak/p4:\n  Utilise our new p4_read_pipe and p4_write_pipe wrappers\n  Add p4 read_pipe and write_pipe wrappers\n  Put in the two other configuration elements found in the source\n  Put some documentation in about the parameters that have been added\n  Move git-p4.syncFromOrigin into a configuration parameters section\n  Consistently use 'git-p4' for the configuration entries\n  If the user has configured various parameters, use them.\n  Switch to using 'p4_build_cmd'\n  If we are in verbose mode, output what we are about to run (or return)\n  Add a single command that will be used to construct the 'p4' command\n  Utilise the new 'p4_system' function.\n  Have a command that specifically invokes 'p4' (via system)\n  Utilise the new 'p4_read_pipe_lines' command\n  Create a specific version of the read_pipe_lines command for p4 invocations\n\nConflicts:\n\tcontrib/fast-import/git-p4\n"
  },
  {
    "commit_hash": "00b718e02d97c956cade8c1b4cbe29a9d3e92765",
    "commit_message": "Merge branch 'jc/post-simplify' into tr/rev-list-docs\n\n* jc/post-simplify:\n  Topo-sort before --simplify-merges\n  revision traversal: show full history with merge simplification\n  revision.c: whitespace fix\n\nConflicts:\n\tDocumentation/rev-list-options.txt\n"
  },
  {
    "commit_hash": "10d9d887ecdc81197162d7bbe5dfc0d028498fd6",
    "commit_message": "Merge branch 'maint'\n\n* maint:\n  Documentation: fix invalid reference to 'mybranch' in user manual\n  Fix deleting reflog entries from HEAD reflog\n  reflog test: add more tests for 'reflog delete'\n  Documentation: rev-list-options: Fix -g paragraph formatting\n\nConflicts:\n\tDocumentation/user-manual.txt\n"
  },
  {
    "commit_hash": "0bb3a0ba9e3cbb283a747e4736bcf7484d076a73",
    "commit_message": "Merge branch 'maint'\n\n* maint:\n  asciidoc markup fixes\n  Fail properly when cloning from invalid HTTP URL\n\nConflicts:\n\tDocumentation/git-push.txt\n"
  },
  {
    "commit_hash": "372c767610c4e4d7f4832d037ac51a62a59875a3",
    "commit_message": "Merge branch 'maint'\n\n* maint:\n  git-name-rev: allow --name-only in combination with --stdin\n  builtin-name-rev.c: split deeply nested part from the main function\n\nConflicts:\n\tDocumentation/git-name-rev.txt\n"
  },
  {
    "commit_hash": "378335b37cd711a44bd4c85d3643db36a7f1ac67",
    "commit_message": "Merge branch 'jc/add-addremove'\n\n* jc/add-addremove:\n  git-add --all: documentation\n  git-add --all: tests\n  git-add --all: add all files\n  builtin-add.c: restructure the code for maintainability\n\nConflicts:\n\tbuiltin-add.c\n"
  },
  {
    "commit_hash": "fa4946b5532ff911565c882892a715616c22cdec",
    "commit_message": "Merge branch 'maint'\n\n* maint:\n  fix usage string for git grep\n  refresh-index: fix bitmask assignment\n\nConflicts:\n\tbuiltin-grep.c\n"
  },
  {
    "commit_hash": "0513f241cc2d757371dc7ba6b065366de044862e",
    "commit_message": "Merge branch 'ls/mailinfo'\n\n* ls/mailinfo:\n  git-mailinfo: use strbuf's instead of fixed buffers\n  Add some useful functions for strbuf manipulation.\n  Make some strbuf_*() struct strbuf arguments const.\n\nConflicts:\n\tbuiltin-mailinfo.c\n"
  },
  {
    "commit_hash": "588c038ac690e012a00dcace34fb318449f5ec7c",
    "commit_message": "Merge branch 'sb/dashless'\n\n* sb/dashless:\n  Make usage strings dash-less\n  t/: Use \"test_must_fail git\" instead of \"! git\"\n  t/test-lib.sh: exit with small negagive int is ok with test_must_fail\n\nConflicts:\n\tbuiltin-blame.c\n\tbuiltin-mailinfo.c\n\tbuiltin-mailsplit.c\n\tbuiltin-shortlog.c\n\tgit-am.sh\n\tt/t4150-am.sh\n\tt/t4200-rerere.sh\n"
  },
  {
    "commit_hash": "5324a6339acfabdb27c9ef410525eb6b82d05002",
    "commit_message": "Merge branch 'rs/rebase-checkout-not-so-quiet'\n\n* rs/rebase-checkout-not-so-quiet:\n  git-rebase: report checkout failure\n\nConflicts:\n\tgit-rebase.sh\n"
  },
  {
    "commit_hash": "88bbda08d7b9503862a8fb8846d78c67825e5e3d",
    "commit_message": "Merge branch 'maint'\n\n* maint:\n  Start preparing 1.5.6.4 release notes\n  git fetch-pack: do not complain about \"no common commits\" in an empty repo\n  rebase-i: keep old parents when preserving merges\n  t7600-merge: Use test_expect_failure to test option parsing\n  Fix buffer overflow in prepare_attr_stack\n  Fix buffer overflow in git diff\n  Fix buffer overflow in git-grep\n  git-cvsserver: fix call to nonexistant cleanupWorkDir()\n  Documentation/git-cherry-pick.txt et al.: Fix misleading -n description\n\nConflicts:\n\tRelNotes\n"
  },
  {
    "commit_hash": "fcab40a389e99786a8276108cdbc1cda8caf502f",
    "commit_message": "Merge branch 'mv/merge-in-c'\n\n* mv/merge-in-c:\n  reduce_heads(): protect from duplicate input\n  reduce_heads(): thinkofix\n  Add a new test for git-merge-resolve\n  t6021: add a new test for git-merge-resolve\n  Teach merge.log to \"git-merge\" again\n  Build in merge\n  Fix t7601-merge-pull-config.sh on AIX\n  git-commit-tree: make it usable from other builtins\n  Add new test case to ensure git-merge prepends the custom merge message\n  Add new test case to ensure git-merge reduces octopus parents when possible\n  Introduce reduce_heads()\n  Introduce get_merge_bases_many()\n  Add new test to ensure git-merge handles more than 25 refs.\n  Introduce get_octopus_merge_bases() in commit.c\n  git-fmt-merge-msg: make it usable from other builtins\n  Move read_cache_unmerged() to read-cache.c\n  Add new test to ensure git-merge handles pull.twohead and pull.octopus\n  Move parse-options's skip_prefix() to git-compat-util.h\n  Move commit_list_count() to commit.c\n  Move split_cmdline() to alias.c\n\nConflicts:\n\tMakefile\n\tparse-options.c\n"
  },
  {
    "commit_hash": "ebcffb1d44643bab69671abdf79209489e64dbef",
    "commit_message": "Merge branch 'js/merge-rr'\n\n* js/merge-rr:\n  Move MERGE_RR from .git/rr-cache/ into .git/\n\nConflicts:\n\tbuiltin-rerere.c\n"
  },
  {
    "commit_hash": "b773fc34a0425790db7fe7c6a2d02d742ff41081",
    "commit_message": "Merge branch 'jc/branch-merged'\n\n* jc/branch-merged:\n  branch --merged/--no-merged: allow specifying arbitrary commit\n  branch --contains: default to HEAD\n  parse-options: add PARSE_OPT_LASTARG_DEFAULT flag\n\nConflicts:\n\tDocumentation/git-branch.txt\n"
  },
  {
    "commit_hash": "948e7471e03340307e802e919303256f80273d21",
    "commit_message": "Merge branch 'sp/maint-pack-memuse'\n\n* sp/maint-pack-memuse:\n  Correct pack memory leak causing git gc to try to exceed ulimit\n\nConflicts:\n\n\tsha1_file.c\n"
  },
  {
    "commit_hash": "8bb65883d164843d5bb7475281af09bae18ab22d",
    "commit_message": "Merge branch 'jc/blame' (early part) into HEAD\n\n* 'jc/blame' (early part):\n  git-blame --reverse\n  builtin-blame.c: allow more than 16 parents\n  builtin-blame.c: move prepare_final() into a separate function.\n  rev-list --children\n  revision traversal: --children option\n\nConflicts:\n\n\tDocumentation/rev-list-options.txt\n\trevision.c\n"
  },
  {
    "commit_hash": "bed625540a0e1a4ba4da9962ed53c1d83d9bf509",
    "commit_message": "Merge branch 'qq/maint'\n\n* qq/maint:\n  run_command(): respect GIT_TRACE\n\nConflicts:\n\n\trun-command.c\n"
  },
  {
    "commit_hash": "17d778e710f9dacc770b5790e792b85cdba75a9d",
    "commit_message": "Merge branch 'dr/ceiling'\n\n* dr/ceiling:\n  Eliminate an unnecessary chdir(\"..\")\n  Add support for GIT_CEILING_DIRECTORIES\n  Fold test-absolute-path into test-path-utils\n  Implement normalize_absolute_path\n\nConflicts:\n\n\tcache.h\n\tsetup.c\n"
  },
  {
    "commit_hash": "5e97f464df082d8f45e163bbf24341dceeafe89d",
    "commit_message": "Merge branch 'db/no-git-config'\n\n* db/no-git-config:\n  Only use GIT_CONFIG in \"git config\", not other programs\n\nConflicts:\n\n\tDocumentation/RelNotes-1.6.0.txt\n"
  },
  {
    "commit_hash": "08b51f51e6a4cf2f5ad4b893707f1337a450e499",
    "commit_message": "Merge branch 'qq/maint'\n\n* qq/maint:\n  clone -q: honor \"quiet\" option over native transports.\n  attribute documentation: keep EXAMPLE at end\n  builtin-commit.c: Use 'git_config_string' to get 'commit.template'\n  http.c: Use 'git_config_string' to clean up SSL config.\n  diff.c: Use 'git_config_string' to get 'diff.external'\n  convert.c: Use 'git_config_string' to get 'smudge' and 'clean'\n  builtin-log.c: Use 'git_config_string' to get 'format.subjectprefix' and 'format.suffix'\n  Documentation cvs: Clarify when a bare repository is needed\n  Documentation: be precise about which date --pretty uses\n\nConflicts:\n\n\tDocumentation/gitattributes.txt\n"
  },
  {
    "commit_hash": "7ac749c96d143ba4f76723959892cbaddbe8ed07",
    "commit_message": "Merge branch 'maint-1.5.5' into maint\n\n* maint-1.5.5:\n  GIT 1.5.5.5\n  GIT 1.5.4.6\n  git-shell: accept \"git foo\" form\n\nConflicts:\n\n\tGIT-VERSION-GEN\n\tRelNotes\n"
  },
  {
    "commit_hash": "53b22a9e45161004ff3260782abc4ee2a5b3e730",
    "commit_message": "Merge branch 'maint-1.5.4' into maint-1.5.5\n\n* maint-1.5.4:\n  GIT 1.5.4.6\n  git-shell: accept \"git foo\" form\n\nConflicts:\n\n\tGIT-VERSION-GEN\n\tRelNotes\n"
  },
  {
    "commit_hash": "e4403d8bd3ccb6bcc3b6569012944d932334f5c4",
    "commit_message": "Merge branch 'sr/tests'\n\n* sr/tests:\n  Hook up the result aggregation in the test makefile.\n  A simple script to parse the results from the testcases\n  Modify test-lib.sh to output stats to t/test-results/*\n\nConflicts:\n\n\tt/test-lib.sh\n"
  },
  {
    "commit_hash": "1947bdbc31e8e1419bdfe90d2357c68919189c30",
    "commit_message": "Merge branch 'mo/status-untracked'\n\n* mo/status-untracked:\n  Add configuration option for default untracked files mode\n  Add argument 'no' commit/status option -u|--untracked-files\n  Add an optional <mode> argument to commit/status -u|--untracked-files option\n\nConflicts:\n\n\tDocumentation/git-commit.txt\n"
  },
  {
    "commit_hash": "8366b7baae7e5a33f609b07c939a3571653a2314",
    "commit_message": "Merge branch 'maint'\n\n* maint:\n  builtin-fast-export: Only output a single parent per line\n  Release Notes for 1.5.5.2\n\nConflicts:\n\n\tRelNotes\n"
  },
  {
    "commit_hash": "9bd81e4249a419f9cde8fd68e033e263533f4914",
    "commit_message": "Merge branch 'js/config-cb'\n\n* js/config-cb:\n  Provide git_config with a callback-data parameter\n\nConflicts:\n\n\tbuiltin-add.c\n\tbuiltin-cat-file.c\n"
  },
  {
    "commit_hash": "0166592495e21b075fa48225ff21568269bf51d4",
    "commit_message": "Merge branch 'jc/add-n-u'\n\n* jc/add-n-u:\n  Make git add -n and git -u -n output consistent\n  \"git-add -n -u\" should not add but just report\n\nConflicts:\n\n\tbuiltin-add.c\n\tbuiltin-mv.c\n\tcache.h\n\tread-cache.c\n"
  },
  {
    "commit_hash": "b84c343c885b8168047b2773b5c597d04337d9bd",
    "commit_message": "Merge branch 'db/clone-in-c'\n\n* db/clone-in-c:\n  Add test for cloning with \"--reference\" repo being a subset of source repo\n  Add a test for another combination of --reference\n  Test that --reference actually suppresses fetching referenced objects\n  clone: fall back to copying if hardlinking fails\n  builtin-clone.c: Need to closedir() in copy_or_link_directory()\n  builtin-clone: fix initial checkout\n  Build in clone\n  Provide API access to init_db()\n  Add a function to set a non-default work tree\n  Allow for having for_each_ref() list extra refs\n  Have a constant extern refspec for \"--tags\"\n  Add a library function to add an alternate to the alternates file\n  Add a lockfile function to append to a file\n  Mark the list of refs to fetch as const\n\nConflicts:\n\n\tcache.h\n\tt/t5700-clone-reference.sh\n"
  },
  {
    "commit_hash": "6c99f18660f62f90b83f0592c81ab6a4092d6d13",
    "commit_message": "Merge branch 'js/cvsexportcommit'\n\n* js/cvsexportcommit:\n  cvsexportcommit: introduce -W for shared working trees (between Git and CVS)\n  cvsexportcommit: chomp only removes trailing whitespace\n\nConflicts:\n\n\tgit-cvsexportcommit.perl\n"
  },
  {
    "commit_hash": "e5e9714a106ab668ac982cf73f31919eb4e354fd",
    "commit_message": "Merge branch 'bc/repack'\n\n* bc/repack:\n  Documentation/git-repack.txt: document new -A behaviour\n  let pack-objects do the writing of unreachable objects as loose objects\n  add a force_object_loose() function\n  builtin-gc.c: deprecate --prune, it now really has no effect\n  git-gc: always use -A when manually repacking\n  repack: modify behavior of -A option to leave unreferenced objects unpacked\n\nConflicts:\n\n\tbuiltin-pack-objects.c\n"
  },
  {
    "commit_hash": "c01cdde1862bc53182b000700462e1119528061e",
    "commit_message": "Merge branch 'jk/maint-send-email-compose'\n\n* jk/maint-send-email-compose:\n  send-email: rfc2047-quote subject lines with non-ascii characters\n  send-email: specify content-type of --compose body\n\nConflicts:\n\n\tt/t9001-send-email.sh\n\nDue to 065096c (git-send-email.perl: Handle shell metacharacters in\n$EDITOR properly, 2008-05-04) which is a backward incompatible change (but\nit makes handling of EDITOR consistent with other parts of the system),\nthe test script t9001 had to be adjusted.\n\nSigned-off-by: Junio C Hamano <gitster@pobox.com>\n"
  },
  {
    "commit_hash": "761adeb4dba3305d0810b5340a71783d29484fb0",
    "commit_message": "Merge branch 'bd/tests'\n\n* bd/tests:\n  Rename the test trash directory to contain spaces.\n  Fix tests breaking when checkout path contains shell metacharacters\n  Don't use the 'export NAME=value' in the test scripts.\n  lib-git-svn.sh: Fix quoting issues with paths containing shell metacharacters\n  test-lib.sh: Fix some missing path quoting\n  Use test_set_editor in t9001-send-email.sh\n  test-lib.sh: Add a test_set_editor function to safely set $VISUAL\n  git-send-email.perl: Handle shell metacharacters in $EDITOR properly\n  config.c: Escape backslashes in section names properly\n  git-rebase.sh: Fix --merge --abort failures when path contains whitespace\n\nConflicts:\n\n\tt/t9115-git-svn-dcommit-funky-renames.sh\n"
  },
  {
    "commit_hash": "41a3e3aa9bdaede9ab7afed206428c1b071060d2",
    "commit_message": "Merge branch 'jc/maint-rebase-am' into maint\n\n* jc/maint-rebase-am:\n  rebase: do not munge commit log message\n\nConflicts:\n\n\tgit-am.sh\n"
  },
  {
    "commit_hash": "8876046037a3064f906d2155ea30cb6db186e409",
    "commit_message": "Merge branch 'jc/maint-rebase-am'\n\n* jc/maint-rebase-am:\n  rebase: do not munge commit log message\n\nConflicts:\n\n\tgit-am.sh\n"
  },
  {
    "commit_hash": "319a36a5c2da8dd07993caac43b7820bff3b0d37",
    "commit_message": "Merge branch 'maint'\n\n* maint:\n  Update draft release notes for 1.5.4.5\n  Documentation: clarify use of .git{ignore,attributes} versus .git/info/*\n  t/t3800-mktag.sh: use test_must_fail rather than '!'\n\nConflicts:\n\n\tt/t3800-mktag.sh\n"
  },
  {
    "commit_hash": "1eaa541f5fbda3fc30085da4f75e99dfae4ec9b3",
    "commit_message": "Merge branch 'maint'\n\n* maint:\n  Start draft ReleaseNotes for 1.5.4.5\n  rebase -m: do not trigger pre-commit verification\n\nConflicts:\n\n\tRelNotes\n"
  },
  {
    "commit_hash": "ae90e16a3a7586bc25b7c7de50e4c3ba4806b3b9",
    "commit_message": "Merge branch 'js/remote'\n\n* js/remote:\n  \"remote update\": print remote name being fetched from\n  builtin remote rm: remove symbolic refs, too\n  remote: fix \"update [group...]\"\n  remote show: Clean up connection correctly if object fetch wasn't done\n  builtin-remote: prune remotes correctly that were added with --mirror\n  Make git-remote a builtin\n  Test \"git remote show\" and \"git remote prune\"\n  parseopt: add flag to stop on first non option\n  path-list: add functions to work with unsorted lists\n\nConflicts:\n\n\tparse-options.c\n"
  },
  {
    "commit_hash": "5d921e2931e5041884d8f86fdccc9004a7b071cc",
    "commit_message": "Merge branch 'jc/cherry-pick' (early part)\n\n* 'jc/cherry-pick' (early part):\n  expose a helper function peel_to_type().\n  merge-recursive: split low-level merge functions out.\n\nConflicts:\n\n\tMakefile\n\tbuiltin-merge-recursive.c\n\tsha1_name.c\n"
  },
  {
    "commit_hash": "274d9d329444705ba771e548352918699e6bb557",
    "commit_message": "Merge branch 'js/maint-cvsexport' into maint\n\n* js/maint-cvsexport:\n  cvsexportcommit: be graceful when \"cvs status\" reorders the arguments\n\nConflicts:\n\n\tt/t9200-git-cvsexportcommit.sh\n"
  },
  {
    "commit_hash": "6b48990354b6380665565f21c3f89d2f7109c459",
    "commit_message": "Merge branch 'maint'\n\n* maint:\n  Update draft release notes for 1.5.4.4\n  revert: actually check for a dirty index\n  tests: introduce test_must_fail\n  git-submodule: Fix typo 'url' which should be '$url'\n  receive-pack: Initialize PATH to include exec-dir.\n\nConflicts:\n\n\tbuiltin-revert.c\n"
  },
  {
    "commit_hash": "c0b48ad777eb8ad42d8d0eafc8f0ee82955b1319",
    "commit_message": "Merge branch 'np/verify-pack'\n\n* np/verify-pack:\n  add storage size output to 'git verify-pack -v'\n  fix unimplemented packed_object_info_detail() features\n  make verify_one_pack() a bit less wrong wrt packed_git structure\n  factorize revindex code out of builtin-pack-objects.c\n\nConflicts:\n\n\tMakefile\n"
  },
  {
    "commit_hash": "b00ac8c729258f7117c74838133d57c40536b48b",
    "commit_message": "Merge branch 'sp/describe-tag'\n\n* sp/describe-tag:\n  Teach git-describe to verify annotated tag names before output\n\nConflicts:\n\n\tbuiltin-describe.c\n"
  },
  {
    "commit_hash": "eadbcd498a18d60467883aeb6c0726048e7382a2",
    "commit_message": "Merge branch 'mk/maint-parse-careful'\n\n* mk/maint-parse-careful:\n  receive-pack: use strict mode for unpacking objects\n  index-pack: introduce checking mode\n  unpack-objects: prevent writing of inconsistent objects\n  unpack-object: cache for non written objects\n  add common fsck error printing function\n  builtin-fsck: move common object checking code to fsck.c\n  builtin-fsck: reports missing parent commits\n  Remove unused object-ref code\n  builtin-fsck: move away from object-refs to fsck_walk\n  add generic, type aware object chain walker\n\nConflicts:\n\n\tMakefile\n\tbuiltin-fsck.c\n"
  },
  {
    "commit_hash": "25c4f61c51a91051dcba3b8bbbac4c61aa69cc19",
    "commit_message": "Merge branch 'maint'\n\n* maint:\n  templates/Makefile: don't depend on local umask setting\n  Correct name of diff_flush() in API documentation\n  Start preparing for 1.5.4.4\n\nConflicts:\n\n\tRelNotes\n"
  },
  {
    "commit_hash": "6d21667206c4c2b10aad99eca1530a4f17c4e61d",
    "commit_message": "Merge branch 'maint'\n\n* maint:\n  Eliminate confusing \"won't bisect on seeked tree\" failure\n  builtin-reflog.c: don't install new reflog on write failure\n  send-email: fix In-Reply-To regression\n  Fix 'git cvsexportcommit -w $cvsdir ...' when used with relative $GIT_DIR\n  Add testcase for 'git cvsexportcommit -w $cvsdir ...' with relative $GIT_DIR\n  Prompt to continue when editing during rebase --interactive\n  Documentation/git svn log: add a note about timezones.\n  Don't use GIT_CONFIG in t5505-remote\n\nConflicts:\n\n\tt/t9001-send-email.sh\n\tt/t9200-git-cvsexportcommit.sh\n"
  },
  {
    "commit_hash": "3d0a936f63f2f894b3986d96cdd8f2baae96150c",
    "commit_message": "Merge branch 'jm/free'\n\n* jm/free:\n  Avoid unnecessary \"if-before-free\" tests.\n\nConflicts:\n\n\tbuiltin-branch.c\n"
  },
  {
    "commit_hash": "60b188a9844cdcf865174c685a38acc053a9d43b",
    "commit_message": "Merge branch 'js/branch-track'\n\n* js/branch-track:\n  doc: documentation update for the branch track changes\n  branch: optionally setup branch.*.merge from upstream local branches\n\nConflicts:\n\n\tDocumentation/config.txt\n\tDocumentation/git-branch.txt\n\tDocumentation/git-checkout.txt\n\tbuiltin-branch.c\n\tcache.h\n\tt/t7201-co.sh\n"
  },
  {
    "commit_hash": "5a4d707a6d914fcea302e299fc18892d9e42c767",
    "commit_message": "Merge branch 'db/checkout'\n\n* db/checkout: (21 commits)\n  checkout: error out when index is unmerged even with -m\n  checkout: show progress when checkout takes long time while switching branches\n  Add merge-subtree back\n  checkout: updates to tracking report\n  builtin-checkout.c: Remove unused prefix arguments in switch_branches path\n  checkout: work from a subdirectory\n  checkout: tone down the \"forked status\" diagnostic messages\n  Clean up reporting differences on branch switch\n  builtin-checkout.c: fix possible usage segfault\n  checkout: notice when the switched branch is behind or forked\n  Build in checkout\n  Move code to clean up after a branch change to branch.c\n  Library function to check for unmerged index entries\n  Use diff -u instead of diff in t7201\n  Move create_branch into a library file\n  Build-in merge-recursive\n  Add \"skip_unmerged\" option to unpack_trees.\n  Discard \"deleted\" cache entries after using them to update the working tree\n  Send unpack-trees debugging output to stderr\n  Add flag to make unpack_trees() not print errors.\n  ...\n\nConflicts:\n\n\tMakefile\n"
  },
  {
    "commit_hash": "992221d05e42ad9f65a88318ca6339aa1c39fc79",
    "commit_message": "Merge branch 'db/cover-letter'\n\n* db/cover-letter:\n  Improve collection of information for format-patch --cover-letter\n  Add API access to shortlog\n  t4014: Replace sed's non-standard 'Q' by standard 'q'\n  Support a --cc=<email> option in format-patch\n  Combine To: and Cc: headers\n  Fix format.headers not ending with a newline\n  Add tests for extra headers in format-patch\n  Add a --cover-letter option to format-patch\n  Export some email and pretty-printing functions\n  Improve message-id generation flow control for format-patch\n  Add more tests for format-patch\n\nConflicts:\n\n\tbuiltin-log.c\n\tbuiltin-shortlog.c\n\tpretty.c\n"
  },
  {
    "commit_hash": "50f3ac29cbadbf7e0ff099b493b00cfa4129e1e0",
    "commit_message": "Merge branch 'bc/reflog-fix' into js/reflog-delete\n\n* bc/reflog-fix: (1490 commits)\n  builtin-reflog.c: don't install new reflog on write failure\n  hash: fix lookup_hash semantics\n  gitweb: Better chopping in commit search results\n  builtin-tag.c: remove cruft\n  git-merge-index documentation: clarify synopsis\n  send-email: fix In-Reply-To regression\n  git-reset --hard and git-read-tree --reset: fix read_cache_unmerged()\n  Teach git-grep --name-only as synonym for -l\n  diff: fix java funcname pattern for solaris\n  t3404: use configured shell instead of /bin/sh\n  git_config_*: don't assume we are parsing a config file\n  prefix_path: use is_absolute_path() instead of *orig == '/'\n  git-clean: handle errors if removing files fails\n  Clarified the meaning of git-add -u in the documentation\n  git-clone.sh: properly configure remote even if remote's head is dangling\n  git.el: Set process-environment instead of invoking env\n  Documentation/git-stash: document options for git stash list\n  send-email: squelch warning due to comparing undefined $_ to \"\"\n  cvsexportcommit: be graceful when \"cvs status\" reorders the arguments\n  Rename git-core rpm to just git and rename the meta-pacakge to git-all.\n  ...\n\nConflicts:\n\n\tDocumentation/git-reflog.txt\n\tt/t1410-reflog.sh\n"
  },
  {
    "commit_hash": "6fe870f032e4a247cdcf2949bb24d103873ff597",
    "commit_message": "Merge branch 'js/maint-cvsexport'\n\n* js/maint-cvsexport:\n  cvsexportcommit: be graceful when \"cvs status\" reorders the arguments\n\nConflicts:\n\n\tt/t9200-git-cvsexportcommit.sh\n"
  },
  {
    "commit_hash": "990732609ce735c482e571ad95767edf1d693b41",
    "commit_message": "Merge branch 'cc/browser'\n\n* cc/browser:\n  Documentation: add 'git-web--browse.txt' and simplify other docs.\n  git-web--browse: fix misplaced quote in init_browser_path()\n  web--browse: Add a few quotes in 'init_browser_path'.\n  Documentation: instaweb: add 'git-web--browse' information.\n  Adjust .gitignore for 5884f1(Rename 'git-help--browse.sh'...)\n  git-web--browse: do not start the browser with nohup\n  instaweb: use 'git-web--browse' to launch browser.\n  Rename 'git-help--browse.sh' to 'git-web--browse.sh'.\n  help--browse: add '--config' option to check a config option for a browser.\n  help: make 'git-help--browse' usable outside 'git-help'.\n\nConflicts:\n\n\tgit-web--browse.sh\n"
  },
  {
    "commit_hash": "fef1c4c0a0766b83cfacaf6276d7bd0d1aa9a2e4",
    "commit_message": "Merge branch 'jk/noetcconfig'\n\n* jk/noetcconfig:\n  fix config reading in tests\n  allow suppressing of global and system config\n\nConflicts:\n\n\tcache.h\n"
  },
  {
    "commit_hash": "4eb39e9bcccc54eb23af8a7e2676c63e5bf32866",
    "commit_message": "Merge branch 'jc/spht'\n\n* jc/spht:\n  Use gitattributes to define per-path whitespace rule\n  core.whitespace: documentation updates.\n  builtin-apply: teach whitespace_rules\n  builtin-apply: rename \"whitespace\" variables and fix styles\n  core.whitespace: add test for diff whitespace error highlighting\n  git-diff: complain about >=8 consecutive spaces in initial indent\n  War on whitespace: first, a bit of retreat.\n\nConflicts:\n\n\tcache.h\n\tconfig.c\n\tdiff.c\n"
  },
  {
    "commit_hash": "c78a24986d4d3faff810e87dbcd0ac99f0eabbce",
    "commit_message": "Merge branch 'jc/maint-add-sync-stat'\n\n* jc/maint-add-sync-stat:\n  t2200: test more cases of \"add -u\"\n  git-add: make the entry stat-clean after re-adding the same contents\n  ce_match_stat, run_diff_files: use symbolic constants for readability\n\nConflicts:\n\n\tbuiltin-add.c\n"
  },
  {
    "commit_hash": "fb5fd011482b5aa0b340a4a5bd9192c0efc1edb7",
    "commit_message": "Merge branch 'maint'\n\n* maint:\n  git-clean: honor core.excludesfile\n  Documentation: Fix man page breakage with DocBook XSL v1.72\n  git-remote.txt: fix typo\n  core-tutorial.txt: Fix argument mistake in an example.\n  replace reference to git-rm with git-reset in git-commit doc\n  Grammar fixes for gitattributes documentation\n  Don't allow fast-import tree delta chains to exceed maximum depth\n  revert/cherry-pick: allow starting from dirty work tree.\n  t/t3404: fix test for a bogus todo file.\n\nConflicts:\n\n\tfast-import.c\n"
  },
  {
    "commit_hash": "bcd2e266a6270254212603e90186251116d3cd16",
    "commit_message": "Merge branch 'aw/mirror-push' into jk/send-pack\n\n* aw/mirror-push:\n  git-push: add documentation for the newly added --mirror mode\n  Add tests for git push'es mirror mode\n  git-push: plumb in --mirror mode\n  Teach send-pack a mirror mode\n  send-pack: segfault fix on forced push\n  send-pack: require --verbose to show update of tracking refs\n  receive-pack: don't mention successful updates\n  more terse push output\n\nConflicts:\n\n\ttransport.c\n\ttransport.h\n"
  },
  {
    "commit_hash": "a108e5386122c75a350e9a191fc727895941ddff",
    "commit_message": "Merge branch 'db/remote-builtin' into jk/send-pack\n\n* db/remote-builtin:\n  Reteach builtin-ls-remote to understand remotes\n  Build in ls-remote\n  Use built-in send-pack.\n  Build-in send-pack, with an API for other programs to call.\n  Build-in peek-remote, using transport infrastructure.\n  Miscellaneous const changes and utilities\n\nConflicts:\n\n\ttransport.c\n"
  },
  {
    "commit_hash": "02273fdbd07ddaa13a232db0ae63a720c4a013f0",
    "commit_message": "Merge branch 'jc/revert-merge'\n\n* jc/revert-merge:\n  cherry-pick/revert -m: add tests\n  revert/cherry-pick: work on merge commits as well\n\nConflicts:\n\n\tbuiltin-revert.c\n"
  },
  {
    "commit_hash": "e091653951ae516a923338874bfe550894cd1bc9",
    "commit_message": "Merge branch 'np/pack'\n\n* np/pack:\n  pack-objects: get rid of an ugly cast\n  make the pack index version configurable\n\nConflicts:\n\n\tbuiltin-pack-objects.c\n"
  },
  {
    "commit_hash": "3d66dc9657f195cb241387a87bcdd5709abd8a21",
    "commit_message": "Merge branch 'ph/parseopt'\n\n* ph/parseopt: (24 commits)\n  gc: use parse_options\n  Fixed a command line option type for builtin-fsck.c\n  Make builtin-pack-refs.c use parse_options.\n  Make builtin-name-rev.c use parse_options.\n  Make builtin-count-objects.c use parse_options.\n  Make builtin-fsck.c use parse_options.\n  Update manpages to reflect new short and long option aliases\n  Make builtin-for-each-ref.c use parse-opts.\n  Make builtin-symbolic-ref.c use parse_options.\n  Make builtin-update-ref.c use parse_options\n  Make builtin-revert.c use parse_options.\n  Make builtin-describe.c use parse_options\n  Make builtin-branch.c use parse_options.\n  Make builtin-mv.c use parse-options\n  Make builtin-rm.c use parse_options.\n  Port builtin-add.c to use the new option parser.\n  parse-options: allow callbacks to take no arguments at all.\n  parse-options: Allow abbreviated options when unambiguous\n  Add shortcuts for very often used options.\n  parse-options: make some arguments optional, add callbacks.\n  ...\n\nConflicts:\n\n\tMakefile\n\tbuiltin-add.c\n"
  },
  {
    "commit_hash": "4340a813d007b592534de664d152d66417dbe809",
    "commit_message": "Merge branch 'js/forkexec'\n\n* js/forkexec:\n  Use the asyncronous function infrastructure to run the content filter.\n  Avoid a dup2(2) in apply_filter() - start_command() can do it for us.\n  t0021-conversion.sh: Test that the clean filter really cleans content.\n  upload-pack: Run rev-list in an asynchronous function.\n  upload-pack: Move the revision walker into a separate function.\n  Use the asyncronous function infrastructure in builtin-fetch-pack.c.\n  Add infrastructure to run a function asynchronously.\n  upload-pack: Use start_command() to run pack-objects in create_pack_file().\n  Have start_command() create a pipe to read the stderr of the child.\n  Use start_comand() in builtin-fetch-pack.c instead of explicit fork/exec.\n  Use run_command() to spawn external diff programs instead of fork/exec.\n  Use start_command() to run content filters instead of explicit fork/exec.\n  Use start_command() in git_connect() instead of explicit fork/exec.\n  Change git_connect() to return a struct child_process instead of a pid_t.\n\nConflicts:\n\n\tbuiltin-fetch-pack.c\n"
  },
  {
    "commit_hash": "9c51414f8efb73525a6c69917f1499dab081679d",
    "commit_message": "Merge branch 'maint' into HEAD\n\n* maint:\n  Update GIT 1.5.3.5 Release Notes\n  git-rebase--interactive.sh: Make 3-way merge strategies work for -p.\n  git-rebase--interactive.sh: Don't pass a strategy to git-cherry-pick.\n  Fix --strategy parsing in git-rebase--interactive.sh\n  Make merge-recursive honor diff.renamelimit\n  cherry-pick/revert: more compact user direction message\n  core-tutorial: Use new syntax for git-merge.\n  git-merge: document but discourage the historical syntax\n  Prevent send-pack from segfaulting (backport from 'master')\n  Documentation/git-cvsexportcommit.txt: s/mgs/msg/ in example\n\nConflicts:\n\n\tgit-rebase--interactive.sh\n"
  },
  {
    "commit_hash": "f4e9996b77415707a20a139463c3e3782e2fa48f",
    "commit_message": "Merge branch 'maint'\n\n* maint:\n  git-gui: Make sure we get errors from git-update-index\n\nConflicts:\n\n\tlib/index.tcl\n"
  },
  {
    "commit_hash": "c9dcc7f865fb7891f4f6d068230663eb2cb586a7",
    "commit_message": "Merge branch 'maint'\n\n* maint:\n  git-gui: Don't display CR within console windows\n  git-gui: Handle progress bars from newer gits\n  git-gui: Correctly report failures from git-write-tree\n\nConflicts:\n\n\tlib/commit.tcl\n\tlib/console.tcl\n"
  },
  {
    "commit_hash": "2e13e5d89252ceef606a0a7be32dbf5bea7e5aca",
    "commit_message": "Merge branch 'master' into db/fetch-pack\n\nThere's a number of tricky conflicts between master and\nthis topic right now due to the rewrite of builtin-push.\nJunio must have handled these via rerere; I'd rather not\ndeal with them again so I'm pre-merging master into the\ntopic.  Besides this topic somehow started to depend on\nthe strbuf series that was in next, but is now in master.\nIt no longer compiles on its own without the strbuf API.\n\n* master: (184 commits)\n  Whip post 1.5.3.4 maintenance series into shape.\n  Minor usage update in setgitperms.perl\n  manual: use 'URL' instead of 'url'.\n  manual: add some markup.\n  manual: Fix example finding commits referencing given content.\n  Fix wording in push definition.\n  Fix some typos, punctuation, missing words, minor markup.\n  manual: Fix or remove em dashes.\n  Add a --dry-run option to git-push.\n  Add a --dry-run option to git-send-pack.\n  Fix in-place editing functions in convert.c\n  instaweb: support for Ruby's WEBrick server\n  instaweb: allow for use of auto-generated scripts\n  Add 'git-p4 commit' as an alias for 'git-p4 submit'\n  hg-to-git speedup through selectable repack intervals\n  git-svn: respect Subversion's [auth] section configuration values\n  gtksourceview2 support for gitview\n  fix contrib/hooks/post-receive-email hooks.recipients error message\n  Support cvs via git-shell\n  rebase -i: use diff plumbing instead of porcelain\n  ...\n\nConflicts:\n\n\tMakefile\n\tbuiltin-push.c\n\trsh.c\n"
  },
  {
    "commit_hash": "d55e7c3acf72413563e695a19f7f66efac442064",
    "commit_message": "Merge branch 'maint'\n\n* maint:\n  Whip post 1.5.3.4 maintenance series into shape.\n  rebase -i: use diff plumbing instead of porcelain\n  Do not remove distributed configure script\n  git-archive: document --exec\n  git-reflog: document --verbose\n  git-config: handle --file option with relative pathname properly\n  clear_commit_marks(): avoid deep recursion\n  git add -i: Remove unused variables\n  git add -i: Fix parsing of abbreviated hunk headers\n  git-config: don't silently ignore options after --list\n  Clean up \"git log\" format with DIFF_FORMAT_NO_OUTPUT\n  Fix embarrassing \"git log --follow\" bug\n\nConflicts:\n\n\tRelNotes\n\tgit-rebase--interactive.sh\n"
  },
  {
    "commit_hash": "e73bfa7709b108575e6ea73d6e97fc3efd967b38",
    "commit_message": "Merge branch 'maint'\n\n* maint:\n  git-gui: Don't crash when starting gitk from a browser session\n  git-gui: Allow gitk to be started on Cygwin with native Tcl/Tk\n\nConflicts:\n\n\tgit-gui.sh\n"
  },
  {
    "commit_hash": "61ab92df40b2c256299ad3d812ee0de14353098d",
    "commit_message": "Merge branch 'jc/autogc' into js/rebase-i\n\n* jc/autogc:\n  git-gc --auto: run \"repack -A -d -l\" as necessary.\n  git-gc --auto: restructure the way \"repack\" command line is built.\n  git-gc --auto: protect ourselves from accumulated cruft\n  git-gc --auto: add documentation.\n  git-gc --auto: move threshold check to need_to_gc() function.\n  repack -A -d: use --keep-unreachable when repacking\n  pack-objects --keep-unreachable\n  Export matches_pack_name() and fix its return value\n  Invoke \"git gc --auto\" from commit, merge, am and rebase.\n  Implement git gc --auto\n\nConflicts:\n\n\tbuiltin-pack-objects.c\n"
  },
  {
    "commit_hash": "f31c14b30b49f76330e6e7c192865e0230dec8c9",
    "commit_message": "Merge branch 'maint'\n\n* maint:\n  git-gui: Ensure .git/info/exclude is honored in Cygwin workdirs\n  git-gui: Handle starting on mapped shares under Cygwin\n  git-gui: Display message box when we cannot find git in $PATH\n\nConflicts:\n\n\tgit-gui.sh\n"
  },
  {
    "commit_hash": "704396bc2a13f8843689d3fab2211a0b2f364652",
    "commit_message": "Merge branch 'maint'\n\n* maint:\n  git-gui: Disable native platform text selection in \"lists\"\n\nConflicts:\n\n\tlib/browser.tcl\n"
  },
  {
    "commit_hash": "4b08aa3fef4258bf27f1bfa11fb9c0a8315c61aa",
    "commit_message": "Merge branch 'maint'\n\n* maint:\n  git-gui: Properly set the state of \"Stage/Unstage Hunk\" action\n  git-gui: Fix detaching current branch during checkout\n  git-gui: Correct starting of git-remote to handle -w option\n\nConflicts:\n\n\tgit-gui.sh\n"
  },
  {
    "commit_hash": "5071877d2c623ffc41b48bbb49908a61051a6228",
    "commit_message": "Merge branch 'maint'\n\nConflicts:\n\n\tDocumentation/user-manual.txt\n"
  },
  {
    "commit_hash": "f8186e92e3399ddd742f2397e802467cabf2849f",
    "commit_message": "Merge branch 'maint'\n\n* maint:\n  git-gui: Ensure windows shortcuts always have .bat extension\n  git-gui: Include a Push action on the left toolbar\n  git-gui: Bind M1-P to push action\n  git-gui: Don't bind F5/M1-R in all windows\n\nConflicts:\n\n\tgit-gui.sh\n"
  },
  {
    "commit_hash": "e1341abc3759950e891822088cb0163b71b316b3",
    "commit_message": "Merge branch 'master' of git://git.kernel.org/pub/scm/gitk/gitk into pm/gitk\n\n* 'master' of git://git.kernel.org/pub/scm/gitk/gitk: (21 commits)\n  gitk: Add a progress bar to show progress while resetting\n  gitk: Improve handling of whitespace and special chars in filenames\n  gitk: Fix bug causing nearby tags/heads to sometimes not be displayed\n  gitk: Limit how often we change the canvas scrolling region\n  gitk: Add a \"reset branch to here\" row context-menu operation\n  gitk: Get rid of the childlist variable\n  gitk: Speed up the reading of references\n  gitk: Show local uncommitted changes as a fake commit\n  gitk: New algorithm for drawing the graph lines\n  gitk: Store ids in rowrangelist and idrowranges rather than row numbers\n  gitk: Disable the head context menu entries for the checked-out branch\n  gitk: Cope with commit messages with carriage-returns and initial blank lines\n  gitk: Implement a simple scheduler for the compute-intensive stuff\n  gitk: Improve the behaviour of the initial selection\n  gitk: Add some more comments to the optimize_rows procedure\n  gitk: Don't try to list large numbers of tags or heads in the details pane\n  gitk: New infrastructure for working out branches & previous/next tags\n  [PATCH] gitk: Allow specifying tabstop as other than default 8 characters.\n  [PATCH] gitk: Update fontsize in patch / tree list\n  [PATCH] gitk: Make selection highlight color configurable\n  ...\n\nConflicts:\n\n\tgitk\n"
  },
  {
    "commit_hash": "03f6db0ec058ca1d34672a3100293c3bf56c3b6b",
    "commit_message": "Merge branch 'maint' to synchronize with 1.5.1.6\n\n* maint:\n  GIT 1.5.1.6\n  git-svn: don't minimize-url when doing an init that tracks multiple paths\n  git-svn: avoid crashing svnserve when creating new directories\n  user-manual: Add section on ignoring files\n  user-manual: finding commits referencing given file content\n  user-manual: discourage shared repository\n  tutorial: revise index introduction\n  tutorials: add user-manual links\n\nConflicts:\n\n\tGIT-VERSION-GEN\n\tRelNotes\n"
  },
  {
    "commit_hash": "6169a89c4fd29cf9c747bab7bd310877328bc7e2",
    "commit_message": "Merge branch 'maint'\n\n* maint:\n  Start preparing for 1.5.1.3\n  Sanitize @to recipients.\n  git-svn: Ignore usernames in URLs in find_by_url\n  Document --dry-run and envelope-sender for git-send-email.\n  Allow users to optionally specify their envelope sender.\n  Ensure clean addresses are always used with Net::SMTP\n  Validate @recipients before using it for sendmail and Net::SMTP.\n  Perform correct quoting of recipient names.\n  Change the scope of the $cc variable as it is not needed outside of send_message.\n  Debugging cleanup improvements\n  Prefix Dry- to the message status to denote dry-runs.\n  Document --dry-run parameter to send-email.\n  git-svn: Don't rely on $_ after making a function call\n  Fix handle leak in write_tree\n  Actually handle some-low memory conditions\n\nConflicts:\n\n\tRelNotes\n\tgit-send-email.perl\n"
  },
  {
    "commit_hash": "520d7e278cfd25057e883575060b7378dfab61dc",
    "commit_message": "Merge branch 'maint'\n\n* maint:\n  Documentation/git-reset.txt: suggest git commit --amend in example.\n  Build RPM with ETC_GITCONFIG=/etc/gitconfig\n  Ignore all man sections as they are generated files.\n  Fix typo in git-am: s/Was is/Was it/\n  Reverse the order of -b and --track in the man page.\n  dir.c(common_prefix): Fix two bugs\n\nConflicts:\n\n\tgit.spec.in\n"
  },
  {
    "commit_hash": "abbf594763a14e9c00c61f688e45bed636f1eb52",
    "commit_message": "Merge branch 'fl/cvsserver'\n\n* fl/cvsserver:\n  config.txt: Add gitcvs.db* variables\n  cvsserver: Document the GIT branches -> CVS modules mapping more prominently\n  cvsserver: Reword documentation on necessity of write access\n  cvsserver: Allow to \"add\" a removed file\n  cvsserver: Add asciidoc documentation for new database backend configuration\n  cvsserver: Corrections to the database backend configuration\n  cvsserver: Use DBI->table_info instead of DBI->tables\n  cvsserver: Abort if connect to database fails\n  cvsserver: Make the database backend configurable\n  cvsserver: Allow to override the configuration per access method\n  cvsserver: Handle three part keys in git config correctly\n  cvsserver: Introduce new state variable 'method'\n\nConflicts:\n\n\tDocumentation/config.txt\n"
  },
  {
    "commit_hash": "86da9dec0af55d8212b37337911cd93214b8f00f",
    "commit_message": "Merge branch 'maint'\n\n* maint:\n  Start preparing for 1.5.1.2\n  git-svn: quiet some warnings when run only with --version/--help\n  git-svn: respect lower bound of -r/--revision when following parent\n\nConflicts:\n\n\tRelNotes\n"
  },
  {
    "commit_hash": "ee9693e246669f48f6b058a1044cefa973a44c22",
    "commit_message": "Merge branch 'jc/index-output'\n\n* jc/index-output:\n  git-read-tree --index-output=<file>\n  _GIT_INDEX_OUTPUT: allow plumbing to output to an alternative index file.\n\nConflicts:\n\n\tbuiltin-apply.c\n"
  },
  {
    "commit_hash": "ced38ea252cb8b0315f4d2a54648b11c6c090657",
    "commit_message": "Merge branch 'maint'\n\n* maint:\n  Documentation: tighten dependency for git.{html,txt}\n  Makefile: iconv() on Darwin has the old interface\n  t5300-pack-object.sh: portability issue using /usr/bin/stat\n  t3200-branch.sh: small language nit\n  usermanual.txt: some capitalization nits\n  Make builtin-branch.c handle the git config file\n  rename_ref(): only print a warning when config-file update fails\n  Distinguish branches by more than case in tests.\n  Avoid composing too long \"References\" header.\n  cvsimport: Improve formating consistency\n  cvsimport: Reorder options in documentation for better understanding\n  cvsimport: Improve usage error reporting\n  cvsimport: Improve documentation of CVSROOT and CVS module determination\n  cvsimport: sync usage lines with existing options\n\nConflicts:\n\n\tDocumentation/Makefile\n"
  },
  {
    "commit_hash": "3ddad98b74924d76116d05e7601ab1e163d68500",
    "commit_message": "Merge branch 'js/fetch-progress' (early part)\n\n* 'js/fetch-progress' (early part):\n  Fixup no-progress for fetch & clone\n  fetch & clone: do not output progress when not on a tty\n\nConflicts:\n\n\tgit-fetch.sh\n"
  },
  {
    "commit_hash": "8a13becc0dd4c8876ebf471bf880446c1a10b7e9",
    "commit_message": "Merge branch 'maint'\n\n* maint:\n  diff-patch: Avoid emitting double-slashes in textual patch.\n  Reword git-am 3-way fallback failure message.\n  Limit filename for format-patch\n  core.legacyheaders: Use the description used in RelNotes-1.5.0\n  git-show-ref --verify: Fail if called without a reference\n\nConflicts:\n\n\tbuiltin-show-ref.c\n\tdiff.c\n"
  },
  {
    "commit_hash": "f5a92647694f18fb3544060a1a964ac082d072b2",
    "commit_message": "Merge branch 'maint'\n\n* maint:\n  GIT 1.5.0.1\n  Documentation/i18n.txt: it is i18n.commitencoding not core.commitencoding\n  Read the config in rev-list\n\nConflicts:\n\n\tRelNotes\n"
  },
  {
    "commit_hash": "76db9dec8132d4377f6c32e4d45eb75fa0cc7a9a",
    "commit_message": "Merge branch 'master' into sp/gfi\n\ngit-fast-import requires use of inttypes.h, but the master branch has\nadded it to git-compat-util differently than git-fast-import originally\nhad used it.  This merge back of master to the fast-import topic is to\nget (and use) inttypes.h the way master is using it.\n\nThis is a partially evil merge to remove the call to setup_ident(),\nas the master branch now contains a change which makes this implicit\nand therefore removed the function declaration. (commit 01754769).\n\nConflicts:\n\n\tgit-compat-util.h"
  },
  {
    "commit_hash": "cf2999eb4cbe39d5a40add574be9e5c019df758b",
    "commit_message": "Merge branch 'sp/mmap'\n\n* sp/mmap: (27 commits)\n  Spell default packedgitlimit slightly differently\n  Increase packedGit{Limit,WindowSize} on 64 bit systems.\n  Update packedGit config option documentation.\n  mmap: set FD_CLOEXEC for file descriptors we keep open for mmap()\n  pack-objects: fix use of use_pack().\n  Fix random segfaults in pack-objects.\n  Cleanup read_cache_from error handling.\n  Replace mmap with xmmap, better handling MAP_FAILED.\n  Release pack windows before reporting out of memory.\n  Default core.packdGitWindowSize to 1 MiB if NO_MMAP.\n  Test suite for sliding window mmap implementation.\n  Create pack_report() as a debugging aid.\n  Support unmapping windows on 'temporary' packfiles.\n  Improve error message when packfile mmap fails.\n  Ensure core.packedGitWindowSize cannot be less than 2 pages.\n  Load core configuration in git-verify-pack.\n  Fully activate the sliding window pack access.\n  Unmap individual windows rather than entire files.\n  Document why header parsing won't exceed a window.\n  Loop over pack_windows when inflating/accessing data.\n  ...\n\nConflicts:\n\n\tcache.h\n\tpack-check.c\n"
  },
  {
    "commit_hash": "eff73751bb94b0241fd2204effb8680fe9973cbf",
    "commit_message": "Merge branch 'jc/utf8'\n\n* jc/utf8:\n  t3900: test conversion to non UTF-8 as well\n  Rename t3900 test vector file\n  UTF-8: introduce i18n.logoutputencoding.\n  Teach log family --encoding\n  i18n.logToUTF8: convert commit log message to UTF-8\n  Move encoding conversion routine out of mailinfo to utf8.c\n\nConflicts:\n\n\tcommit.c\n"
  },
  {
    "commit_hash": "abcb49cb56fc6fa047a8838cd47fbdfa48791798",
    "commit_message": "Merge branch 'lh/branch-rename'\n\n* lh/branch-rename:\n  git-branch: let caller specify logmsg\n  rename_ref: use lstat(2) when testing for symlink\n  git-branch: add options and tests for branch renaming\n\nConflicts:\n\n\tbuiltin-branch.c\n"
  },
  {
    "commit_hash": "1349f8771310987dd07b679a512e46e1b17e2b8d",
    "commit_message": "Merge branch 'maint'\n\n* maint:\n  git-svn: correctly display fatal() error messages\n  git-svn: exit with status 1 for test failures\n\nConflicts:\n\n\tgit-svn.perl\n\nnothing to commit\n"
  },
  {
    "commit_hash": "fa2376f3c89ae59f33e50e0e5769dec2652e9568",
    "commit_message": "Merge branch 'maint'\n\n* maint:\n  Clarify fetch error for missing objects.\n  Move Fink and Ports check to after config file\n\nConflicts:\n\n\tMakefile\n"
  },
  {
    "commit_hash": "ba988a83f0cfdafdcfdc7ed44253840ea83578fb",
    "commit_message": "Merge branch 'maint'\n\n* maint:\n  receive-pack: do not insist on fast-forward outside refs/heads/\n  git-mv: search more precisely for source directory in index\n\nConflicts:\n\n\treceive-pack.c\n"
  },
  {
    "commit_hash": "72bbc38b0a458439f670932ecfb33226e6a9479a",
    "commit_message": "Merge branch 'mw/pathinfo'\n\n* mw/pathinfo:\n  gitweb: Fix search form when PATH_INFO is enabled\n  gitweb: Document features better\n  gitweb: warn if feature cannot be overridden.\n  gitweb: start to generate PATH_INFO URLs.\n\nConflicts:\n\n\tgitweb/README\n"
  },
  {
    "commit_hash": "4b4a5dbb17e1136275665024689625ed5cc5a03d",
    "commit_message": "Merge branch 'jc/blame' into jc/web-blame\n\n* jc/blame:\n  git-blame --porcelain\n  blame.c: move code to output metainfo into a separate function.\n  git-blame: --show-number (and -n)\n  git-blame: --show-name (and -f)\n  blame.c: whitespace and formatting clean-up.\n  gitweb: Make the Git logo link target to point to the homepage\n  gitweb: blame: Minimize vertical table row padding\n  gitweb: Do not print \"log\" and \"shortlog\" redundantly in commit view\n  vc-git.el: Switch to using git-blame instead of git-annotate.\n  git.el: Fixed inverted \"renamed from/to\" message.\n  tar-tree deprecation: we eat our own dog food.\n  Add git-upload-archive to the main git man page\n  git-commit: cleanup unused function.\n  Fix usage string to match that given in the man page\n  Update the gitweb/README file to include setting the GITWEB_CONFIG environment\n\nConflicts:\n\n\tgitweb/gitweb.perl\n"
  },
  {
    "commit_hash": "96535e615db869f096686b0ce8e79e30dec7ad25",
    "commit_message": "Merge branch 'master' into new\n\nConflicts:\n\n\tgitk\n"
  },
  {
    "commit_hash": "3f69d405d749742945afd462bff6541604ecd420",
    "commit_message": "Merge branch 'jc/cache-tree'\n\n* jc/cache-tree: (26 commits)\n  builtin-rm: squelch compiler warnings.\n  git-write-tree writes garbage on sparc64\n  Fix crash when reading the empty tree\n  fsck-objects: do not segfault on missing tree in cache-tree\n  cache-tree: a bit more debugging support.\n  read-tree: invalidate cache-tree entry when a new index entry is added.\n  Fix test-dump-cache-tree in one-tree disappeared case.\n  fsck-objects: mark objects reachable from cache-tree\n  cache-tree: replace a sscanf() by two strtol() calls\n  cache-tree.c: typefix\n  test-dump-cache-tree: validate the cached data as well.\n  cache_tree_update: give an option to update cache-tree only.\n  read-tree: teach 1-way merege and plain read to prime cache-tree.\n  read-tree: teach 1 and 2 way merges about cache-tree.\n  update-index: when --unresolve, smudge the relevant cache-tree entries.\n  test-dump-cache-tree: report number of subtrees.\n  cache-tree: sort the subtree entries.\n  Teach fsck-objects about cache-tree.\n  index: make the index file format extensible.\n  cache-tree: protect against \"git prune\".\n  ...\n\nConflicts:\n\n\tMakefile, builtin.h, git.c: resolved the same way as in next.\n"
  },
  {
    "commit_hash": "0a2586c807fadc4b13a741e693471765870f6bb4",
    "commit_message": "Merge branch 'lt/tree' into jc/lt-tree-n-cache-tree\n\n* lt/tree: (98 commits)\n  Remove \"tree->entries\" tree-entry list from tree parser\n  Switch \"read_tree_recursive()\" over to tree-walk functionality\n  Make \"tree_entry\" have a SHA1 instead of a union of object pointers\n  Add raw tree buffer info to \"struct tree\"\n  Don't use \"sscanf()\" for tree mode scanning\n  git-fetch: avoid using \"case ... in (arm)\"\n  mailinfo: skip bogus UNIX From line inside body\n  mailinfo: More carefully parse header lines in read_one_header_line()\n  Allow in body headers beyond the in body header prefix.\n  More accurately detect header lines in read_one_header_line\n  In handle_body only read a line if we don't already have one.\n  Refactor commit messge handling.\n  Move B and Q decoding into check header.\n  Make read_one_header_line return a flag not a length.\n  Fix memory leak in \"git rev-list --objects\"\n  gitview: Move the console error messages to message dialog\n  gitview: Add key binding for F5.\n  Let git-clone to pass --template=dir option to git-init-db.\n  Make cvsexportcommit create parent directories as needed.\n  Document current cvsexportcommit limitations.\n  ...\n\nConflicts:\n\n\tMakefile, builtin.h, git.c are trivially resolved.\n\tbuiltin-read-tree.c needed adjustment for the tree\n\tparser change.\n"
  },
  {
    "commit_hash": "93872e07008510340eec951f0d037f7b3a0b8567",
    "commit_message": "Merge branch 'lt/dirwalk' into jc/dirwalk-n-cache-tree\n\nThis commit is what this branch is all about.  It records the\nevil merge needed to adjust built-in git-add and git-rm for\nthe cache-tree extension.\n\n* lt/dirwalk:\n  Add builtin \"git rm\" command\n  Move pathspec matching from builtin-add.c into dir.c\n  Prevent bogus paths from being added to the index.\n  builtin-add: fix unmatched pathspec warnings.\n  Remove old \"git-add.sh\" remnants\n  builtin-add: warn on unmatched pathspecs\n  Do \"git add\" as a builtin\n  Clean up git-ls-file directory walking library interface\n  libify git-ls-files directory traversal\n\nConflicts:\n\n\tMakefile\n\tbuiltin.h\n\tgit.c\n\tupdate-index.c\n"
  },
  {
    "commit_hash": "aedb8995f841949ce29e05ea7e5c03c2d5466089",
    "commit_message": "Merge branch 'ew/pretty-fmt' into next\n\n* ew/pretty-fmt:\n  commit: allow --pretty= args to be abbreviated\n\nConflicts:\n\n\tcommit.c - adjust to --pretty=email\n"
  },
  {
    "commit_hash": "91efcf60653b2538b05625807293b97c07cb04f4",
    "commit_message": "Merge branch 'master' into jc/fmt-patch\n\n* master:\n  Split up builtin commands into separate files from git.c\n  git-log produces no output\n  fix pack-object buffer size\n  mailinfo: decode underscore used in \"Q\" encoding properly.\n  Reintroduce svn pools to solve the memory leak.\n  pack-objects: do not stop at object that is \"too small\"\n  git-commit --amend: two fixes.\n  get_tree_entry(): make it available from tree-walk\n  sha1_name.c: no need to include diff.h; tree-walk.h will do.\n  sha1_name.c: prepare to make get_tree_entry() reusable from others.\n  get_sha1() shorthands for blob/tree objects\n  pre-commit hook: complain about conflict markers.\n  git-merge: a bit more readable user guidance.\n  diff: move diff.c to diff-lib.c to make room.\n  git log: don't do merge diffs by default\n  Allow \"git repack\" users to specify repacking window/depth\n  Document git-clone --reference\n  Fix filename scaling for binary files\n  Fix uninteresting tags in new revision parsing\n\nConflicts:\n\n    Adjusted the addition of fmt-patch to match the recent split\n    from git.c to builtin.log.c.\n"
  },
  {
    "commit_hash": "8a414ad50cd9edfe6c8f0a6b9b08df4aaa9ccb75",
    "commit_message": "Merge branch 'jc/empty'\n\n* jc/empty:\n  revision traversal: --remove-empty fix (take #2).\n  revision traversal: --remove-empty fix.\n\nConflicts:\n\n\trevision.c (adjust for the updates by Fredrik)\n"
  },
  {
    "commit_hash": "6a9b87972f27edfe53da4ce016adf4c0cd42f5e6",
    "commit_message": "Merge some proposed fixes\n\nConflicts:\n\n\tDocumentation/git-commit.txt - taking the post 1.2.0 semantics.\n\nSigned-off-by: Junio C Hamano <junkio@cox.net>\n"
  }
]